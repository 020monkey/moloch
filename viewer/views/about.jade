- var range = "<, <=, ==, >=, >, !=";
div(style="margin:10px")
  p
    img(src="moloch_77.png", style="float: left;margin:4px;")
    | Moloch is a open source large scale IPv4 PCAP capturing, indexing and database system.  A simple web interface is provided for PCAP browsing, searching, and exporting.  APIs are exposed that allow PCAP data and JSON formatted session data to be downloaded directly. Simple security is implemented by using https and HTTP digest password support.  Moloch is not meant to replace IDS engines but instead work along side them to store and index all the network traffic in standard PCAP format, providing fast access.  Moloch is built to be deployed across many machines and can scale to handle multiple megabits/sec of traffic.
  p Moloch uses a very simple query language for building expresions.  It supports grouping using parenthesis and logical AND and OR using && and || respectively.  Most fields can be accessed directly using the field names and operators described in the table below.
  table(border=1)
    tr
      th Name
      th Operators
      th Data type
      th What?
    tr
      td asn
      td.
        ==, !=
      td Autonomous System Number String
      td Shorthand for the Maxmind GeoIP ASNum string from the asn.src, asn.dst, asn.dns, or asn.xff fields<br>Examples:asn == as12345, asn == AOL
    tr
      td asn.src
      td.
        ==, !=
      td Autonomous System Number String
      td Maxmind GeoIP ASNum string calculated from the source ip address<br>Examples:asn.src == as12345, asn.src == AOL
    tr
      td asn.dst
      td.
        ==, !=
      td Autonomous System Number String
      td Maxmind GeoIP ASNum string calculated from the destination ip address<br>Examples:asn.dst == as12345, asn.dst == AOL
    tr
      td asn.dns
      td.
        ==, !=
      td Autonomous System Number String
      td Maxmind GeoIP ASNum string calculated from all the ip addresses in a DNS request<br>Examples:asn.dns == as12345, asn.dns == AOL
    tr
      td asn.xff
      td.
        ==, !=
      td Autonomous System Number String
      td Maxmind GeoIP ASNum string calculated from all the ip addresses in a http XFF header<br>Examples:asn.xff == as12345, asn.xff == AOL
    tr
      td bytes
      td #{range}
      td integer
      td Number of raw bytes sent/received in a session<br>Example:bytes &gt; 1000 && bytes &lt; 2000
    tr
      td cert.issuer.cn
      td.
        ==, !=
      td string or quoted string
      td The issuer common name in the certs
    tr
      td cert.issuer.on
      td.
        ==, !=
      td string or quoted string
      td The issuer object name in the certs
    tr
      td cert.subject.cn
      td.
        ==, !=
      td string or quoted string
      td The subject common name in the certs
    tr
      td cert.subject.on
      td.
        ==, !=
      td string or quoted string
      td The subject object name in the certs
    tr
      td cert.serial
      td.
        ==, !=
      td string or quoted string
      td The serial number in the certs
    tr
      td cert.alt
      td.
        ==, !=
      td string or quoted string
      td The cert alternative names in the cert
    tr
      td cert.alt.cnt
      td #{range}
      td integer
      td Number of unique alternative names in a certs
    tr
      td cert.cnt
      td #{range}
      td integer
      td Number of unique certs for the session
    tr
      td country
      td.
        ==, !=
      td 3 character country string
      td Shorthand for the Maxmind GeoIP string of country.src, country.dst, country.dns, or country.xff<br>Examples:country == USA, country == *SA
    tr
      td country.src
      td.
        ==, !=
      td 3 character country string
      td Maxmind GeoIP country string calculated from the source ip<br>Examples:country.src == USA, country.src != *SA
    tr
      td country.dst
      td.
        ==, !=
      td 3 character country string
      td Maxmind GeoIP country string calculated from the  destination ip<br>Examples:country.dst == USA, country.dst != *SA
    tr
      td country.dns
      td.
        ==, !=
      td 3 character country string
      td Maxmind GeoIP country string calculated from the ips in DNS requests<br>Examples:country.dns == USA, country.dns != *SA
    tr
      td country.xff
      td.
        ==, !=
      td 3 character country string
      td Maxmind GeoIP country string calculated from all the ip addresses in a http XFF header<br>Examples:country == USA, country != *SA
    tr
      td databytes
      td #{range}
      td integer
      td Number of databytes sent/received in a session<br>databytes &gt;= 2000
    tr
      td email.ct
      td.
        ==, !=
      td string or quoted string
      td Matches the Content-Type header for all emails in a session
    tr
      td email.ct.cnt
      td #{range}
      td integer
      td Number of unique content-type headers in a session
    tr
      td email.dst
      td.
        ==, !=
      td string or quoted string
      td Matches the various recipient headers for all emails in a session
    tr
      td email.dst.cnt
      td #{range}
      td integer
      td Number of unique recipient addresses for all emails in a session
    tr
      td email.fn
      td.
        ==, !=
      td string or quoted string
      td Matches the unique filenames attached to mails
    tr
      td email.fn.cnt
      td #{range}
      td integer
      td Number of unique filenames attached to mails
    tr
      td email.md5
      td.
        ==, !=
      td string or quoted string
      td Matches the unique md5s of files attached to mails
    tr
      td email.fn.cnt
      td #{range}
      td integer
      td Number of unique md5s of files attached to mails
    tr
      td email.mv
      td.
        ==, !=
      td string or quoted string
      td Matches the Mime-Version header for all emails in a session
    tr
      td email.mv.cnt
      td #{range}
      td integer
      td Number of unique Mime-Version headers in a session
    tr
      td email.src
      td.
        ==, !=
      td string or quoted string
      td Matches the various sender headers for all emails in a session
    tr
      td email.src.cnt
      td #{range}
      td integer
      td Number of unique sender addresses for all emails in a session
    tr
      td email.subject
      td.
        ==, !=
      td string or quoted string
      td Matches the Subject header for all emails in a session
    tr
      td email.subject.cnt
      td #{range}
      td integer
      td Number of unique Subject headers in a session
    tr
      td email.ua
      td.
        ==, !=
      td string or quoted string
      td Matches the X-Mailer header for all emails in a session
    tr
      td email.ua.cnt
      td #{range}
      td integer
      td Number of unique X-Mailer headers in a session
    tr
      td header
      td.
        ==, !=
      td string or quoted string
      td Shorthand for the lowercased http request and response headers for the session<br>Examples: header == *length, header != content-length
    tr
      td header.src
      td.
        ==, !=
      td string or quoted string
      td The lowercased http request headers for the session<br>Examples: header.src == *length, header.src != content-length
    tr
      td header.src.cnt
      td #{range}
      td integer
      td Number of unique http request headers
    tr
      td header.dst
      td.
        ==, !=
      td string or quoted string
      td The lowercased http response headers for the session<br>Examples: header.dst == *length, header.dst != content-length
    tr
      td header.dst.cnt
      td #{range}
      td integer
      td Number of unique http response headers
    tr
      td host
      td.
        ==, !=
      td string
      td host from HTTP request Host header or DNS query<br>Example:host == *net
    tr
      td host.cnt
      td #{range}
      td integer
      td Number of unique host header or DNS queries
    tr
      td ip
      td.
        ==, !=
      td a[.b[.c[.d]]][/n][:port]
      td Matches ip addresses and optionally port using short hand and/or /n notation for src, dst, xff, and dns.<br>Examples: ip==10.10.10.10, ip!=10.10.10.0/24:80, ip==10.10.10:80
    tr
      td ip.src
      td.
        ==, !=
      td a[.b[.c[.d]]][/n][:port]
      td Matches ip addresses and optionally port using short hand and/or /n notation for address1.<br>Examples: ip.src==10.10.10.10, ip.src!=10.10.10.0/24:80, ip.src==10.10.10:80
    tr
      td ip.dst
      td.
        ==, !=
      td a[.b[.c[.d]]][/n][:port]
      td Matches ip addresses and optionally port using short hand and/or /n notation for address2.<br>Examples: ip.dst==10.10.10.10, ip.dst==10.10.10.0/24:80, ip.dst==10.10.10:80
    tr
      td ip.dns
      td.
        ==, !=
      td a[.b[.c[.d]]][/n]
      td Matches ip addresses using short hand and/or /n notation for IPs found in DNS requests.<br>Examples: ip.dns==10.10.10.10, ip.dns==10.10.10.0/24, ip.dns==10.10.10
    tr
      td ip.dns.cnt
      td #{range}
      td integer
      td Number of unique dns ips
    tr
      td ip.xff
      td.
        ==, !=
      td a[.b[.c[.d]]][/n]
      td Matches ip addresses using short hand and/or /n notation for xff addresses.<br>Examples: ip.xff==10.10.10.10, ip.xff==10.10.10/24, ip.xff==10.10.10
    tr
      td ip.xff.cnt
      td #{range}
      td integer
      td Number of unique xff ips
    tr
      td node
      td.
        ==, !=
      td string
      td Moloch node the session was captured on.<br>Examples:node == node1, node != *1
    tr
      td packets
      td #{range}
      td integer
      td Number of packets in the session.<br>Example: packets &lt; 10
    tr
      td port
      td #{range}
      td integer
      td Source port or destination port of the sessions.<br>Example:port == 80
    tr
      td port.src
      td #{range}
      td integer
      td Source port of the sessions.<br>Example:port.src == 80
    tr
      td port.dst
      td #{range}
      td integer
      td Destination port of the sessions.<br>Example:port.dst == 80
    tr
      td protocol
      td #{range}
      td integer | == tcp | == udp
      td IP packet protocol
    tr
      td tags
      td.
        ==, !=
      td string or quoted string
      td Matches against the tags for the session<br>Examples: tags != *gzip, tags == http:method:CONNECT
    tr
      td tags.cnt
      td #{range}
      td integer
      td Number of unique tags for the session
    tr
      td ssh.key
      td.
        ==, !=
      td string or quoted string
      td Matches against the base64 host key<br>Examples: ssh.key == "longbase64string"
    tr
      td ssh.key.cnt
      td #{range}
      td integer
      td Number of unique ssh host keys for the session, should be 0 or 1
    tr
      td ssh.ver
      td.
        ==, !=
      td string or quoted string
      td Matches against the client and server ssh banner protocol string 
    tr
      td ssh.key.cnt
      td #{range}
      td integer
      td Number of unique ssh version strings, should be 1 or 2
    tr
      td ua
      td.
        ==, !=
      td string or quoted string
      td Matches against the User Agent for the http request<br>ua == Java
    tr
      td ua.cnt
      td #{range}
      td integer
      td Number of unique user agents for the session
    tr
      td uri
      td.
        ==, !=
      td string or quoted string
      td Matches against the URIs for the session<br>Example:uri == facebook.com
    tr
      td uri.cnt
      td #{range}
      td integer
      td Number of unique URIs for the session
    tr
      td user
      td.
        ==, !=
      td string or quoted string
      td If a user is set for the session<br>Example:user == andy

  h2 Examples
  p 1) Find all the sessions involving RUS or CHN and on port 80 and the hostname contains com
  code (country == rus || country == chn) && port == 80 && host == *com
  p 2) Context type of text/plain, involving Canda, and less then 20 packets
  code tags == "http:content:text/plain" && country == CAN && packets < 20
