extends layout

block content
  h2 Change settings for #{suser.userId} (#{suser.userName})
  form#changeSettings
    input(type='hidden', id='token', name='token', value='#{token}')
    label(for='timezone') Timezone format:
    select#timezone.setting(name="timezone")
      option(value="local", selected=suser.settings.timezone=="local") local time
      option(value="gmt", selected=suser.settings.timezone=="gmt") gmt time
    br
    label(for='detailFormat') Session Detail Format:
    select#detailFormat.setting(name="detailFormat")
      option(value="last", selected=suser.settings.detailFormat=="last") last used
      option(value="natural", selected=suser.settings.detailFormat=="natural") natural
      option(value="ascii", selected=suser.settings.detailFormat=="ascii") ascii
      option(value="utf8", selected=suser.settings.detailFormat=="utf8") utf8
      option(value="hex", selected=suser.settings.detailFormat=="hex") hex
    br
    label(for='showTimestamps') Show Timestamps:
    select#showTimestamps.setting(name="showTimestamps")
      option(value="last", selected=suser.settings.showTimestamps=="last") last used
      option(value="true", selected=suser.settings.showTimestamps=="true") on
      option(value="false", selected=suser.settings.showTimestamps=="false") off
    br
    label(for='sortColumn') Sessions Sort Column:
    select#sortColumn.setting(name="sortColumn")
      option(value="start", selected=suser.settings.sortColumn=="start") Start Time
      option(value="stop", selected=suser.settings.sortColumn=="stop") Stop Time
      option(value="srcip", selected=suser.settings.sortColumn=="srcip") Src IP
      option(value="srcport", selected=suser.settings.sortColumn=="srcport") Src Port
      option(value="dstip", selected=suser.settings.sortColumn=="dstip") Dst IP
      option(value="dstport", selected=suser.settings.sortColumn=="dstport") Dst Port
      option(value="packets", selected=suser.settings.sortColumn=="packets") Packets
      option(value="bytes", selected=suser.settings.sortColumn=="bytes") Bytes
      option(value="node", selected=suser.settings.sortColumn=="node") Node
    select#sortDirection.setting(name="sortDirection")
      option(value="asc", selected=suser.settings.sortDirection=="asc") Ascending
      option(value="desc", selected=suser.settings.sortDirection=="desc") Descending

  h2 Change password for #{suser.userId} (#{suser.userName})
  form#changePassword
    - if (currentPassword)
      label(for='currentPassword') Current Password:
      input(type='password', id='currentPassword', name='currentPassword', size='30')
      br 
    label(for='newPassword') New Password:
    input(type='password', id='newPassword', name='newPassword', size='30')
    br
    label(for='newPassword2') New Password:
    input(type='password', id='newPassword2', name='newPassword2', size='30')
    input(type='hidden', id='token', name='token', value='#{token}')
    br 
    button#change Change

  script(type='text/javascript').

    $('#changePassword').submit(function() {
      if ($("#newPassword").val() != $("#newPassword2").val()) {
        alert("New passwords don't match");
        return false;
      }

      $.ajax( {
        "dataType": 'json',
        "type": "POST",
        "url": "#{basePath}changePassword",
        "data": $("#changePassword").serialize(),
        "success": function(data) {
          if (!data.success) {
            alert(data.text);
          } else {
            alert("Password changed.");
            history.back();
          }
        }
      });
      return false;
    });

    $('.setting').live('change', function (e) {
      $.ajax( {
        "dataType": 'json',
        "type": "POST",
        "url": "#{basePath}changeSettings",
        "data": $("#changeSettings").serialize(),
        "success": function(data) {
          if (!data.success) {
            alert(data.text);
          }
        }
      });
    });
