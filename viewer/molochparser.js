/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"IPMATCHLIST":15,"NUMBER":16,"NUMBERLIST":17,"HEADER":18,"EMAIL_HEADER":19,"HTTP_HEADER":20,"HEADER_CNT":21,"EMAIL_HEADER_CNT":22,"HTTP_HEADER_CNT":23,"RANGEFIELD":24,"databytes":25,"bytes":26,"packets":27,"port.dst":28,"port.socks":29,"port.src":30,"http.uri.cnt":31,"http.uri.key.cnt":32,"http.uri.path.cnt":33,"http.uri.value.cnt":34,"cert.cnt":35,"ip.dns.cnt":36,"ip.email.cnt":37,"ip.xff.cnt":38,"http.md5.cnt":39,"http.user-agent.cnt":40,"http.version.src.cnt":41,"http.version.dst.cnt":42,"user.cnt":43,"host.dns.cnt":44,"host.email.cnt":45,"host.http.cnt":46,"http.hasheader.src.cnt":47,"http.hasheader.dst.cnt":48,"tags.cnt":49,"email.content-type.cnt":50,"email.dst.cnt":51,"email.fn.cnt":52,"email.message-id.cnt":53,"email.md5.cnt":54,"email.mime-version.cnt":55,"email.src.cnt":56,"email.subject.cnt":57,"email.x-mailer.cnt":58,"cert.alt.cnt":59,"smb.domain.cnt":60,"smb.fn.cnt":61,"smb.host.cnt":62,"smb.os.cnt":63,"smb.share.cnt":64,"smb.user.cnt":65,"smb.ver.cnt":66,"ssh.key.cnt":67,"ssh.ver.cnt":68,"irc.nick.cnt":69,"irc.channel.cnt":70,"LOTERMFIELD":71,"node":72,"host.dns":73,"host.socks":74,"host.email":75,"host.http":76,"user":77,"email.dst":78,"email.src":79,"cert.subject.cn":80,"cert.issuer.cn":81,"cert.serial":82,"cert.alt":83,"ssh.ver":84,"TERMFIELD":85,"id":86,"ssh.key":87,"email.message-id":88,"email.md5":89,"email.mime-version":90,"email.fn":91,"email.content-type":92,"http.md5":93,"http.uri.key":94,"http.uri.path":95,"http.uri.value":96,"http.version.src":97,"http.version.dst":98,"irc.nick":99,"irc.channel":100,"rootId":101,"smb.domain":102,"smb.fn":103,"smb.host":104,"smb.os":105,"smb.share":106,"smb.user":107,"smb.ver":108,"UPTERMFIELD":109,"country.dns":110,"country.dst":111,"country.email":112,"country.socks":113,"country.src":114,"country.xff":115,"rir.dns":116,"rir.dst":117,"rir.email":118,"rir.socks":119,"rir.src":120,"rir.xff":121,"LOTEXTFIELD":122,"asn.src":123,"asn.dst":124,"asn.dns":125,"asn.email":126,"asn.socks":127,"asn.xff":128,"email.subject":129,"email.x-mailer":130,"cert.subject.on":131,"cert.issuer.on":132,"TEXTFIELD":133,"http.uri":134,"http.user-agent":135,"IPFIELD":136,"ip":137,"ip.src":138,"ip.dst":139,"ip.xff":140,"ip.dns":141,"ip.email":142,"ip.socks":143,"STR":144,"ID":145,"asn":146,"dns":147,"dst":148,"email":149,"src":150,"xff":151,"cert":152,"alt":153,"cnt":154,"issuer":155,"cn":156,"on":157,"serial":158,"subject":159,"country":160,"ua":161,"header":162,"host":163,"http":164,"md5":165,"uri":166,"icmp":167,"socks":168,"port":169,"protocol":170,"rir":171,"ssh":172,"key":173,"ver":174,"tags":175,"tcp":176,"udp":177,"QUOTEDSTR":178,"REGEXSTR":179,"LOWERLIST":180,"ANYLIST":181,"PROTOCOLNUMBER":182,"PROTOCOLLIST":183,"&&":184,"||":185,"!":186,"-":187,"(":188,")":189,"==":190,"!=":191,"file":192,"http.hasheader":193,"http.hasheader.src":194,"http.hasheader.dst":195,"http.version":196,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"IPMATCHLIST",16:"NUMBER",17:"NUMBERLIST",19:"EMAIL_HEADER",20:"HTTP_HEADER",22:"EMAIL_HEADER_CNT",23:"HTTP_HEADER_CNT",25:"databytes",26:"bytes",27:"packets",28:"port.dst",29:"port.socks",30:"port.src",31:"http.uri.cnt",32:"http.uri.key.cnt",33:"http.uri.path.cnt",34:"http.uri.value.cnt",35:"cert.cnt",36:"ip.dns.cnt",37:"ip.email.cnt",38:"ip.xff.cnt",39:"http.md5.cnt",40:"http.user-agent.cnt",41:"http.version.src.cnt",42:"http.version.dst.cnt",43:"user.cnt",44:"host.dns.cnt",45:"host.email.cnt",46:"host.http.cnt",47:"http.hasheader.src.cnt",48:"http.hasheader.dst.cnt",49:"tags.cnt",50:"email.content-type.cnt",51:"email.dst.cnt",52:"email.fn.cnt",53:"email.message-id.cnt",54:"email.md5.cnt",55:"email.mime-version.cnt",56:"email.src.cnt",57:"email.subject.cnt",58:"email.x-mailer.cnt",59:"cert.alt.cnt",60:"smb.domain.cnt",61:"smb.fn.cnt",62:"smb.host.cnt",63:"smb.os.cnt",64:"smb.share.cnt",65:"smb.user.cnt",66:"smb.ver.cnt",67:"ssh.key.cnt",68:"ssh.ver.cnt",69:"irc.nick.cnt",70:"irc.channel.cnt",72:"node",73:"host.dns",74:"host.socks",75:"host.email",76:"host.http",77:"user",78:"email.dst",79:"email.src",80:"cert.subject.cn",81:"cert.issuer.cn",82:"cert.serial",83:"cert.alt",84:"ssh.ver",86:"id",87:"ssh.key",88:"email.message-id",89:"email.md5",90:"email.mime-version",91:"email.fn",92:"email.content-type",93:"http.md5",94:"http.uri.key",95:"http.uri.path",96:"http.uri.value",97:"http.version.src",98:"http.version.dst",99:"irc.nick",100:"irc.channel",101:"rootId",102:"smb.domain",103:"smb.fn",104:"smb.host",105:"smb.os",106:"smb.share",107:"smb.user",108:"smb.ver",110:"country.dns",111:"country.dst",112:"country.email",113:"country.socks",114:"country.src",115:"country.xff",116:"rir.dns",117:"rir.dst",118:"rir.email",119:"rir.socks",120:"rir.src",121:"rir.xff",123:"asn.src",124:"asn.dst",125:"asn.dns",126:"asn.email",127:"asn.socks",128:"asn.xff",129:"email.subject",130:"email.x-mailer",131:"cert.subject.on",132:"cert.issuer.on",134:"http.uri",135:"http.user-agent",137:"ip",138:"ip.src",139:"ip.dst",140:"ip.xff",141:"ip.dns",142:"ip.email",143:"ip.socks",145:"ID",146:"asn",147:"dns",148:"dst",149:"email",150:"src",151:"xff",152:"cert",153:"alt",154:"cnt",155:"issuer",156:"cn",157:"on",158:"serial",159:"subject",160:"country",161:"ua",162:"header",163:"host",164:"http",165:"md5",166:"uri",167:"icmp",168:"socks",169:"port",170:"protocol",171:"rir",172:"ssh",173:"key",174:"ver",175:"tags",176:"tcp",177:"udp",178:"QUOTEDSTR",179:"REGEXSTR",180:"LOWERLIST",181:"ANYLIST",184:"&&",185:"||",186:"!",187:"-",188:"(",189:")",190:"==",191:"!=",192:"file",193:"http.hasheader",194:"http.hasheader.src",195:"http.hasheader.dst",196:"http.version"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[13,1],[13,1],[18,1],[18,1],[21,1],[21,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[109,1],[109,1],[109,1],[109,1],[109,1],[109,1],[109,1],[109,1],[109,1],[109,1],[109,1],[109,1],[122,1],[122,1],[122,1],[122,1],[122,1],[122,1],[122,1],[122,1],[122,1],[122,1],[133,1],[133,1],[136,1],[136,1],[136,1],[136,1],[136,1],[136,1],[136,1],[144,1],[144,1],[144,2],[144,2],[144,2],[144,2],[144,2],[144,1],[144,2],[144,3],[144,2],[144,3],[144,3],[144,2],[144,3],[144,3],[144,1],[144,2],[144,2],[144,2],[144,2],[144,2],[144,2],[144,3],[144,2],[144,3],[144,2],[144,3],[144,2],[144,3],[144,1],[144,2],[144,3],[144,2],[144,3],[144,1],[144,2],[144,2],[144,3],[144,2],[144,3],[144,2],[144,3],[144,1],[144,1],[144,2],[144,3],[144,2],[144,2],[144,3],[144,2],[144,2],[144,2],[144,3],[144,1],[144,1],[144,1],[144,2],[144,2],[144,2],[144,1],[144,1],[144,2],[144,2],[144,2],[144,2],[144,2],[144,2],[144,2],[144,3],[144,2],[144,3],[144,1],[144,2],[144,1],[144,1],[144,2],[144,1],[144,1],[144,2],[144,1],[144,1],[144,1],[144,1],[144,1],[144,1],[144,1],[144,1],[182,1],[182,1],[182,1],[182,1],[183,1],[183,1],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 16:this.$ = 'db'
break;
case 17:this.$ = 'by'
break;
case 18:this.$ = 'pa'
break;
case 19:this.$ = 'p2'
break;
case 20:this.$ = 'sockspo'
break;
case 21:this.$ = 'p1'
break;
case 22:this.$ = 'uscnt'
break;
case 23:this.$ = 'hkeycnt'
break;
case 24:this.$ = 'hpathcnt'
break;
case 25:this.$ = 'hvalcnt'
break;
case 26:this.$ = 'tlscnt'
break;
case 27:this.$ = 'dnsipcnt'
break;
case 28:this.$ = 'eipcnt'
break;
case 29:this.$ = 'xffscnt'
break;
case 30:this.$ = 'hmd5cnt'
break;
case 31:this.$ = 'uacnt'
break;
case 32:this.$ = 'hsvercnt'
break;
case 33:this.$ = 'hdvercnt'
break;
case 34:this.$ = 'usercnt'
break;
case 35:this.$ = 'dnshocnt'
break;
case 36:this.$ = 'ehocnt'
break;
case 37:this.$ = 'hocnt'
break;
case 38:this.$ = 'hh1cnt'
break;
case 39:this.$ = 'hh2cnt'
break;
case 40:this.$ = 'tacnt'
break;
case 41:this.$ = 'ectcnt'
break;
case 42:this.$ = 'edstcnt'
break;
case 43:this.$ = 'efncnt'
break;
case 44:this.$ = 'eidcnt'
break;
case 45:this.$ = 'emd5cnt'
break;
case 46:this.$ = 'emvcnt'
break;
case 47:this.$ = 'esrccnt'
break;
case 48:this.$ = 'esubcnt'
break;
case 49:this.$ = 'euacnt'
break;
case 50:this.$ = 'tls.altcnt'
break;
case 51:this.$ = 'smbdmcnt'
break;
case 52:this.$ = 'smbfncnt'
break;
case 53:this.$ = 'smbhocnt'
break;
case 54:this.$ = 'smboscnt'
break;
case 55:this.$ = 'smbsharecnt'
break;
case 56:this.$ = 'smbusercnt'
break;
case 57:this.$ = 'smbvercnt'
break;
case 58:this.$ = 'sshkeycnt'
break;
case 59:this.$ = 'sshvercnt'
break;
case 60:this.$ = 'ircnckcnt'
break;
case 61:this.$ = 'ircchcnt'
break;
case 62:this.$ = 'no'
break;
case 63:this.$ = 'dnsho'
break;
case 64:this.$ = 'socksho'
break;
case 65:this.$ = 'eho'
break;
case 66:this.$ = 'ho'
break;
case 67:this.$ = 'user'
break;
case 68:this.$ = 'edst'
break;
case 69:this.$ = 'esrc'
break;
case 70:this.$ = 'tls.sCn'
break;
case 71:this.$ = 'tls.iCn'
break;
case 72:this.$ = 'tls.sn'
break;
case 73:this.$ = 'tls.alt'
break;
case 74:this.$ = 'sshver'
break;
case 75:this.$ = '_id'
break;
case 76:this.$ = 'sshkey'
break;
case 77:this.$ = 'eid'
break;
case 78:this.$ = 'emd5'
break;
case 79:this.$ = 'emv'
break;
case 80:this.$ = 'efn'
break;
case 81:this.$ = 'ect'
break;
case 82:this.$ = 'hmd5'
break;
case 83:this.$ = 'hkey'
break;
case 84:this.$ = 'hpath'
break;
case 85:this.$ = 'hval'
break;
case 86:this.$ = 'hsver'
break;
case 87:this.$ = 'hdver'
break;
case 88:this.$ = 'ircnck'
break;
case 89:this.$ = 'ircch'
break;
case 90:this.$ = 'ro'
break;
case 91:this.$ = 'smbdm'
break;
case 92:this.$ = 'smbfn'
break;
case 93:this.$ = 'smbho'
break;
case 94:this.$ = 'smbos'
break;
case 95:this.$ = 'smbsh'
break;
case 96:this.$ = 'smbuser'
break;
case 97:this.$ = 'smbver'
break;
case 98:this.$ = 'gdnsip'
break;
case 99:this.$ = 'g2'
break;
case 100:this.$ = 'geip'
break;
case 101:this.$ = 'gsocksip'
break;
case 102:this.$ = 'g1'
break;
case 103:this.$ = 'gxff'
break;
case 104:this.$ = 'rirdnsip'
break;
case 105:this.$ = 'rir2'
break;
case 106:this.$ = 'rireip'
break;
case 107:this.$ = 'rirsocksip'
break;
case 108:this.$ = 'rir1'
break;
case 109:this.$ = 'rirxff'
break;
case 110:this.$ = 'as1'
break;
case 111:this.$ = 'as2'
break;
case 112:this.$ = 'asdnsip'
break;
case 113:this.$ = 'aseip'
break;
case 114:this.$ = 'assocksip'
break;
case 115:this.$ = 'asxff'
break;
case 116:this.$ = 'esub'
break;
case 117:this.$ = 'eua'
break;
case 118:this.$ = 'tls.sOn'
break;
case 119:this.$ = 'tls.iOn'
break;
case 120:this.$ = 'us'
break;
case 121:this.$ = 'ua'
break;
case 122:this.$ = 0
break;
case 123:this.$ = 1
break;
case 124:this.$ = 2
break;
case 125:this.$ = 3
break;
case 126:this.$ = 4
break;
case 127:this.$ = 5
break;
case 128:this.$ = 6
break;
case 223:this.$ = {bool: {must: [$$[$0-2], $$[$0]]}};
break;
case 224:this.$ = {bool: {should: [$$[$0-2], $$[$0]]}};
break;
case 225:this.$ = {not: $$[$0]};
break;
case 226:this.$ = -$$[$0];
break;
case 227:this.$ = $$[$0-1];
break;
case 228:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 229:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 230:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 231:this.$ = {terms: {}};
         this.$.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 232:this.$ = {not: {terms: {}}};
         this.$.not.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 233:this.$ = {term: {pr: protocolLookup($$[$0])}};
break;
case 234:this.$ = {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}};
break;
case 235:this.$ = {not: {term: {pr: protocolLookup($$[$0])}}};
break;
case 236:this.$ = {not: {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}}};
break;
case 237:this.$ = {bool: {should: [{range: {p1: {}}}, {range: {p2: {}}}]}};
         this.$.bool.should[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.bool.should[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 238:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toLowerCase())};
break;
case 239:this.$ = str2Query($$[$0-2], "term", $$[$0].toLowerCase());
break;
case 240:this.$ = {not: str2Query($$[$0-2], "term", $$[$0])};
break;
case 241:this.$ = str2Query($$[$0-2], "term", $$[$0]);
break;
case 242:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toUpperCase())};
break;
case 243:this.$ = str2Query($$[$0-2], "term", $$[$0].toUpperCase());
break;
case 244:this.$ = {not: str2Query($$[$0-2], "text", $$[$0].toLowerCase())};
break;
case 245:this.$ = str2Query($$[$0-2], "text", $$[$0].toLowerCase());
break;
case 246:this.$ = {not: str2Query($$[$0-2], "text", $$[$0])};
break;
case 247:this.$ = str2Query($$[$0-2], "text", $$[$0]);
break;
case 248:this.$ = str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0]);
break;
case 249:this.$ = {not: str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0])};
break;
case 250:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 251:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 252: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 253:
        this.$ = {terms: {}};
        this.$.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 254: this.$ = {not: {terms: {}}};
          this.$.not.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 255:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 256:this.$ = {bool: {should: [
                                {term: {p1: $$[$0]}},
                                {term: {p2: $$[$0]}},
                                {term: {sockspo: $$[$0]}}
                              ]}};
break;
case 257:this.$ = {bool: {should: [
                                {terms: {p1: CSVtoArray($$[$0])}},
                                {terms: {p2: CSVtoArray($$[$0])}},
                                {terms: {sockspo: CSVtoArray($$[$0])}}
                              ]}};
break;
case 258:this.$ = {bool: {must_not: [
                                  {term: {p1: $$[$0]}}, 
                                  {term: {p2: $$[$0]}},
                                  {term: {sockspo: $$[$0]}}
                                ]}};
break;
case 259:this.$ = {bool: {must_not: [
                                  {terms: {p1: CSVtoArray($$[$0])}}, 
                                  {terms: {p2: CSVtoArray($$[$0])}},
                                  {terms: {sockspo: CSVtoArray($$[$0])}}
                                ]}};
break;
case 260:this.$ = parseIpPort(yy, $$[$0],$$[$0-2]);
break;
case 261:this.$ = {not: parseIpPort(yy, $$[$0],$$[$0-2])};
break;
case 262: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("ta", tag);
        
break;
case 263: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("ta", tag)};
        
break;
case 264: var file = stripQuotes($$[$0]);
          this.$ = {fileand: file};
        
break;
case 265: var file = stripQuotes($$[$0]);
          this.$ = {not: {fileand: file}};
        
break;
case 266: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {should: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 267: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh1", tag);
        
break;
case 268: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh2", tag);
        
break;
case 269: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {must_not: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 270: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh1", tag)};
        
break;
case 271: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh2", tag)};
        
break;
case 272:
          this.$ = [str2Query("hsver", "term", $$[$0]),
                str2Query("hdver", "term", $$[$0])
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 273:
          this.$ = [str2Query("hsver", "term", $$[$0]),
                str2Query("hdver", "term", $$[$0])
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 274: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("g1", "term", str),
                str2Query("g2", "term", str),
                str2Query("gdnsip", "term", str),
                str2Query("geip", "term", str),
                str2Query("gsocksip", "term", str),
                str2Query("gxff", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 275: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("g1", "term", str),
                str2Query("g2", "term", str),
                str2Query("gdnsip", "term", str),
                str2Query("geip", "term", str),
                str2Query("gsocksip", "term", str),
                str2Query("gxff", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 276: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("rir1", "term", str),
                str2Query("rir2", "term", str),
                str2Query("rirxff", "term", str),
                str2Query("rirdnsip", "term", str),
                str2Query("rirsocksip", "term", str),
                str2Query("rireip", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 277: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("rir1", "term", str),
                str2Query("rir2", "term", str),
                str2Query("rirxff", "term", str),
                str2Query("rirdnsip", "term", str),
                str2Query("rirsocksip", "term", str),
                str2Query("rireip", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 278: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("as1", "text", str),
                str2Query("as2", "text", str),
                str2Query("aseip", "text", str),
                str2Query("asdnsip", "text", str),
                str2Query("assocksip", "text", str),
                str2Query("asxff", "text", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 279: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("as1", "text", str),
                str2Query("as2", "text", str),
                str2Query("asdnsip", "text", str),
                str2Query("aseip", "text", str),
                str2Query("assocksip", "text", str),
                str2Query("asxff", "text", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 280: var str = $$[$0].toLowerCase();

          this.$ = [str2Query("ho", "term", str),
                str2Query("dnsho", "term", str),
                str2Query("eho", "term", str),
                str2Query("socksho", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 281: var str = $$[$0].toLowerCase();

          this.$ = [str2Query("ho", "term", str),
                str2Query("dnsho", "term", str),
                str2Query("eho", "term", str),
                str2Query("socksho", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
}
},
table: [{3:1,4:2,18:14,19:[1,133],20:[1,134],21:15,22:[1,135],23:[1,136],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:9,72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:[1,83],83:[1,84],84:[1,85],85:10,86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:11,110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:[1,115],117:[1,116],118:[1,117],119:[1,118],120:[1,119],121:[1,120],122:12,123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:[1,125],128:[1,126],129:[1,127],130:[1,128],131:[1,129],132:[1,130],133:13,134:[1,131],135:[1,132],136:16,137:[1,137],138:[1,138],139:[1,139],140:[1,140],141:[1,141],142:[1,142],143:[1,143],146:[1,25],160:[1,23],163:[1,26],169:[1,8],170:[1,7],171:[1,24],175:[1,17],186:[1,3],187:[1,4],188:[1,5],192:[1,18],193:[1,19],194:[1,20],195:[1,21],196:[1,22]},{1:[3]},{5:[1,144],184:[1,145],185:[1,146]},{4:147,18:14,19:[1,133],20:[1,134],21:15,22:[1,135],23:[1,136],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:9,72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:[1,83],83:[1,84],84:[1,85],85:10,86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:11,110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:[1,115],117:[1,116],118:[1,117],119:[1,118],120:[1,119],121:[1,120],122:12,123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:[1,125],128:[1,126],129:[1,127],130:[1,128],131:[1,129],132:[1,130],133:13,134:[1,131],135:[1,132],136:16,137:[1,137],138:[1,138],139:[1,139],140:[1,140],141:[1,141],142:[1,142],143:[1,143],146:[1,25],160:[1,23],163:[1,26],169:[1,8],170:[1,7],171:[1,24],175:[1,17],186:[1,3],187:[1,4],188:[1,5],192:[1,18],193:[1,19],194:[1,20],195:[1,21],196:[1,22]},{4:148,18:14,19:[1,133],20:[1,134],21:15,22:[1,135],23:[1,136],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:9,72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:[1,83],83:[1,84],84:[1,85],85:10,86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:11,110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:[1,115],117:[1,116],118:[1,117],119:[1,118],120:[1,119],121:[1,120],122:12,123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:[1,125],128:[1,126],129:[1,127],130:[1,128],131:[1,129],132:[1,130],133:13,134:[1,131],135:[1,132],136:16,137:[1,137],138:[1,138],139:[1,139],140:[1,140],141:[1,141],142:[1,142],143:[1,143],146:[1,25],160:[1,23],163:[1,26],169:[1,8],170:[1,7],171:[1,24],175:[1,17],186:[1,3],187:[1,4],188:[1,5],192:[1,18],193:[1,19],194:[1,20],195:[1,21],196:[1,22]},{4:149,18:14,19:[1,133],20:[1,134],21:15,22:[1,135],23:[1,136],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:9,72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:[1,83],83:[1,84],84:[1,85],85:10,86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:11,110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:[1,115],117:[1,116],118:[1,117],119:[1,118],120:[1,119],121:[1,120],122:12,123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:[1,125],128:[1,126],129:[1,127],130:[1,128],131:[1,129],132:[1,130],133:13,134:[1,131],135:[1,132],136:16,137:[1,137],138:[1,138],139:[1,139],140:[1,140],141:[1,141],142:[1,142],143:[1,143],146:[1,25],160:[1,23],163:[1,26],169:[1,8],170:[1,7],171:[1,24],175:[1,17],186:[1,3],187:[1,4],188:[1,5],192:[1,18],193:[1,19],194:[1,20],195:[1,21],196:[1,22]},{6:153,7:[1,155],8:[1,156],9:154,10:[1,157],11:[1,158],12:150,190:[1,151],191:[1,152]},{190:[1,159],191:[1,160]},{6:153,7:[1,155],8:[1,156],9:154,10:[1,157],11:[1,158],12:161,190:[1,162],191:[1,163]},{190:[1,165],191:[1,164]},{190:[1,167],191:[1,166]},{190:[1,169],191:[1,168]},{190:[1,171],191:[1,170]},{190:[1,173],191:[1,172]},{6:153,7:[1,155],8:[1,156],9:154,10:[1,157],11:[1,158],12:176,190:[1,174],191:[1,175]},{6:153,7:[1,155],8:[1,156],9:154,10:[1,157],11:[1,158],12:179,190:[1,177],191:[1,178]},{190:[1,180],191:[1,181]},{190:[1,182],191:[1,183]},{190:[1,184],191:[1,185]},{190:[1,186],191:[1,187]},{190:[1,188],191:[1,189]},{190:[1,190],191:[1,191]},{190:[1,192],191:[1,193]},{190:[1,194],191:[1,195]},{190:[1,196],191:[1,197]},{190:[1,198],191:[1,199]},{190:[1,201],191:[1,200]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],190:[2,16],191:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],190:[2,17],191:[2,17]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],190:[2,18],191:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],190:[2,19],191:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],190:[2,20],191:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],190:[2,21],191:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],190:[2,22],191:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],190:[2,23],191:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],190:[2,24],191:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],190:[2,25],191:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],190:[2,26],191:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],190:[2,27],191:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],190:[2,28],191:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],190:[2,29],191:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],190:[2,30],191:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],190:[2,31],191:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],190:[2,32],191:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],190:[2,33],191:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],190:[2,34],191:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],190:[2,35],191:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],190:[2,36],191:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],190:[2,37],191:[2,37]},{7:[2,38],8:[2,38],10:[2,38],11:[2,38],190:[2,38],191:[2,38]},{7:[2,39],8:[2,39],10:[2,39],11:[2,39],190:[2,39],191:[2,39]},{7:[2,40],8:[2,40],10:[2,40],11:[2,40],190:[2,40],191:[2,40]},{7:[2,41],8:[2,41],10:[2,41],11:[2,41],190:[2,41],191:[2,41]},{7:[2,42],8:[2,42],10:[2,42],11:[2,42],190:[2,42],191:[2,42]},{7:[2,43],8:[2,43],10:[2,43],11:[2,43],190:[2,43],191:[2,43]},{7:[2,44],8:[2,44],10:[2,44],11:[2,44],190:[2,44],191:[2,44]},{7:[2,45],8:[2,45],10:[2,45],11:[2,45],190:[2,45],191:[2,45]},{7:[2,46],8:[2,46],10:[2,46],11:[2,46],190:[2,46],191:[2,46]},{7:[2,47],8:[2,47],10:[2,47],11:[2,47],190:[2,47],191:[2,47]},{7:[2,48],8:[2,48],10:[2,48],11:[2,48],190:[2,48],191:[2,48]},{7:[2,49],8:[2,49],10:[2,49],11:[2,49],190:[2,49],191:[2,49]},{7:[2,50],8:[2,50],10:[2,50],11:[2,50],190:[2,50],191:[2,50]},{7:[2,51],8:[2,51],10:[2,51],11:[2,51],190:[2,51],191:[2,51]},{7:[2,52],8:[2,52],10:[2,52],11:[2,52],190:[2,52],191:[2,52]},{7:[2,53],8:[2,53],10:[2,53],11:[2,53],190:[2,53],191:[2,53]},{7:[2,54],8:[2,54],10:[2,54],11:[2,54],190:[2,54],191:[2,54]},{7:[2,55],8:[2,55],10:[2,55],11:[2,55],190:[2,55],191:[2,55]},{7:[2,56],8:[2,56],10:[2,56],11:[2,56],190:[2,56],191:[2,56]},{7:[2,57],8:[2,57],10:[2,57],11:[2,57],190:[2,57],191:[2,57]},{7:[2,58],8:[2,58],10:[2,58],11:[2,58],190:[2,58],191:[2,58]},{7:[2,59],8:[2,59],10:[2,59],11:[2,59],190:[2,59],191:[2,59]},{7:[2,60],8:[2,60],10:[2,60],11:[2,60],190:[2,60],191:[2,60]},{7:[2,61],8:[2,61],10:[2,61],11:[2,61],190:[2,61],191:[2,61]},{190:[2,62],191:[2,62]},{190:[2,63],191:[2,63]},{190:[2,64],191:[2,64]},{190:[2,65],191:[2,65]},{190:[2,66],191:[2,66]},{190:[2,67],191:[2,67]},{190:[2,68],191:[2,68]},{190:[2,69],191:[2,69]},{190:[2,70],191:[2,70]},{190:[2,71],191:[2,71]},{190:[2,72],191:[2,72]},{190:[2,73],191:[2,73]},{190:[2,74],191:[2,74]},{190:[2,75],191:[2,75]},{190:[2,76],191:[2,76]},{190:[2,77],191:[2,77]},{190:[2,78],191:[2,78]},{190:[2,79],191:[2,79]},{190:[2,80],191:[2,80]},{190:[2,81],191:[2,81]},{190:[2,82],191:[2,82]},{190:[2,83],191:[2,83]},{190:[2,84],191:[2,84]},{190:[2,85],191:[2,85]},{190:[2,86],191:[2,86]},{190:[2,87],191:[2,87]},{190:[2,88],191:[2,88]},{190:[2,89],191:[2,89]},{190:[2,90],191:[2,90]},{190:[2,91],191:[2,91]},{190:[2,92],191:[2,92]},{190:[2,93],191:[2,93]},{190:[2,94],191:[2,94]},{190:[2,95],191:[2,95]},{190:[2,96],191:[2,96]},{190:[2,97],191:[2,97]},{190:[2,98],191:[2,98]},{190:[2,99],191:[2,99]},{190:[2,100],191:[2,100]},{190:[2,101],191:[2,101]},{190:[2,102],191:[2,102]},{190:[2,103],191:[2,103]},{190:[2,104],191:[2,104]},{190:[2,105],191:[2,105]},{190:[2,106],191:[2,106]},{190:[2,107],191:[2,107]},{190:[2,108],191:[2,108]},{190:[2,109],191:[2,109]},{190:[2,110],191:[2,110]},{190:[2,111],191:[2,111]},{190:[2,112],191:[2,112]},{190:[2,113],191:[2,113]},{190:[2,114],191:[2,114]},{190:[2,115],191:[2,115]},{190:[2,116],191:[2,116]},{190:[2,117],191:[2,117]},{190:[2,118],191:[2,118]},{190:[2,119],191:[2,119]},{190:[2,120],191:[2,120]},{190:[2,121],191:[2,121]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],190:[2,12],191:[2,12]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],190:[2,13],191:[2,13]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],190:[2,14],191:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],190:[2,15],191:[2,15]},{190:[2,122],191:[2,122]},{190:[2,123],191:[2,123]},{190:[2,124],191:[2,124]},{190:[2,125],191:[2,125]},{190:[2,126],191:[2,126]},{190:[2,127],191:[2,127]},{190:[2,128],191:[2,128]},{1:[2,1]},{4:202,18:14,19:[1,133],20:[1,134],21:15,22:[1,135],23:[1,136],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:9,72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:[1,83],83:[1,84],84:[1,85],85:10,86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:11,110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:[1,115],117:[1,116],118:[1,117],119:[1,118],120:[1,119],121:[1,120],122:12,123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:[1,125],128:[1,126],129:[1,127],130:[1,128],131:[1,129],132:[1,130],133:13,134:[1,131],135:[1,132],136:16,137:[1,137],138:[1,138],139:[1,139],140:[1,140],141:[1,141],142:[1,142],143:[1,143],146:[1,25],160:[1,23],163:[1,26],169:[1,8],170:[1,7],171:[1,24],175:[1,17],186:[1,3],187:[1,4],188:[1,5],192:[1,18],193:[1,19],194:[1,20],195:[1,21],196:[1,22]},{4:203,18:14,19:[1,133],20:[1,134],21:15,22:[1,135],23:[1,136],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:9,72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:[1,83],83:[1,84],84:[1,85],85:10,86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:11,110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:[1,115],117:[1,116],118:[1,117],119:[1,118],120:[1,119],121:[1,120],122:12,123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:[1,125],128:[1,126],129:[1,127],130:[1,128],131:[1,129],132:[1,130],133:13,134:[1,131],135:[1,132],136:16,137:[1,137],138:[1,138],139:[1,139],140:[1,140],141:[1,141],142:[1,142],143:[1,143],146:[1,25],160:[1,23],163:[1,26],169:[1,8],170:[1,7],171:[1,24],175:[1,17],186:[1,3],187:[1,4],188:[1,5],192:[1,18],193:[1,19],194:[1,20],195:[1,21],196:[1,22]},{5:[2,225],184:[2,225],185:[2,225],189:[2,225]},{5:[2,226],184:[2,226],185:[2,226],189:[2,226]},{184:[1,145],185:[1,146],189:[1,204]},{16:[1,205]},{16:[1,206],17:[1,207]},{16:[1,208],17:[1,209]},{16:[2,6]},{16:[2,7]},{16:[2,2]},{16:[2,3]},{16:[2,4]},{16:[2,5]},{16:[1,212],17:[1,216],167:[1,213],176:[1,214],177:[1,215],180:[1,217],182:210,183:211},{16:[1,212],17:[1,216],167:[1,213],176:[1,214],177:[1,215],180:[1,217],182:218,183:219},{16:[1,220]},{16:[1,221],17:[1,222]},{16:[1,223],17:[1,224]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:225,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:256,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:257,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:258,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:259,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:260,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:261,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:262,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:263,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:264,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:265,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:266,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{16:[1,267]},{16:[1,268],17:[1,269]},{16:[1,270],17:[1,271]},{16:[1,272]},{13:273,14:[1,274],15:[1,275],16:[1,276],17:[1,277]},{13:278,14:[1,274],15:[1,275],16:[1,276],17:[1,277]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:279,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:280,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:281,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:282,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:283,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:284,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:285,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:286,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:287,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:288,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:289,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:290,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:291,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:292,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:293,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:294,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:295,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:296,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:297,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{14:[1,254],15:[1,255],16:[1,248],17:[1,253],26:[1,228],27:[1,238],72:[1,237],137:[1,236],144:298,145:[1,226],146:[1,227],149:[1,231],152:[1,229],160:[1,230],161:[1,245],162:[1,232],163:[1,233],164:[1,234],166:[1,247],167:[1,235],169:[1,239],170:[1,240],171:[1,241],172:[1,242],175:[1,243],176:[1,244],177:[1,246],178:[1,249],179:[1,250],180:[1,251],181:[1,252]},{5:[2,223],184:[2,223],185:[2,223],189:[2,223]},{5:[2,224],184:[1,145],185:[2,224],189:[2,224]},{5:[2,227],184:[2,227],185:[2,227],189:[2,227]},{5:[2,228],184:[2,228],185:[2,228],189:[2,228]},{5:[2,229],184:[2,229],185:[2,229],189:[2,229]},{5:[2,231],184:[2,231],185:[2,231],189:[2,231]},{5:[2,230],184:[2,230],185:[2,230],189:[2,230]},{5:[2,232],184:[2,232],185:[2,232],189:[2,232]},{5:[2,233],184:[2,233],185:[2,233],189:[2,233]},{5:[2,234],184:[2,234],185:[2,234],189:[2,234]},{5:[2,217],184:[2,217],185:[2,217],189:[2,217]},{5:[2,218],184:[2,218],185:[2,218],189:[2,218]},{5:[2,219],184:[2,219],185:[2,219],189:[2,219]},{5:[2,220],184:[2,220],185:[2,220],189:[2,220]},{5:[2,221],184:[2,221],185:[2,221],189:[2,221]},{5:[2,222],184:[2,222],185:[2,222],189:[2,222]},{5:[2,235],184:[2,235],185:[2,235],189:[2,235]},{5:[2,236],184:[2,236],185:[2,236],189:[2,236]},{5:[2,237],184:[2,237],185:[2,237],189:[2,237]},{5:[2,256],184:[2,256],185:[2,256],189:[2,256]},{5:[2,257],184:[2,257],185:[2,257],189:[2,257]},{5:[2,258],184:[2,258],185:[2,258],189:[2,258]},{5:[2,259],184:[2,259],185:[2,259],189:[2,259]},{5:[2,238],184:[2,238],185:[2,238],189:[2,238]},{5:[2,129],184:[2,129],185:[2,129],189:[2,129]},{5:[2,130],147:[1,299],148:[1,300],149:[1,301],150:[1,302],151:[1,303],184:[2,130],185:[2,130],189:[2,130]},{5:[2,136],184:[2,136],185:[2,136],189:[2,136]},{153:[1,304],154:[1,305],155:[1,306],158:[1,307],159:[1,308]},{5:[2,145],147:[1,309],148:[1,310],149:[1,311],150:[1,312],151:[1,313],184:[2,145],185:[2,145],189:[2,145]},{148:[1,314],150:[1,315],159:[1,316],161:[1,317]},{5:[2,159],148:[1,318],150:[1,319],184:[2,159],185:[2,159],189:[2,159]},{5:[2,164],154:[1,320],184:[2,164],185:[2,164],189:[2,164]},{161:[1,322],165:[1,321],166:[1,323]},{5:[2,172],184:[2,172],185:[2,172],189:[2,172]},{5:[2,173],147:[1,324],148:[1,325],149:[1,326],150:[1,328],151:[1,329],168:[1,327],184:[2,173],185:[2,173],189:[2,173]},{5:[2,183],184:[2,183],185:[2,183],189:[2,183]},{5:[2,184],184:[2,184],185:[2,184],189:[2,184]},{5:[2,185],148:[1,330],150:[1,332],168:[1,331],184:[2,185],185:[2,185],189:[2,185]},{5:[2,189],184:[2,189],185:[2,189],189:[2,189]},{5:[2,190],147:[1,333],148:[1,334],149:[1,335],150:[1,337],151:[1,338],168:[1,336],184:[2,190],185:[2,190],189:[2,190]},{173:[1,339],174:[1,340]},{5:[2,201],154:[1,341],184:[2,201],185:[2,201],189:[2,201]},{5:[2,203],184:[2,203],185:[2,203],189:[2,203]},{5:[2,204],154:[1,342],184:[2,204],185:[2,204],189:[2,204]},{5:[2,206],184:[2,206],185:[2,206],189:[2,206]},{5:[2,207],154:[1,343],184:[2,207],185:[2,207],189:[2,207]},{5:[2,209],184:[2,209],185:[2,209],189:[2,209]},{5:[2,210],184:[2,210],185:[2,210],189:[2,210]},{5:[2,211],184:[2,211],185:[2,211],189:[2,211]},{5:[2,212],184:[2,212],185:[2,212],189:[2,212]},{5:[2,213],184:[2,213],185:[2,213],189:[2,213]},{5:[2,214],184:[2,214],185:[2,214],189:[2,214]},{5:[2,215],184:[2,215],185:[2,215],189:[2,215]},{5:[2,216],184:[2,216],185:[2,216],189:[2,216]},{5:[2,239],184:[2,239],185:[2,239],189:[2,239]},{5:[2,240],184:[2,240],185:[2,240],189:[2,240]},{5:[2,241],184:[2,241],185:[2,241],189:[2,241]},{5:[2,242],184:[2,242],185:[2,242],189:[2,242]},{5:[2,243],184:[2,243],185:[2,243],189:[2,243]},{5:[2,244],184:[2,244],185:[2,244],189:[2,244]},{5:[2,245],184:[2,245],185:[2,245],189:[2,245]},{5:[2,246],184:[2,246],185:[2,246],189:[2,246]},{5:[2,247],184:[2,247],185:[2,247],189:[2,247]},{5:[2,248],184:[2,248],185:[2,248],189:[2,248]},{5:[2,249],184:[2,249],185:[2,249],189:[2,249]},{5:[2,250],184:[2,250],185:[2,250],189:[2,250]},{5:[2,251],184:[2,251],185:[2,251],189:[2,251]},{5:[2,253],184:[2,253],185:[2,253],189:[2,253]},{5:[2,252],184:[2,252],185:[2,252],189:[2,252]},{5:[2,254],184:[2,254],185:[2,254],189:[2,254]},{5:[2,255],184:[2,255],185:[2,255],189:[2,255]},{5:[2,260],184:[2,260],185:[2,260],189:[2,260]},{5:[2,8],184:[2,8],185:[2,8],189:[2,8]},{5:[2,9],184:[2,9],185:[2,9],189:[2,9]},{5:[2,10],184:[2,10],185:[2,10],189:[2,10]},{5:[2,11],184:[2,11],185:[2,11],189:[2,11]},{5:[2,261],184:[2,261],185:[2,261],189:[2,261]},{5:[2,262],184:[2,262],185:[2,262],189:[2,262]},{5:[2,263],184:[2,263],185:[2,263],189:[2,263]},{5:[2,264],184:[2,264],185:[2,264],189:[2,264]},{5:[2,265],184:[2,265],185:[2,265],189:[2,265]},{5:[2,266],184:[2,266],185:[2,266],189:[2,266]},{5:[2,269],184:[2,269],185:[2,269],189:[2,269]},{5:[2,267],184:[2,267],185:[2,267],189:[2,267]},{5:[2,270],184:[2,270],185:[2,270],189:[2,270]},{5:[2,268],184:[2,268],185:[2,268],189:[2,268]},{5:[2,271],184:[2,271],185:[2,271],189:[2,271]},{5:[2,272],184:[2,272],185:[2,272],189:[2,272]},{5:[2,273],184:[2,273],185:[2,273],189:[2,273]},{5:[2,274],184:[2,274],185:[2,274],189:[2,274]},{5:[2,275],184:[2,275],185:[2,275],189:[2,275]},{5:[2,276],184:[2,276],185:[2,276],189:[2,276]},{5:[2,277],184:[2,277],185:[2,277],189:[2,277]},{5:[2,278],184:[2,278],185:[2,278],189:[2,278]},{5:[2,279],184:[2,279],185:[2,279],189:[2,279]},{5:[2,280],184:[2,280],185:[2,280],189:[2,280]},{5:[2,281],184:[2,281],185:[2,281],189:[2,281]},{5:[2,131],184:[2,131],185:[2,131],189:[2,131]},{5:[2,132],184:[2,132],185:[2,132],189:[2,132]},{5:[2,133],184:[2,133],185:[2,133],189:[2,133]},{5:[2,134],184:[2,134],185:[2,134],189:[2,134]},{5:[2,135],184:[2,135],185:[2,135],189:[2,135]},{5:[2,137],154:[1,344],184:[2,137],185:[2,137],189:[2,137]},{5:[2,139],184:[2,139],185:[2,139],189:[2,139]},{156:[1,345],157:[1,346]},{5:[2,142],184:[2,142],185:[2,142],189:[2,142]},{156:[1,347],157:[1,348]},{5:[2,146],184:[2,146],185:[2,146],189:[2,146]},{5:[2,147],184:[2,147],185:[2,147],189:[2,147]},{5:[2,148],184:[2,148],185:[2,148],189:[2,148]},{5:[2,149],184:[2,149],185:[2,149],189:[2,149]},{5:[2,150],184:[2,150],185:[2,150],189:[2,150]},{5:[2,151],154:[1,349],184:[2,151],185:[2,151],189:[2,151]},{5:[2,153],154:[1,350],184:[2,153],185:[2,153],189:[2,153]},{5:[2,155],154:[1,351],184:[2,155],185:[2,155],189:[2,155]},{5:[2,157],154:[1,352],184:[2,157],185:[2,157],189:[2,157]},{5:[2,160],154:[1,353],184:[2,160],185:[2,160],189:[2,160]},{5:[2,162],154:[1,354],184:[2,162],185:[2,162],189:[2,162]},{5:[2,165],184:[2,165],185:[2,165],189:[2,165]},{5:[2,166],154:[1,355],184:[2,166],185:[2,166],189:[2,166]},{5:[2,168],154:[1,356],184:[2,168],185:[2,168],189:[2,168]},{5:[2,170],154:[1,357],184:[2,170],185:[2,170],189:[2,170]},{5:[2,174],154:[1,358],184:[2,174],185:[2,174],189:[2,174]},{5:[2,176],184:[2,176],185:[2,176],189:[2,176]},{5:[2,177],154:[1,359],184:[2,177],185:[2,177],189:[2,177]},{5:[2,179],184:[2,179],185:[2,179],189:[2,179]},{5:[2,180],184:[2,180],185:[2,180],189:[2,180]},{5:[2,181],154:[1,360],184:[2,181],185:[2,181],189:[2,181]},{5:[2,186],184:[2,186],185:[2,186],189:[2,186]},{5:[2,187],184:[2,187],185:[2,187],189:[2,187]},{5:[2,188],184:[2,188],185:[2,188],189:[2,188]},{5:[2,191],184:[2,191],185:[2,191],189:[2,191]},{5:[2,192],184:[2,192],185:[2,192],189:[2,192]},{5:[2,193],184:[2,193],185:[2,193],189:[2,193]},{5:[2,194],184:[2,194],185:[2,194],189:[2,194]},{5:[2,195],184:[2,195],185:[2,195],189:[2,195]},{5:[2,196],184:[2,196],185:[2,196],189:[2,196]},{5:[2,197],154:[1,361],184:[2,197],185:[2,197],189:[2,197]},{5:[2,199],154:[1,362],184:[2,199],185:[2,199],189:[2,199]},{5:[2,202],184:[2,202],185:[2,202],189:[2,202]},{5:[2,205],184:[2,205],185:[2,205],189:[2,205]},{5:[2,208],184:[2,208],185:[2,208],189:[2,208]},{5:[2,138],184:[2,138],185:[2,138],189:[2,138]},{5:[2,140],184:[2,140],185:[2,140],189:[2,140]},{5:[2,141],184:[2,141],185:[2,141],189:[2,141]},{5:[2,143],184:[2,143],185:[2,143],189:[2,143]},{5:[2,144],184:[2,144],185:[2,144],189:[2,144]},{5:[2,152],184:[2,152],185:[2,152],189:[2,152]},{5:[2,154],184:[2,154],185:[2,154],189:[2,154]},{5:[2,156],184:[2,156],185:[2,156],189:[2,156]},{5:[2,158],184:[2,158],185:[2,158],189:[2,158]},{5:[2,161],184:[2,161],185:[2,161],189:[2,161]},{5:[2,163],184:[2,163],185:[2,163],189:[2,163]},{5:[2,167],184:[2,167],185:[2,167],189:[2,167]},{5:[2,169],184:[2,169],185:[2,169],189:[2,169]},{5:[2,171],184:[2,171],185:[2,171],189:[2,171]},{5:[2,175],184:[2,175],185:[2,175],189:[2,175]},{5:[2,178],184:[2,178],185:[2,178],189:[2,178]},{5:[2,182],184:[2,182],185:[2,182],189:[2,182]},{5:[2,198],184:[2,198],185:[2,198],189:[2,198]},{5:[2,200],184:[2,200],185:[2,200],189:[2,200]}],
defaultActions: {144:[2,1],153:[2,6],154:[2,7],155:[2,2],156:[2,3],157:[2,4],158:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


var    util           = require('util');

function parseIpPort(yy, ipPortStr, which) {
  ipPortStr = ipPortStr.trim();

// We really have a list of them
  if (ipPortStr[0] === "[" && ipPortStr[ipPortStr.length -1] === "]") {
      var obj =  {bool: {should: []}};
      CSVtoArray(ipPortStr).forEach(function(str) {
          obj.bool.should.push(parseIpPort(yy, str, which));
      });
      return obj;
  }

  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }

  var t1;
  var t2;
  var xff;
  var dns;
  var email;
  var socks;

  if (ip1 !== -1) {
    if (ip1 === ip2) {
        t1    = {term: {a1: ip1>>>0}};
        t2    = {term: {a2: ip1>>>0}};
        socks = {term: {socksip: ip1>>>0}};
        dns   = {term: {dnsip: ip1>>>0}};
        email = {term: {eip: ip1>>>0}};
        xff   = {term: {xff: ip1>>>0}};
    } else {
        t1    = {range: {a1: {from: ip1>>>0, to: ip2>>>0}}};
        t2    = {range: {a2: {from: ip1>>>0, to: ip2>>>0}}};
        socks = {range: {socksip: {from: ip1>>>0, to: ip2>>>0}}};
        dns   = {range: {dnsip: {from: ip1>>>0, to: ip2>>>0}}};
        email = {range: {eip: {from: ip1>>>0, to: ip2>>>0}}};
        xff   = {range: {xff: {from: ip1>>>0, to: ip2>>>0}}};
    }
  }

  if (port !== -1) {
    t1    = {bool: {must: [t1, {term: {p1: port}}]}};
    t2    = {bool: {must: [t2, {term: {p2: port}}]}};
    socks = {bool: {must: [socks, {term: {sockspo: port}}]}};
  }

  switch(which) {
  case 0:
    var ors = [t1, t2];

    if (xff)
        ors.push(xff);
    if (dns)
        ors.push(dns);
    if (yy.emailSearch === true && email)
        ors.push(email);
    if (socks)
        ors.push(socks);

    return {bool: {should: ors}};
  case 1:
    return t1;
  case 2:
    return t2;
  case 3:
    if (!xff)
        throw "xff doesn't support port only";
    return xff;
  case 4:
    if (!dns)
        throw "dns doesn't support port only";
    return dns;
  case 5:
    if (!email)
        throw "email doesn't support port only";
    return email;
  case 6:
    return socks;
  }
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}

var field2RawField = {
    us: "rawus",
    ua: "rawua",
    as1: "rawas1",
    as2: "rawas2",
    asxff: "rawasff",
    asdnsip: "rawasdnsip",
    iOn: "rawiOn",
    eua: "raweua",
    esub: "rawesub",
    aseip: "rawaseip"
}

function str2Query(field, kind, str)
{
    var obj;

    if (field2RawField[field] === undefined && field.indexOf(".snow", field.length - 5) !== -1) {
        field2RawField[field] = field.substring(0, field.length - 5) + ".raw";
    }

    if (str[0] === "/" && str[str.length -1] === "/") {
        field = field2RawField[field] || field;
        obj = {regexp: {}};
        obj.regexp[field] = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        return obj;
    }

    var strs;
    var quoted = false;
    if (str[0] === "\"" && str[str.length -1] === "\"") {
        str = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        quoted = true;
    } else if (str[0] === "[" && str[str.length -1] === "]") {
        strs = CSVtoArray(str);
        if (kind === "term") {
            obj = {terms: {}};
            obj.terms[field] = strs;
        } else if (kind === "text") {
            var obj =  {query: {bool: {should: []}}};
            strs.forEach(function(str) {
              var should = {text: {}};
              should.text[field] = {query: str, type: "phrase", operator: "and"}
              obj.query.bool.should.push(should);
            });
        }
        return obj;
    }

    if (!isNaN(str) && !quoted) {
        obj = {term: {}};
        obj.term[field] = str;
    } else if (str.indexOf("*") !== -1) {
        field = field2RawField[field] || field;
        obj = {query: {wildcard: {}}};
        obj.query.wildcard[field] = str;
    } else if (kind === "text") {
        obj = {query: {text: {}}};
        obj.query.text[field] = {query: str, type: "phrase", operator: "and"}
    } else if (kind === "term") {
        obj = {term: {}};
        obj.term[field] = str;
    }
    return obj;
}

function str2Header(yy, name) {
    var field = yy.fieldsMap[name];
    if (field === undefined) throw "Unknown field " + name;

    return field.db;
}

// http://stackoverflow.com/a/8497474
// Return array of string values, or NULL if CSV string not well formed.
function CSVtoArray(text) {
    text = text.substring(1, text.length-1);
    var re_valid = /^\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*(?:,\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*)*$/;
    var re_value = /(?!\s*$)\s*(?:'([^'\\]*(?:\\[\S\s][^'\\]*)*)'|"([^"\\]*(?:\\[\S\s][^"\\]*)*)"|([^,'"\s\\]*(?:\s+[^,'"\s\\]+)*))\s*(?:,|$)/g;
    // Return NULL if input string is not well formed CSV string.
    if (!re_valid.test(text)) return null;
    var a = [];                     // Initialize array to receive values.
    text.replace(re_value, // "Walk" the string using replace with callback.
        function(m0, m1, m2, m3) {
            // Remove backslash from \' in single quoted values.
            if      (m1 !== undefined) a.push(m1.replace(/\\'/g, "'"));
            // Remove backslash from \" in double quoted values.
            else if (m2 !== undefined) a.push(m2.replace(/\\"/g, '"'));
            else if (m3 !== undefined) a.push(m3);
            return ''; // Return empty string.
        });
    // Handle special case of empty last value.
    if (/,\s*$/.test(text)) a.push('');
    return a;
};

var protocols = {
    icmp: 1,
    tcp:  6,
    udp:  17
};

function protocolLookup(text) {
    if (typeof text !== "string") {
        for (var i = 0; i < text.length; i++) {
            text[i] = protocols[text[i]] || +text[i];
        }
        return text;
    } else {
        return protocols[text] || +text;
    }
}

function termOrTerms(field, str) {
  var obj = {};
  if (str[0] === "[" && str[str.length -1] === "]") {
    obj = {terms: {}};
    obj.terms[field] = CSVtoArray(str);
  } else {
    obj = {term: {}};
    obj.term[field] = str;
  }
  return obj;
}
/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 16
break;
case 2:return 17
break;
case 3:return 14
break;
case 4:return 15
break;
case 5:if (!yy.emailSearch) throw "email searches disabled for user"; return 50
break;
case 6:if (!yy.emailSearch) throw "email searches disabled for user"; return 92
break;
case 7:if (!yy.emailSearch) throw "email searches disabled for user"; return 55
break;
case 8:if (!yy.emailSearch) throw "email searches disabled for user"; return 90
break;
case 9:if (!yy.emailSearch) throw "email searches disabled for user"; return 53
break;
case 10:if (!yy.emailSearch) throw "email searches disabled for user"; return 88
break;
case 11:if (!yy.emailSearch) throw "email searches disabled for user"; return 58
break;
case 12:if (!yy.emailSearch) throw "email searches disabled for user"; return 130
break;
case 13:return "http.hasheader.dst.cnt"
break;
case 14:return "http.hasheader.dst"
break;
case 15:return "http.hasheader"
break;
case 16:return "http.hasheader.src.cnt"
break;
case 17:return "http.hasheader.src"
break;
case 18:return "http.user-agent.cnt"
break;
case 19:return "http.user-agent"
break;
case 20:return "http.user-agent.cnt"
break;
case 21:return "http.user-agent"
break;
case 22:return "http.uri.cnt"
break;
case 23:return "http.uri"
break;
case 24:return 146
break;
case 25:return 125
break;
case 26:return 124
break;
case 27:return 127
break;
case 28:return 123
break;
case 29:return 128
break;
case 30:if (!yy.emailSearch) throw "email searches disabled for user"; return 126
break;
case 31:return 26
break;
case 32:return "cert.alt.cnt"
break;
case 33:return "cert.alt"
break;
case 34:return "cert.cnt"
break;
case 35:return "cert.issuer.cn"
break;
case 36:return "cert.issuer.on"
break;
case 37:return "cert.serial"
break;
case 38:return "cert.subject.cn"
break;
case 39:return "cert.subject.on"
break;
case 40:return 160
break;
case 41:return 110
break;
case 42:return 111
break;
case 43:return 113
break;
case 44:return 114
break;
case 45:return 115
break;
case 46:if (!yy.emailSearch) throw "email searches disabled for user"; return 112
break;
case 47:return 25
break;
case 48:if (!yy.emailSearch) throw "email searches disabled for user"; return 50
break;
case 49:if (!yy.emailSearch) throw "email searches disabled for user"; return 92
break;
case 50:if (!yy.emailSearch) throw "email searches disabled for user"; return 51
break;
case 51:if (!yy.emailSearch) throw "email searches disabled for user"; return 78
break;
case 52:if (!yy.emailSearch) throw "email searches disabled for user"; return 52
break;
case 53:if (!yy.emailSearch) throw "email searches disabled for user"; return 91
break;
case 54:if (!yy.emailSearch) throw "email searches disabled for user"; return 53
break;
case 55:if (!yy.emailSearch) throw "email searches disabled for user"; return 88
break;
case 56:if (!yy.emailSearch) throw "email searches disabled for user"; return 54
break;
case 57:if (!yy.emailSearch) throw "email searches disabled for user"; return 89
break;
case 58:if (!yy.emailSearch) throw "email searches disabled for user"; return 55
break;
case 59:if (!yy.emailSearch) throw "email searches disabled for user"; return 90
break;
case 60:if (!yy.emailSearch) throw "email searches disabled for user"; return 56
break;
case 61:if (!yy.emailSearch) throw "email searches disabled for user"; return 79
break;
case 62:if (!yy.emailSearch) throw "email searches disabled for user"; return 57
break;
case 63:if (!yy.emailSearch) throw "email searches disabled for user"; return 129
break;
case 64:if (!yy.emailSearch) throw "email searches disabled for user"; return 58
break;
case 65:if (!yy.emailSearch) throw "email searches disabled for user"; return 130
break;
case 66:if (!yy.emailSearch) throw "email searches disabled for user"; return 22
break;
case 67:if (!yy.emailSearch) throw "email searches disabled for user"; return 19
break;
case 68:return "file"
break;
case 69:return "http.hasheader.dst.cnt"
break;
case 70:return "http.hasheader.dst"
break;
case 71:return "http.hasheader"
break;
case 72:return "http.hasheader.src.cnt"
break;
case 73:return "http.hasheader.src"
break;
case 74:return "host.dns.cnt"
break;
case 75:return "host.dns"
break;
case 76:return "host.email.cnt"
break;
case 77:return "host.email"
break;
case 78:return "host.http.cnt"
break;
case 79:return "host.http"
break;
case 80:return "host.socks"
break;
case 81:return "host"
break;
case 82:return "http.md5.cnt"
break;
case 83:return "http.md5"
break;
case 84:return "http.uri.cnt"
break;
case 85:return "http.uri"
break;
case 86:return "http.uri.key.cnt"
break;
case 87:return "http.uri.key"
break;
case 88:return "http.uri.path.cnt"
break;
case 89:return "http.uri.path"
break;
case 90:return "http.uri.value.cnt"
break;
case 91:return "http.uri.value"
break;
case 92:return "http.version"
break;
case 93:return "http.version.src"
break;
case 94:return "http.version.src.cnt"
break;
case 95:return "http.version.dst"
break;
case 96:return "http.version.dst.cnt"
break;
case 97:return "http.user-agent.cnt"
break;
case 98:return "http.user-agent"
break;
case 99:return "host.http.cnt"
break;
case 100:return "host.http"
break;
case 101:return "HTTP_HEADER_CNT"
break;
case 102:return "HTTP_HEADER"
break;
case 103:return "icmp"
break;
case 104:return "icmp"
break;
case 105:return "id"
break;
case 106:return "ip.dns.cnt"
break;
case 107:return "ip.dns"
break;
case 108:return "ip.dst"
break;
case 109:return "ip"
break;
case 110:return "ip.socks"
break;
case 111:return "ip.src"
break;
case 112:return "ip.xff.cnt"
break;
case 113:return "ip.xff"
break;
case 114:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email.cnt"
break;
case 115:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email"
break;
case 116:return "irc.nick"
break;
case 117:return "irc.nick.cnt"
break;
case 118:return "irc.channel"
break;
case 119:return "irc.channel.cnt"
break;
case 120:return 72
break;
case 121:return 27
break;
case 122:return 28
break;
case 123:return 169
break;
case 124:return 29
break;
case 125:return 30
break;
case 126:return 170
break;
case 127:return 171
break;
case 128:return 116
break;
case 129:return 117
break;
case 130:return 119
break;
case 131:return 120
break;
case 132:return 121
break;
case 133:if (!yy.emailSearch) throw "email searches disabled for user"; return 118
break;
case 134:return "rootId"
break;
case 135:return "host.socks"
break;
case 136:return "ip.socks"
break;
case 137:return "port.socks"
break;
case 138:return "smb.domain.cnt"
break;
case 139:return "smb.domain"
break;
case 140:return "smb.fn.cnt"
break;
case 141:return "smb.fn"
break;
case 142:return "smb.host.cnt"
break;
case 143:return "smb.host"
break;
case 144:return "smb.os.cnt"
break;
case 145:return "smb.os"
break;
case 146:return "smb.share.cnt"
break;
case 147:return "smb.share"
break;
case 148:return "smb.user.cnt"
break;
case 149:return "smb.user"
break;
case 150:return "smb.ver.cnt"
break;
case 151:return "smb.ver"
break;
case 152:return "ssh.key.cnt"
break;
case 153:return "ssh.key"
break;
case 154:return "ssh.ver.cnt"
break;
case 155:return "ssh.ver"
break;
case 156:return 49
break;
case 157:return 175
break;
case 158:return "tcp"
break;
case 159:return "tcp"
break;
case 160:return "udp"
break;
case 161:return "udp"
break;
case 162:return "user.cnt"
break;
case 163:return "user"
break;
case 164:return 145
break;
case 165:return 178
break;
case 166:return 179
break;
case 167:return 180
break;
case 168:return 181
break;
case 169:return 8
break;
case 170:return 7
break;
case 171:return 11
break;
case 172:return 10
break;
case 173:return 191
break;
case 174:return 190
break;
case 175:return 190
break;
case 176:return 185
break;
case 177:return 185
break;
case 178:return 184
break;
case 179:return 184
break;
case 180:return 188
break;
case 181:return 189
break;
case 182:return 186
break;
case 183:return 5
break;
case 184:return 'INVALID'
break;
case 185:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:\d+\b)/,/^(?:\[\d+(,\s*\d+)*\s*\])/,/^(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?\b)/,/^(?:\[(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?(,\s*){0,1})+\])/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:http\.ua\.cnt)/,/^(?:http\.ua)/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.socks)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:asn\.email)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.socks)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:country\.email)/,/^(?:databytes)/,/^(?:email\.content-type\.cnt)/,/^(?:email\.content-type)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.message-id\.cnt)/,/^(?:email\.message-id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mime-version\.cnt)/,/^(?:email\.mime-version)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.x-mailer\.cnt)/,/^(?:email\.x-mailer)/,/^(?:email\.[^\s!=><.]*\.cnt)/,/^(?:email\.[^\s!=><.]*)/,/^(?:file)/,/^(?:http\.hasheader\.dst\.cnt)/,/^(?:http\.hasheader\.dst)/,/^(?:http\.hasheader)/,/^(?:http\.hasheader\.src\.cnt)/,/^(?:http\.hasheader\.src)/,/^(?:host\.dns\.cnt)/,/^(?:host\.dns)/,/^(?:host\.email\.cnt)/,/^(?:host\.email)/,/^(?:host\.http\.cnt)/,/^(?:host\.http)/,/^(?:host\.socks)/,/^(?:host)/,/^(?:http\.md5\.cnt)/,/^(?:http\.md5)/,/^(?:http\.uri\.cnt)/,/^(?:http\.uri)/,/^(?:http\.uri\.key\.cnt)/,/^(?:http\.uri\.key)/,/^(?:http\.uri\.path\.cnt)/,/^(?:http\.uri\.path)/,/^(?:http\.uri\.value\.cnt)/,/^(?:http\.uri\.value)/,/^(?:http\.version)/,/^(?:http\.version\.src)/,/^(?:http\.version\.src\.cnt)/,/^(?:http\.version\.dst)/,/^(?:http\.version\.dst\.cnt)/,/^(?:http\.user-agent\.cnt)/,/^(?:http\.user-agent)/,/^(?:http\.host\.cnt)/,/^(?:http\.host)/,/^(?:http\.[^\s!=><.]*\.cnt)/,/^(?:http\.[^\s!=><.]*)/,/^(?:icmp)/,/^(?:"icmp")/,/^(?:id)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.socks)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:ip\.email\.cnt)/,/^(?:ip\.email)/,/^(?:irc\.nick)/,/^(?:irc\.nick\.cnt)/,/^(?:irc\.channel)/,/^(?:irc\.channel\.cnt)/,/^(?:node)/,/^(?:packets)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.socks)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rir)/,/^(?:rir\.dns)/,/^(?:rir\.dst)/,/^(?:rir\.socks)/,/^(?:rir\.src)/,/^(?:rir\.xff)/,/^(?:rir\.email)/,/^(?:rootId)/,/^(?:socks\.host)/,/^(?:socks\.ip)/,/^(?:socks\.port)/,/^(?:smb\.domain\.cnt)/,/^(?:smb\.domain)/,/^(?:smb\.fn\.cnt)/,/^(?:smb\.fn)/,/^(?:smb\.host\.cnt)/,/^(?:smb\.host)/,/^(?:smb\.os\.cnt)/,/^(?:smb\.os)/,/^(?:smb\.share\.cnt)/,/^(?:smb\.share)/,/^(?:smb\.user\.cnt)/,/^(?:smb\.user)/,/^(?:smb\.ver\.cnt)/,/^(?:smb\.ver)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:"tcp")/,/^(?:udp)/,/^(?:"udp")/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"\\]*(?:\\.[^"\\]*)*")/,/^(?:\/[^/\\]*(?:\\.[^/\\]*)*\/)/,/^(?:\[[0-9a-z,"]+\])/,/^(?:\[[^\]]+\])/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}