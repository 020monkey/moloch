/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"NUMBER":15,"HEADER":16,"EMAIL_HEADER":17,"HTTP_HEADER":18,"HEADER_CNT":19,"EMAIL_HEADER_CNT":20,"HTTP_HEADER_CNT":21,"RANGEFIELD":22,"databytes":23,"bytes":24,"packets":25,"port.src":26,"port.dst":27,"http.uri.cnt":28,"cert.cnt":29,"ip.dns.cnt":30,"ip.email.cnt":31,"ip.xff.cnt":32,"http.md5.cnt":33,"http.user-agent.cnt":34,"user.cnt":35,"host.dns.cnt":36,"host.email.cnt":37,"host.http.cnt":38,"http.hasheader.src.cnt":39,"http.hasheader.dst.cnt":40,"tags.cnt":41,"email.content-type.cnt":42,"email.dst.cnt":43,"email.fn.cnt":44,"email.message-id.cnt":45,"email.md5.cnt":46,"email.mime-version.cnt":47,"email.src.cnt":48,"email.subject.cnt":49,"email.x-mailer.cnt":50,"cert.alt.cnt":51,"ssh.key.cnt":52,"ssh.ver.cnt":53,"LOTERMFIELD":54,"node":55,"host.dns":56,"host.email":57,"host.http":58,"user":59,"email.dst":60,"email.src":61,"cert.subject.cn":62,"cert.issuer.cn":63,"cert.serial":64,"cert.alt":65,"ssh.ver":66,"TERMFIELD":67,"id":68,"ssh.key":69,"email.message-id":70,"email.md5":71,"email.mime-version":72,"email.fn":73,"email.content-type":74,"http.md5":75,"rootId":76,"UPTERMFIELD":77,"country.src":78,"country.dst":79,"country.xff":80,"country.email":81,"country.dns":82,"LOTEXTFIELD":83,"asn.src":84,"asn.dst":85,"asn.dns":86,"asn.xff":87,"asn.email":88,"email.subject":89,"email.x-mailer":90,"cert.subject.on":91,"cert.issuer.on":92,"TEXTFIELD":93,"http.uri":94,"http.user-agent":95,"IPFIELD":96,"ip":97,"ip.src":98,"ip.dst":99,"ip.xff":100,"ip.dns":101,"ip.email":102,"STR":103,"ID":104,"asn":105,"dns":106,"dst":107,"email":108,"src":109,"xff":110,"cert":111,"alt":112,"cnt":113,"issuer":114,"cn":115,"on":116,"serial":117,"subject":118,"country":119,"ua":120,"header":121,"host":122,"http":123,"md5":124,"uri":125,"icmp":126,"port":127,"protocol":128,"QUOTEDSTR":129,"REGEXSTR":130,"ssh":131,"key":132,"ver":133,"tags":134,"tcp":135,"udp":136,"&&":137,"||":138,"!":139,"-":140,"(":141,")":142,"==":143,"!=":144,"file":145,"http.hasheader":146,"http.hasheader.src":147,"http.hasheader.dst":148,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"NUMBER",17:"EMAIL_HEADER",18:"HTTP_HEADER",20:"EMAIL_HEADER_CNT",21:"HTTP_HEADER_CNT",23:"databytes",24:"bytes",25:"packets",26:"port.src",27:"port.dst",28:"http.uri.cnt",29:"cert.cnt",30:"ip.dns.cnt",31:"ip.email.cnt",32:"ip.xff.cnt",33:"http.md5.cnt",34:"http.user-agent.cnt",35:"user.cnt",36:"host.dns.cnt",37:"host.email.cnt",38:"host.http.cnt",39:"http.hasheader.src.cnt",40:"http.hasheader.dst.cnt",41:"tags.cnt",42:"email.content-type.cnt",43:"email.dst.cnt",44:"email.fn.cnt",45:"email.message-id.cnt",46:"email.md5.cnt",47:"email.mime-version.cnt",48:"email.src.cnt",49:"email.subject.cnt",50:"email.x-mailer.cnt",51:"cert.alt.cnt",52:"ssh.key.cnt",53:"ssh.ver.cnt",55:"node",56:"host.dns",57:"host.email",58:"host.http",59:"user",60:"email.dst",61:"email.src",62:"cert.subject.cn",63:"cert.issuer.cn",64:"cert.serial",65:"cert.alt",66:"ssh.ver",68:"id",69:"ssh.key",70:"email.message-id",71:"email.md5",72:"email.mime-version",73:"email.fn",74:"email.content-type",75:"http.md5",76:"rootId",78:"country.src",79:"country.dst",80:"country.xff",81:"country.email",82:"country.dns",84:"asn.src",85:"asn.dst",86:"asn.dns",87:"asn.xff",88:"asn.email",89:"email.subject",90:"email.x-mailer",91:"cert.subject.on",92:"cert.issuer.on",94:"http.uri",95:"http.user-agent",97:"ip",98:"ip.src",99:"ip.dst",100:"ip.xff",101:"ip.dns",102:"ip.email",104:"ID",105:"asn",106:"dns",107:"dst",108:"email",109:"src",110:"xff",111:"cert",112:"alt",113:"cnt",114:"issuer",115:"cn",116:"on",117:"serial",118:"subject",119:"country",120:"ua",121:"header",122:"host",123:"http",124:"md5",125:"uri",126:"icmp",127:"port",128:"protocol",129:"QUOTEDSTR",130:"REGEXSTR",131:"ssh",132:"key",133:"ver",134:"tags",135:"tcp",136:"udp",137:"&&",138:"||",139:"!",140:"-",141:"(",142:")",143:"==",144:"!=",145:"file",146:"http.hasheader",147:"http.hasheader.src",148:"http.hasheader.dst"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[16,1],[16,1],[19,1],[19,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[54,1],[54,1],[54,1],[54,1],[54,1],[54,1],[54,1],[54,1],[54,1],[54,1],[54,1],[54,1],[67,1],[67,1],[67,1],[67,1],[67,1],[67,1],[67,1],[67,1],[67,1],[77,1],[77,1],[77,1],[77,1],[77,1],[83,1],[83,1],[83,1],[83,1],[83,1],[83,1],[83,1],[83,1],[83,1],[93,1],[93,1],[96,1],[96,1],[96,1],[96,1],[96,1],[96,1],[103,1],[103,1],[103,2],[103,2],[103,2],[103,2],[103,2],[103,1],[103,2],[103,3],[103,2],[103,3],[103,3],[103,2],[103,3],[103,3],[103,1],[103,2],[103,2],[103,2],[103,2],[103,2],[103,2],[103,3],[103,2],[103,3],[103,2],[103,3],[103,2],[103,3],[103,1],[103,2],[103,3],[103,2],[103,3],[103,1],[103,2],[103,2],[103,3],[103,2],[103,3],[103,2],[103,3],[103,1],[103,1],[103,2],[103,3],[103,2],[103,2],[103,3],[103,2],[103,2],[103,3],[103,1],[103,1],[103,1],[103,2],[103,2],[103,1],[103,1],[103,1],[103,2],[103,3],[103,2],[103,3],[103,1],[103,2],[103,1],[103,1],[103,2],[103,1],[103,1],[103,2],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 14:this.$ = 'db'
break;
case 15:this.$ = 'by'
break;
case 16:this.$ = 'pa'
break;
case 17:this.$ = 'p1'
break;
case 18:this.$ = 'p2'
break;
case 19:this.$ = 'uscnt'
break;
case 20:this.$ = 'tlscnt'
break;
case 21:this.$ = 'dnsipcnt'
break;
case 22:this.$ = 'eipcnt'
break;
case 23:this.$ = 'xffscnt'
break;
case 24:this.$ = 'hmd5cnt'
break;
case 25:this.$ = 'uacnt'
break;
case 26:this.$ = 'usercnt'
break;
case 27:this.$ = 'dnshocnt'
break;
case 28:this.$ = 'ehocnt'
break;
case 29:this.$ = 'hocnt'
break;
case 30:this.$ = 'hh1cnt'
break;
case 31:this.$ = 'hh2cnt'
break;
case 32:this.$ = 'tacnt'
break;
case 33:this.$ = 'ectcnt'
break;
case 34:this.$ = 'edstcnt'
break;
case 35:this.$ = 'efncnt'
break;
case 36:this.$ = 'eidcnt'
break;
case 37:this.$ = 'emd5cnt'
break;
case 38:this.$ = 'emvcnt'
break;
case 39:this.$ = 'esrccnt'
break;
case 40:this.$ = 'esubcnt'
break;
case 41:this.$ = 'euacnt'
break;
case 42:this.$ = 'tls.altcnt'
break;
case 43:this.$ = 'sshkeycnt'
break;
case 44:this.$ = 'sshvercnt'
break;
case 45:this.$ = 'no'
break;
case 46:this.$ = 'dnsho'
break;
case 47:this.$ = 'eho'
break;
case 48:this.$ = 'ho'
break;
case 49:this.$ = 'user'
break;
case 50:this.$ = 'edst'
break;
case 51:this.$ = 'esrc'
break;
case 52:this.$ = 'tls.sCn'
break;
case 53:this.$ = 'tls.iCn'
break;
case 54:this.$ = 'tls.sn'
break;
case 55:this.$ = 'tls.alt'
break;
case 56:this.$ = 'sshver'
break;
case 57:this.$ = '_id'
break;
case 58:this.$ = 'sshkey'
break;
case 59:this.$ = 'eid'
break;
case 60:this.$ = 'emd5'
break;
case 61:this.$ = 'emv'
break;
case 62:this.$ = 'efn'
break;
case 63:this.$ = 'ect'
break;
case 64:this.$ = 'hmd5'
break;
case 65:this.$ = 'ro'
break;
case 66:this.$ = 'g1'
break;
case 67:this.$ = 'g2'
break;
case 68:this.$ = 'gxff'
break;
case 69:this.$ = 'geip'
break;
case 70:this.$ = 'gdnsip'
break;
case 71:this.$ = 'as1'
break;
case 72:this.$ = 'as2'
break;
case 73:this.$ = 'asdnsip'
break;
case 74:this.$ = 'asxff'
break;
case 75:this.$ = 'aseip'
break;
case 76:this.$ = 'esub'
break;
case 77:this.$ = 'eua'
break;
case 78:this.$ = 'tls.sOn'
break;
case 79:this.$ = 'tls.iOn'
break;
case 80:this.$ = 'us'
break;
case 81:this.$ = 'ua'
break;
case 82:this.$ = 0
break;
case 83:this.$ = 1
break;
case 84:this.$ = 2
break;
case 85:this.$ = 3
break;
case 86:this.$ = 4
break;
case 87:this.$ = 5
break;
case 161:this.$ = {and: [$$[$0-2], $$[$0]]};
break;
case 162:this.$ = {or: [$$[$0-2], $$[$0]]};
break;
case 163:this.$ = {not: $$[$0]};
break;
case 164:this.$ = -$$[$0];
break;
case 165:this.$ = $$[$0-1];
break;
case 166:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 167:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 168:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 169:this.$ = {term: {pr: 1}};
break;
case 170:this.$ = {term: {pr: 6}};
break;
case 171:this.$ = {term: {pr: 17}};
break;
case 172:this.$ = {term: {pr: $$[$0]}};
break;
case 173:this.$ = {not: {term: {pr: 1}}};
break;
case 174:this.$ = {not: {term: {pr: 6}}};
break;
case 175:this.$ = {not: {term: {pr: 17}}};
break;
case 176:this.$ = {not: {term: {pr: $$[$0]}}};
break;
case 177:this.$ = {or: [{range: {p1: {}}}, {range: {p2: {}}}]};
         this.$.or[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.or[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 178:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toLowerCase())};
break;
case 179:this.$ = str2Query($$[$0-2], "term", $$[$0].toLowerCase());
break;
case 180:this.$ = {not: str2Query($$[$0-2], "term", $$[$0])};
break;
case 181:this.$ = str2Query($$[$0-2], "term", $$[$0]);
break;
case 182:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toUpperCase())};
break;
case 183:this.$ = str2Query($$[$0-2], "term", $$[$0].toUpperCase());
break;
case 184:this.$ = {not: str2Query($$[$0-2], "text", $$[$0].toLowerCase())};
break;
case 185:this.$ = str2Query($$[$0-2], "text", $$[$0].toLowerCase());
break;
case 186:this.$ = {not: str2Query($$[$0-2], "text", $$[$0])};
break;
case 187:this.$ = str2Query($$[$0-2], "text", $$[$0]);
break;
case 188:this.$ = str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0]);
break;
case 189:this.$ = {not: str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0])};
break;
case 190:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 191: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 192:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 193:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 194: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 195:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 196:this.$ = {or: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]};
break;
case 197:this.$ = {not: {or: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]}};
break;
case 198:this.$ = parseIpPort(yy, $$[$0],$$[$0-2]);
break;
case 199:this.$ = {not: parseIpPort(yy, $$[$0],$$[$0-2])};
break;
case 200: var tag = stripQuotes($$[$0]);
          this.$ = {term: {ta: tag}};
        
break;
case 201: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {ta: tag}}};
        
break;
case 202: var file = stripQuotes($$[$0]);
          this.$ = {fileand: file};
        
break;
case 203: var file = stripQuotes($$[$0]);
          this.$ = {not: {fileand: file}};
        
break;
case 204: var tag = stripQuotes($$[$0]);
          this.$ = {or: [{term: {hh1: tag}}, {term:{hh2: tag}}]};
        
break;
case 205: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh1: tag}};
        
break;
case 206: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh2: tag}};
        
break;
case 207: var tag = stripQuotes($$[$0]);
          this.$ = {not: {or: [{term: {hh1: tag}}, {term:{hh2: tag}}]}};
        
break;
case 208: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh1: tag}}};
        
break;
case 209: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh2: tag}}};
        
break;
case 210: var str = $$[$0].toUpperCase();
          this.$ = {or: [str2Query("g1", "term", str),
                     str2Query("g2", "term", str),
                     str2Query("gxff", "term", str),
                     str2Query("gdnsip", "term", str),
                     str2Query("geip", "term", str)
                    ]
               };
        
break;
case 211: var str = $$[$0].toUpperCase();
          this.$ = {or: [str2Query("g1", "term", str),
                     str2Query("g2", "term", str),
                     str2Query("gxff", "term", str),
                     str2Query("gdnsip", "term", str),
                     str2Query("geip", "term", str)
                    ]
               };
          this.$ = {not: this.$};
        
break;
case 212: var str = $$[$0].toLowerCase();
          
          this.$ = {or: [str2Query("as1", "text", str),
                     str2Query("as2", "text", str),
                     str2Query("asxff", "text", str),
                     str2Query("asdnsip", "text", str),
                     str2Query("aseip", "text", str)
                    ]
               };
        
break;
case 213: var str = $$[$0].toLowerCase();
          this.$ = {or: [str2Query("as1", "text", str),
                     str2Query("as2", "text", str),
                     str2Query("asxff", "text", str),
                     str2Query("asdnsip", "text", str),
                     str2Query("aseip", "text", str)
                    ]
               };
          this.$ = {not: this.$};
        
break;
case 214: var str = $$[$0].toLowerCase();

          this.$ = {or: [str2Query("ho", "term", str),
                     str2Query("dnsho", "term", str),
                     str2Query("eho", "term", str)
                    ]
               };
          this.$ = {not: this.$};
        
break;
case 215: var str = $$[$0].toLowerCase();

          this.$ = {or: [str2Query("ho", "term", str),
                     str2Query("dnsho", "term", str),
                     str2Query("eho", "term", str)
                    ]
               };
        
break;
}
},
table: [{3:1,4:2,16:14,17:[1,93],18:[1,94],19:15,20:[1,95],21:[1,96],22:6,23:[1,25],24:[1,26],25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:9,55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:10,68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:[1,73],74:[1,74],75:[1,75],76:[1,76],77:11,78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:12,84:[1,82],85:[1,83],86:[1,84],87:[1,85],88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:13,94:[1,91],95:[1,92],96:16,97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],105:[1,23],119:[1,22],122:[1,24],127:[1,8],128:[1,7],134:[1,17],139:[1,3],140:[1,4],141:[1,5],145:[1,18],146:[1,19],147:[1,20],148:[1,21]},{1:[3]},{5:[1,103],137:[1,104],138:[1,105]},{4:106,16:14,17:[1,93],18:[1,94],19:15,20:[1,95],21:[1,96],22:6,23:[1,25],24:[1,26],25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:9,55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:10,68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:[1,73],74:[1,74],75:[1,75],76:[1,76],77:11,78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:12,84:[1,82],85:[1,83],86:[1,84],87:[1,85],88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:13,94:[1,91],95:[1,92],96:16,97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],105:[1,23],119:[1,22],122:[1,24],127:[1,8],128:[1,7],134:[1,17],139:[1,3],140:[1,4],141:[1,5],145:[1,18],146:[1,19],147:[1,20],148:[1,21]},{4:107,16:14,17:[1,93],18:[1,94],19:15,20:[1,95],21:[1,96],22:6,23:[1,25],24:[1,26],25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:9,55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:10,68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:[1,73],74:[1,74],75:[1,75],76:[1,76],77:11,78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:12,84:[1,82],85:[1,83],86:[1,84],87:[1,85],88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:13,94:[1,91],95:[1,92],96:16,97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],105:[1,23],119:[1,22],122:[1,24],127:[1,8],128:[1,7],134:[1,17],139:[1,3],140:[1,4],141:[1,5],145:[1,18],146:[1,19],147:[1,20],148:[1,21]},{4:108,16:14,17:[1,93],18:[1,94],19:15,20:[1,95],21:[1,96],22:6,23:[1,25],24:[1,26],25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:9,55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:10,68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:[1,73],74:[1,74],75:[1,75],76:[1,76],77:11,78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:12,84:[1,82],85:[1,83],86:[1,84],87:[1,85],88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:13,94:[1,91],95:[1,92],96:16,97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],105:[1,23],119:[1,22],122:[1,24],127:[1,8],128:[1,7],134:[1,17],139:[1,3],140:[1,4],141:[1,5],145:[1,18],146:[1,19],147:[1,20],148:[1,21]},{6:112,7:[1,114],8:[1,115],9:113,10:[1,116],11:[1,117],12:109,143:[1,110],144:[1,111]},{143:[1,118],144:[1,119]},{6:112,7:[1,114],8:[1,115],9:113,10:[1,116],11:[1,117],12:120,143:[1,121],144:[1,122]},{143:[1,124],144:[1,123]},{143:[1,126],144:[1,125]},{143:[1,128],144:[1,127]},{143:[1,130],144:[1,129]},{143:[1,132],144:[1,131]},{6:112,7:[1,114],8:[1,115],9:113,10:[1,116],11:[1,117],12:135,143:[1,133],144:[1,134]},{6:112,7:[1,114],8:[1,115],9:113,10:[1,116],11:[1,117],12:138,143:[1,136],144:[1,137]},{143:[1,139],144:[1,140]},{143:[1,141],144:[1,142]},{143:[1,143],144:[1,144]},{143:[1,145],144:[1,146]},{143:[1,147],144:[1,148]},{143:[1,149],144:[1,150]},{143:[1,151],144:[1,152]},{143:[1,153],144:[1,154]},{143:[1,156],144:[1,155]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],143:[2,14],144:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],143:[2,15],144:[2,15]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],143:[2,16],144:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],143:[2,17],144:[2,17]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],143:[2,18],144:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],143:[2,19],144:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],143:[2,20],144:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],143:[2,21],144:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],143:[2,22],144:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],143:[2,23],144:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],143:[2,24],144:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],143:[2,25],144:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],143:[2,26],144:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],143:[2,27],144:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],143:[2,28],144:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],143:[2,29],144:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],143:[2,30],144:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],143:[2,31],144:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],143:[2,32],144:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],143:[2,33],144:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],143:[2,34],144:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],143:[2,35],144:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],143:[2,36],144:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],143:[2,37],144:[2,37]},{7:[2,38],8:[2,38],10:[2,38],11:[2,38],143:[2,38],144:[2,38]},{7:[2,39],8:[2,39],10:[2,39],11:[2,39],143:[2,39],144:[2,39]},{7:[2,40],8:[2,40],10:[2,40],11:[2,40],143:[2,40],144:[2,40]},{7:[2,41],8:[2,41],10:[2,41],11:[2,41],143:[2,41],144:[2,41]},{7:[2,42],8:[2,42],10:[2,42],11:[2,42],143:[2,42],144:[2,42]},{7:[2,43],8:[2,43],10:[2,43],11:[2,43],143:[2,43],144:[2,43]},{7:[2,44],8:[2,44],10:[2,44],11:[2,44],143:[2,44],144:[2,44]},{143:[2,45],144:[2,45]},{143:[2,46],144:[2,46]},{143:[2,47],144:[2,47]},{143:[2,48],144:[2,48]},{143:[2,49],144:[2,49]},{143:[2,50],144:[2,50]},{143:[2,51],144:[2,51]},{143:[2,52],144:[2,52]},{143:[2,53],144:[2,53]},{143:[2,54],144:[2,54]},{143:[2,55],144:[2,55]},{143:[2,56],144:[2,56]},{143:[2,57],144:[2,57]},{143:[2,58],144:[2,58]},{143:[2,59],144:[2,59]},{143:[2,60],144:[2,60]},{143:[2,61],144:[2,61]},{143:[2,62],144:[2,62]},{143:[2,63],144:[2,63]},{143:[2,64],144:[2,64]},{143:[2,65],144:[2,65]},{143:[2,66],144:[2,66]},{143:[2,67],144:[2,67]},{143:[2,68],144:[2,68]},{143:[2,69],144:[2,69]},{143:[2,70],144:[2,70]},{143:[2,71],144:[2,71]},{143:[2,72],144:[2,72]},{143:[2,73],144:[2,73]},{143:[2,74],144:[2,74]},{143:[2,75],144:[2,75]},{143:[2,76],144:[2,76]},{143:[2,77],144:[2,77]},{143:[2,78],144:[2,78]},{143:[2,79],144:[2,79]},{143:[2,80],144:[2,80]},{143:[2,81],144:[2,81]},{7:[2,10],8:[2,10],10:[2,10],11:[2,10],143:[2,10],144:[2,10]},{7:[2,11],8:[2,11],10:[2,11],11:[2,11],143:[2,11],144:[2,11]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],143:[2,12],144:[2,12]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],143:[2,13],144:[2,13]},{143:[2,82],144:[2,82]},{143:[2,83],144:[2,83]},{143:[2,84],144:[2,84]},{143:[2,85],144:[2,85]},{143:[2,86],144:[2,86]},{143:[2,87],144:[2,87]},{1:[2,1]},{4:157,16:14,17:[1,93],18:[1,94],19:15,20:[1,95],21:[1,96],22:6,23:[1,25],24:[1,26],25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:9,55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:10,68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:[1,73],74:[1,74],75:[1,75],76:[1,76],77:11,78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:12,84:[1,82],85:[1,83],86:[1,84],87:[1,85],88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:13,94:[1,91],95:[1,92],96:16,97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],105:[1,23],119:[1,22],122:[1,24],127:[1,8],128:[1,7],134:[1,17],139:[1,3],140:[1,4],141:[1,5],145:[1,18],146:[1,19],147:[1,20],148:[1,21]},{4:158,16:14,17:[1,93],18:[1,94],19:15,20:[1,95],21:[1,96],22:6,23:[1,25],24:[1,26],25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:9,55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:10,68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:[1,73],74:[1,74],75:[1,75],76:[1,76],77:11,78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:12,84:[1,82],85:[1,83],86:[1,84],87:[1,85],88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:13,94:[1,91],95:[1,92],96:16,97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],105:[1,23],119:[1,22],122:[1,24],127:[1,8],128:[1,7],134:[1,17],139:[1,3],140:[1,4],141:[1,5],145:[1,18],146:[1,19],147:[1,20],148:[1,21]},{5:[2,163],137:[2,163],138:[2,163],142:[2,163]},{5:[2,164],137:[2,164],138:[2,164],142:[2,164]},{137:[1,104],138:[1,105],142:[1,159]},{15:[1,160]},{15:[1,161]},{15:[1,162]},{15:[2,6]},{15:[2,7]},{15:[2,2]},{15:[2,3]},{15:[2,4]},{15:[2,5]},{15:[1,166],126:[1,163],135:[1,164],136:[1,165]},{15:[1,170],126:[1,167],135:[1,168],136:[1,169]},{15:[1,171]},{15:[1,172]},{15:[1,173]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:174,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:198,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:199,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:200,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:201,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:202,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:203,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:204,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:205,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:206,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{15:[1,208],24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:207,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{15:[1,210],24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:209,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{15:[1,211]},{15:[1,212]},{15:[1,213]},{15:[1,214]},{13:215,14:[1,216],15:[1,217]},{13:218,14:[1,216],15:[1,217]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:219,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:220,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:221,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:222,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:223,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:224,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:225,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:226,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:227,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:228,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:229,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:230,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:231,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:232,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:233,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{24:[1,177],25:[1,187],55:[1,186],97:[1,185],103:234,104:[1,175],105:[1,176],108:[1,180],111:[1,178],119:[1,179],120:[1,195],121:[1,181],122:[1,182],123:[1,183],125:[1,197],126:[1,184],127:[1,188],128:[1,189],129:[1,190],130:[1,191],131:[1,192],134:[1,193],135:[1,194],136:[1,196]},{5:[2,161],137:[2,161],138:[2,161],142:[2,161]},{5:[2,162],137:[1,104],138:[2,162],142:[2,162]},{5:[2,165],137:[2,165],138:[2,165],142:[2,165]},{5:[2,166],137:[2,166],138:[2,166],142:[2,166]},{5:[2,167],137:[2,167],138:[2,167],142:[2,167]},{5:[2,168],137:[2,168],138:[2,168],142:[2,168]},{5:[2,169],137:[2,169],138:[2,169],142:[2,169]},{5:[2,170],137:[2,170],138:[2,170],142:[2,170]},{5:[2,171],137:[2,171],138:[2,171],142:[2,171]},{5:[2,172],137:[2,172],138:[2,172],142:[2,172]},{5:[2,173],137:[2,173],138:[2,173],142:[2,173]},{5:[2,174],137:[2,174],138:[2,174],142:[2,174]},{5:[2,175],137:[2,175],138:[2,175],142:[2,175]},{5:[2,176],137:[2,176],138:[2,176],142:[2,176]},{5:[2,177],137:[2,177],138:[2,177],142:[2,177]},{5:[2,196],137:[2,196],138:[2,196],142:[2,196]},{5:[2,197],137:[2,197],138:[2,197],142:[2,197]},{5:[2,178],137:[2,178],138:[2,178],142:[2,178]},{5:[2,88],137:[2,88],138:[2,88],142:[2,88]},{5:[2,89],106:[1,235],107:[1,236],108:[1,237],109:[1,238],110:[1,239],137:[2,89],138:[2,89],142:[2,89]},{5:[2,95],137:[2,95],138:[2,95],142:[2,95]},{112:[1,240],113:[1,241],114:[1,242],117:[1,243],118:[1,244]},{5:[2,104],106:[1,245],107:[1,246],108:[1,247],109:[1,248],110:[1,249],137:[2,104],138:[2,104],142:[2,104]},{107:[1,250],109:[1,251],118:[1,252],120:[1,253]},{5:[2,118],107:[1,254],109:[1,255],137:[2,118],138:[2,118],142:[2,118]},{5:[2,123],113:[1,256],137:[2,123],138:[2,123],142:[2,123]},{120:[1,258],124:[1,257],125:[1,259]},{5:[2,131],137:[2,131],138:[2,131],142:[2,131]},{5:[2,132],106:[1,260],107:[1,261],108:[1,262],109:[1,263],110:[1,264],137:[2,132],138:[2,132],142:[2,132]},{5:[2,141],137:[2,141],138:[2,141],142:[2,141]},{5:[2,142],137:[2,142],138:[2,142],142:[2,142]},{5:[2,143],107:[1,265],109:[1,266],137:[2,143],138:[2,143],142:[2,143]},{5:[2,146],137:[2,146],138:[2,146],142:[2,146]},{5:[2,147],137:[2,147],138:[2,147],142:[2,147]},{5:[2,148],137:[2,148],138:[2,148],142:[2,148]},{132:[1,267],133:[1,268]},{5:[2,153],113:[1,269],137:[2,153],138:[2,153],142:[2,153]},{5:[2,155],137:[2,155],138:[2,155],142:[2,155]},{5:[2,156],113:[1,270],137:[2,156],138:[2,156],142:[2,156]},{5:[2,158],137:[2,158],138:[2,158],142:[2,158]},{5:[2,159],113:[1,271],137:[2,159],138:[2,159],142:[2,159]},{5:[2,179],137:[2,179],138:[2,179],142:[2,179]},{5:[2,180],137:[2,180],138:[2,180],142:[2,180]},{5:[2,181],137:[2,181],138:[2,181],142:[2,181]},{5:[2,182],137:[2,182],138:[2,182],142:[2,182]},{5:[2,183],137:[2,183],138:[2,183],142:[2,183]},{5:[2,184],137:[2,184],138:[2,184],142:[2,184]},{5:[2,185],137:[2,185],138:[2,185],142:[2,185]},{5:[2,186],137:[2,186],138:[2,186],142:[2,186]},{5:[2,187],137:[2,187],138:[2,187],142:[2,187]},{5:[2,188],137:[2,188],138:[2,188],142:[2,188]},{5:[2,190],137:[2,190],138:[2,190],142:[2,190]},{5:[2,189],137:[2,189],138:[2,189],142:[2,189]},{5:[2,191],137:[2,191],138:[2,191],142:[2,191]},{5:[2,192],137:[2,192],138:[2,192],142:[2,192]},{5:[2,193],137:[2,193],138:[2,193],142:[2,193]},{5:[2,194],137:[2,194],138:[2,194],142:[2,194]},{5:[2,195],137:[2,195],138:[2,195],142:[2,195]},{5:[2,198],137:[2,198],138:[2,198],142:[2,198]},{5:[2,8],137:[2,8],138:[2,8],142:[2,8]},{5:[2,9],137:[2,9],138:[2,9],142:[2,9]},{5:[2,199],137:[2,199],138:[2,199],142:[2,199]},{5:[2,200],137:[2,200],138:[2,200],142:[2,200]},{5:[2,201],137:[2,201],138:[2,201],142:[2,201]},{5:[2,202],137:[2,202],138:[2,202],142:[2,202]},{5:[2,203],137:[2,203],138:[2,203],142:[2,203]},{5:[2,204],137:[2,204],138:[2,204],142:[2,204]},{5:[2,207],137:[2,207],138:[2,207],142:[2,207]},{5:[2,205],137:[2,205],138:[2,205],142:[2,205]},{5:[2,208],137:[2,208],138:[2,208],142:[2,208]},{5:[2,206],137:[2,206],138:[2,206],142:[2,206]},{5:[2,209],137:[2,209],138:[2,209],142:[2,209]},{5:[2,210],137:[2,210],138:[2,210],142:[2,210]},{5:[2,211],137:[2,211],138:[2,211],142:[2,211]},{5:[2,212],137:[2,212],138:[2,212],142:[2,212]},{5:[2,213],137:[2,213],138:[2,213],142:[2,213]},{5:[2,214],137:[2,214],138:[2,214],142:[2,214]},{5:[2,215],137:[2,215],138:[2,215],142:[2,215]},{5:[2,90],137:[2,90],138:[2,90],142:[2,90]},{5:[2,91],137:[2,91],138:[2,91],142:[2,91]},{5:[2,92],137:[2,92],138:[2,92],142:[2,92]},{5:[2,93],137:[2,93],138:[2,93],142:[2,93]},{5:[2,94],137:[2,94],138:[2,94],142:[2,94]},{5:[2,96],113:[1,272],137:[2,96],138:[2,96],142:[2,96]},{5:[2,98],137:[2,98],138:[2,98],142:[2,98]},{115:[1,273],116:[1,274]},{5:[2,101],137:[2,101],138:[2,101],142:[2,101]},{115:[1,275],116:[1,276]},{5:[2,105],137:[2,105],138:[2,105],142:[2,105]},{5:[2,106],137:[2,106],138:[2,106],142:[2,106]},{5:[2,107],137:[2,107],138:[2,107],142:[2,107]},{5:[2,108],137:[2,108],138:[2,108],142:[2,108]},{5:[2,109],137:[2,109],138:[2,109],142:[2,109]},{5:[2,110],113:[1,277],137:[2,110],138:[2,110],142:[2,110]},{5:[2,112],113:[1,278],137:[2,112],138:[2,112],142:[2,112]},{5:[2,114],113:[1,279],137:[2,114],138:[2,114],142:[2,114]},{5:[2,116],113:[1,280],137:[2,116],138:[2,116],142:[2,116]},{5:[2,119],113:[1,281],137:[2,119],138:[2,119],142:[2,119]},{5:[2,121],113:[1,282],137:[2,121],138:[2,121],142:[2,121]},{5:[2,124],137:[2,124],138:[2,124],142:[2,124]},{5:[2,125],113:[1,283],137:[2,125],138:[2,125],142:[2,125]},{5:[2,127],113:[1,284],137:[2,127],138:[2,127],142:[2,127]},{5:[2,129],113:[1,285],137:[2,129],138:[2,129],142:[2,129]},{5:[2,133],113:[1,286],137:[2,133],138:[2,133],142:[2,133]},{5:[2,135],137:[2,135],138:[2,135],142:[2,135]},{5:[2,136],113:[1,287],137:[2,136],138:[2,136],142:[2,136]},{5:[2,138],137:[2,138],138:[2,138],142:[2,138]},{5:[2,139],113:[1,288],137:[2,139],138:[2,139],142:[2,139]},{5:[2,144],137:[2,144],138:[2,144],142:[2,144]},{5:[2,145],137:[2,145],138:[2,145],142:[2,145]},{5:[2,149],113:[1,289],137:[2,149],138:[2,149],142:[2,149]},{5:[2,151],113:[1,290],137:[2,151],138:[2,151],142:[2,151]},{5:[2,154],137:[2,154],138:[2,154],142:[2,154]},{5:[2,157],137:[2,157],138:[2,157],142:[2,157]},{5:[2,160],137:[2,160],138:[2,160],142:[2,160]},{5:[2,97],137:[2,97],138:[2,97],142:[2,97]},{5:[2,99],137:[2,99],138:[2,99],142:[2,99]},{5:[2,100],137:[2,100],138:[2,100],142:[2,100]},{5:[2,102],137:[2,102],138:[2,102],142:[2,102]},{5:[2,103],137:[2,103],138:[2,103],142:[2,103]},{5:[2,111],137:[2,111],138:[2,111],142:[2,111]},{5:[2,113],137:[2,113],138:[2,113],142:[2,113]},{5:[2,115],137:[2,115],138:[2,115],142:[2,115]},{5:[2,117],137:[2,117],138:[2,117],142:[2,117]},{5:[2,120],137:[2,120],138:[2,120],142:[2,120]},{5:[2,122],137:[2,122],138:[2,122],142:[2,122]},{5:[2,126],137:[2,126],138:[2,126],142:[2,126]},{5:[2,128],137:[2,128],138:[2,128],142:[2,128]},{5:[2,130],137:[2,130],138:[2,130],142:[2,130]},{5:[2,134],137:[2,134],138:[2,134],142:[2,134]},{5:[2,137],137:[2,137],138:[2,137],142:[2,137]},{5:[2,140],137:[2,140],138:[2,140],142:[2,140]},{5:[2,150],137:[2,150],138:[2,150],142:[2,150]},{5:[2,152],137:[2,152],138:[2,152],142:[2,152]}],
defaultActions: {103:[2,1],112:[2,6],113:[2,7],114:[2,2],115:[2,3],116:[2,4],117:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


function parseIpPort(yy, ipPortStr, which) {
  ipPortStr = ipPortStr.trim();
  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }

  var t1 = {and: []};
  var t2 = {and: []};
  var xff;
  var dns;
  var email;

  if (ip1 !== -1) {
    if (ip1 === ip2) {
        t1.and.push({term: {a1: ip1>>>0}});
        t2.and.push({term: {a2: ip1>>>0}});
        dns   = {term: {dnsip: ip1>>>0}};
        email = {term: {eip: ip1>>>0}};
        xff   = {term: {xff: ip1>>>0}};
    } else {
        t1.and.push({range: {a1: {from: ip1>>>0, to: ip2>>>0}}});
        t2.and.push({range: {a2: {from: ip1>>>0, to: ip2>>>0}}});
        dns =    {range: {dnsip: {from: ip1>>>0, to: ip2>>>0}}};
        email =  {range: {eip: {from: ip1>>>0, to: ip2>>>0}}};
        xff =    {range: {xff: {from: ip1>>>0, to: ip2>>>0}}};
    }
  }

  if (port !== -1) {
    t1.and.push({term: {p1: port}});
    t2.and.push({term: {p2: port}});
  }

  if (t1.and.length === 1) {
      t1 = t1.and[0];
      t2 = t2.and[0];
  }

  switch(which) {
  case 0:
    var ors = [t1, t2];

    if (xff)
        ors.push(xff);
    if (dns)
        ors.push(dns);
    if (yy.emailSearch === true && email)
        ors.push(email);

    return {or: ors};
  case 1:
    return t1;
  case 2:
    return t2;
  case 3:
    if (!xff)
        throw "xff doesn't support port only";
    return xff;
  case 4:
    if (!dns)
        throw "dns doesn't support port only";
    return dns;
  case 5:
    if (!email)
        throw "email doesn't support port only";
    return email;
  }
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}

var field2RawField = {
    us: "rawus",
    ua: "rawua",
    as1: "rawas1",
    as2: "rawas2",
    asxff: "rawasff",
    asdnsip: "rawasdnsip",
    iOn: "rawiOn",
    eua: "raweua",
    esub: "rawesub",
    aseip: "rawaseip"
}

function str2Query(field, kind, str)
{
    var obj;

    if (field2RawField[field] === undefined && field.indexOf(".snow", field.length - 5) !== -1) {
        field2RawField[field] = field.substring(0, field.length - 5) + ".raw";
    }

    if (str[0] === "/" && str[str.length -1] === "/") {
        field = field2RawField[field] || field;
        obj = {query: {regexp: {}}};
        obj.query.regexp[field] = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        return obj;
    }

    if (str[0] === "\"" && str[str.length -1] === "\"") {
        str = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
    }

    if (str.indexOf("*") !== -1) {
        field = field2RawField[field] || field;
        obj = {query: {wildcard: {}}};
        obj.query.wildcard[field] = str;
    } else if (kind === "text") {
        obj = {query: {text: {}}};
        obj.query.text[field] = {query: str, type: "phrase", operator: "and"}
    } else if (kind === "term") {
        obj = {term: {}};
        obj.term[field] = str;
    }
    return obj;
}
function str2Header(yy, name) {
    var field = yy.fieldsMap[name];
    if (field === undefined) throw "Unknown field " + name;

    return field.db;
}

/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 15
break;
case 2:return 14
break;
case 3:if (!yy.emailSearch) throw "email searches disabled for user"; return 42
break;
case 4:if (!yy.emailSearch) throw "email searches disabled for user"; return 74
break;
case 5:if (!yy.emailSearch) throw "email searches disabled for user"; return 47
break;
case 6:if (!yy.emailSearch) throw "email searches disabled for user"; return 72
break;
case 7:if (!yy.emailSearch) throw "email searches disabled for user"; return 45
break;
case 8:if (!yy.emailSearch) throw "email searches disabled for user"; return 70
break;
case 9:if (!yy.emailSearch) throw "email searches disabled for user"; return 50
break;
case 10:if (!yy.emailSearch) throw "email searches disabled for user"; return 90
break;
case 11:return "http.hasheader.dst.cnt"
break;
case 12:return "http.hasheader.dst"
break;
case 13:return "http.hasheader"
break;
case 14:return "http.hasheader.src.cnt"
break;
case 15:return "http.hasheader.src"
break;
case 16:return "http.user-agent.cnt"
break;
case 17:return "http.user-agent"
break;
case 18:return "http.user-agent.cnt"
break;
case 19:return "http.user-agent"
break;
case 20:return 105
break;
case 21:return 86
break;
case 22:return 85
break;
case 23:return 84
break;
case 24:return 87
break;
case 25:if (!yy.emailSearch) throw "email searches disabled for user"; return 88
break;
case 26:return 24
break;
case 27:return "cert.alt.cnt"
break;
case 28:return "cert.alt"
break;
case 29:return "cert.cnt"
break;
case 30:return "cert.issuer.cn"
break;
case 31:return "cert.issuer.on"
break;
case 32:return "cert.serial"
break;
case 33:return "cert.subject.cn"
break;
case 34:return "cert.subject.on"
break;
case 35:return 119
break;
case 36:return 82
break;
case 37:return 79
break;
case 38:return 78
break;
case 39:return 80
break;
case 40:if (!yy.emailSearch) throw "email searches disabled for user"; return 81
break;
case 41:return 23
break;
case 42:if (!yy.emailSearch) throw "email searches disabled for user"; return 42
break;
case 43:if (!yy.emailSearch) throw "email searches disabled for user"; return 74
break;
case 44:if (!yy.emailSearch) throw "email searches disabled for user"; return 43
break;
case 45:if (!yy.emailSearch) throw "email searches disabled for user"; return 60
break;
case 46:if (!yy.emailSearch) throw "email searches disabled for user"; return 44
break;
case 47:if (!yy.emailSearch) throw "email searches disabled for user"; return 73
break;
case 48:if (!yy.emailSearch) throw "email searches disabled for user"; return 45
break;
case 49:if (!yy.emailSearch) throw "email searches disabled for user"; return 70
break;
case 50:if (!yy.emailSearch) throw "email searches disabled for user"; return 46
break;
case 51:if (!yy.emailSearch) throw "email searches disabled for user"; return 71
break;
case 52:if (!yy.emailSearch) throw "email searches disabled for user"; return 47
break;
case 53:if (!yy.emailSearch) throw "email searches disabled for user"; return 72
break;
case 54:if (!yy.emailSearch) throw "email searches disabled for user"; return 48
break;
case 55:if (!yy.emailSearch) throw "email searches disabled for user"; return 61
break;
case 56:if (!yy.emailSearch) throw "email searches disabled for user"; return 49
break;
case 57:if (!yy.emailSearch) throw "email searches disabled for user"; return 89
break;
case 58:if (!yy.emailSearch) throw "email searches disabled for user"; return 50
break;
case 59:if (!yy.emailSearch) throw "email searches disabled for user"; return 90
break;
case 60:if (!yy.emailSearch) throw "email searches disabled for user"; return 20
break;
case 61:if (!yy.emailSearch) throw "email searches disabled for user"; return 17
break;
case 62:return "file"
break;
case 63:return "http.hasheader.dst.cnt"
break;
case 64:return "http.hasheader.dst"
break;
case 65:return "http.hasheader"
break;
case 66:return "http.hasheader.src.cnt"
break;
case 67:return "http.hasheader.src"
break;
case 68:return "host.dns.cnt"
break;
case 69:return "host.dns"
break;
case 70:return "host.email.cnt"
break;
case 71:return "host.email"
break;
case 72:return "host.http.cnt"
break;
case 73:return "host.http"
break;
case 74:return "host"
break;
case 75:return "http.md5.cnt"
break;
case 76:return "http.md5"
break;
case 77:return "http.uri.cnt"
break;
case 78:return "http.uri"
break;
case 79:return "http.user-agent.cnt"
break;
case 80:return "http.user-agent"
break;
case 81:return "host.http.cnt"
break;
case 82:return "host.http"
break;
case 83:return "HTTP_HEADER_CNT"
break;
case 84:return "HTTP_HEADER"
break;
case 85:return "icmp"
break;
case 86:return "icmp"
break;
case 87:return "id"
break;
case 88:return "ip.dns.cnt"
break;
case 89:return "ip.dns"
break;
case 90:return "ip.dst"
break;
case 91:return "ip"
break;
case 92:return "ip.src"
break;
case 93:return "ip.xff.cnt"
break;
case 94:return "ip.xff"
break;
case 95:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email.cnt"
break;
case 96:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email"
break;
case 97:return 55
break;
case 98:return 25
break;
case 99:return 27
break;
case 100:return 127
break;
case 101:return 26
break;
case 102:return 128
break;
case 103:return "rootId"
break;
case 104:return "ssh.key.cnt"
break;
case 105:return "ssh.key"
break;
case 106:return "ssh.ver.cnt"
break;
case 107:return "ssh.ver"
break;
case 108:return 41
break;
case 109:return 134
break;
case 110:return "tcp"
break;
case 111:return "tcp"
break;
case 112:return "udp"
break;
case 113:return "udp"
break;
case 114:return "http.uri.cnt"
break;
case 115:return "http.uri"
break;
case 116:return "user.cnt"
break;
case 117:return "user"
break;
case 118:return 104
break;
case 119:return 129
break;
case 120:return 130
break;
case 121:return 8
break;
case 122:return 7
break;
case 123:return 11
break;
case 124:return 10
break;
case 125:return 144
break;
case 126:return 143
break;
case 127:return 143
break;
case 128:return 138
break;
case 129:return 138
break;
case 130:return 137
break;
case 131:return 137
break;
case 132:return 141
break;
case 133:return 142
break;
case 134:return 139
break;
case 135:return 5
break;
case 136:return 'INVALID'
break;
case 137:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:[0-9]+\b)/,/^(?:([0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\/[0-9]{1,2})?(:[0-9]{1,5})?\b)/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:http\.ua\.cnt)/,/^(?:http\.ua)/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:asn\.email)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:country\.email)/,/^(?:databytes)/,/^(?:email\.content-type\.cnt)/,/^(?:email\.content-type)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.message-id\.cnt)/,/^(?:email\.message-id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mime-version\.cnt)/,/^(?:email\.mime-version)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.x-mailer\.cnt)/,/^(?:email\.x-mailer)/,/^(?:email\.[^\s!=><.]*\.cnt)/,/^(?:email\.[^\s!=><.]*)/,/^(?:file)/,/^(?:http\.hasheader\.dst\.cnt)/,/^(?:http\.hasheader\.dst)/,/^(?:http\.hasheader)/,/^(?:http\.hasheader\.src\.cnt)/,/^(?:http\.hasheader\.src)/,/^(?:host\.dns\.cnt)/,/^(?:host\.dns)/,/^(?:host\.email\.cnt)/,/^(?:host\.email)/,/^(?:host\.http\.cnt)/,/^(?:host\.http)/,/^(?:host)/,/^(?:http\.md5\.cnt)/,/^(?:http\.md5)/,/^(?:http\.uri\.cnt)/,/^(?:http\.uri)/,/^(?:http\.user-agent\.cnt)/,/^(?:http\.user-agent)/,/^(?:http\.host\.cnt)/,/^(?:http\.host)/,/^(?:http\.[^\s!=><.]*\.cnt)/,/^(?:http\.[^\s!=><.]*)/,/^(?:icmp)/,/^(?:"icmp")/,/^(?:id)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:ip\.email\.cnt)/,/^(?:ip\.email)/,/^(?:node)/,/^(?:packets)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rootId)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:"tcp")/,/^(?:udp)/,/^(?:"udp")/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"\\]*(?:\\.[^"\\]*)*")/,/^(?:\/[^/\\]*(?:\\.[^/\\]*)*\/)/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}