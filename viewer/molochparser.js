/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"IPMATCHLIST":15,"NUMBER":16,"NUMBERLIST":17,"HEADER":18,"EMAIL_HEADER":19,"HTTP_HEADER":20,"HEADER_CNT":21,"EMAIL_HEADER_CNT":22,"HTTP_HEADER_CNT":23,"RANGEFIELD":24,"databytes":25,"bytes":26,"packets":27,"port.dst":28,"port.socks":29,"port.src":30,"http.uri.cnt":31,"http.uri.key.cnt":32,"http.uri.path.cnt":33,"http.uri.value.cnt":34,"cert.cnt":35,"ip.dns.cnt":36,"ip.email.cnt":37,"ip.xff.cnt":38,"http.md5.cnt":39,"http.user-agent.cnt":40,"http.version.src.cnt":41,"http.version.dst.cnt":42,"user.cnt":43,"host.dns.cnt":44,"host.email.cnt":45,"host.http.cnt":46,"http.hasheader.src.cnt":47,"http.hasheader.dst.cnt":48,"tags.cnt":49,"email.content-type.cnt":50,"email.dst.cnt":51,"email.fn.cnt":52,"email.message-id.cnt":53,"email.md5.cnt":54,"email.mime-version.cnt":55,"email.src.cnt":56,"email.subject.cnt":57,"email.x-mailer.cnt":58,"cert.alt.cnt":59,"smb.domain.cnt":60,"smb.fn.cnt":61,"smb.host.cnt":62,"smb.os.cnt":63,"smb.share.cnt":64,"smb.user.cnt":65,"smb.ver.cnt":66,"ssh.key.cnt":67,"ssh.ver.cnt":68,"irc.nick.cnt":69,"irc.channel.cnt":70,"LOTERMFIELD":71,"node":72,"host.dns":73,"host.socks":74,"host.email":75,"host.http":76,"user":77,"email.dst":78,"email.src":79,"cert.subject.cn":80,"cert.issuer.cn":81,"cert.serial":82,"cert.alt":83,"ssh.ver":84,"payload8.dst":85,"payload8.src":86,"TERMFIELD":87,"id":88,"ssh.key":89,"email.message-id":90,"email.md5":91,"email.mime-version":92,"email.fn":93,"email.content-type":94,"http.md5":95,"http.uri.key":96,"http.uri.path":97,"http.uri.value":98,"http.version.src":99,"http.version.dst":100,"irc.nick":101,"irc.channel":102,"rootId":103,"smb.domain":104,"smb.fn":105,"smb.host":106,"smb.os":107,"smb.share":108,"smb.user":109,"socks.user":110,"smb.ver":111,"UPTERMFIELD":112,"country.dns":113,"country.dst":114,"country.email":115,"country.socks":116,"country.src":117,"country.xff":118,"rir.dns":119,"rir.dst":120,"rir.email":121,"rir.socks":122,"rir.src":123,"rir.xff":124,"LOTEXTFIELD":125,"asn.src":126,"asn.dst":127,"asn.dns":128,"asn.email":129,"asn.socks":130,"asn.xff":131,"email.subject":132,"email.x-mailer":133,"cert.subject.on":134,"cert.issuer.on":135,"TEXTFIELD":136,"http.uri":137,"http.user-agent":138,"IPFIELD":139,"ip":140,"ip.src":141,"ip.dst":142,"ip.xff":143,"ip.dns":144,"ip.email":145,"ip.socks":146,"STR":147,"ID":148,"asn":149,"dns":150,"dst":151,"email":152,"src":153,"xff":154,"cert":155,"alt":156,"cnt":157,"issuer":158,"cn":159,"on":160,"serial":161,"subject":162,"country":163,"ua":164,"header":165,"host":166,"http":167,"md5":168,"uri":169,"icmp":170,"socks":171,"port":172,"protocol":173,"rir":174,"ssh":175,"key":176,"ver":177,"tags":178,"tcp":179,"udp":180,"QUOTEDSTR":181,"REGEXSTR":182,"LOWERLIST":183,"ANYLIST":184,"PROTOCOLNUMBER":185,"PROTOCOLLIST":186,"&&":187,"||":188,"!":189,"-":190,"(":191,")":192,"==":193,"!=":194,"file":195,"http.hasheader":196,"http.hasheader.src":197,"http.hasheader.dst":198,"http.version":199,"payload8":200,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"IPMATCHLIST",16:"NUMBER",17:"NUMBERLIST",19:"EMAIL_HEADER",20:"HTTP_HEADER",22:"EMAIL_HEADER_CNT",23:"HTTP_HEADER_CNT",25:"databytes",26:"bytes",27:"packets",28:"port.dst",29:"port.socks",30:"port.src",31:"http.uri.cnt",32:"http.uri.key.cnt",33:"http.uri.path.cnt",34:"http.uri.value.cnt",35:"cert.cnt",36:"ip.dns.cnt",37:"ip.email.cnt",38:"ip.xff.cnt",39:"http.md5.cnt",40:"http.user-agent.cnt",41:"http.version.src.cnt",42:"http.version.dst.cnt",43:"user.cnt",44:"host.dns.cnt",45:"host.email.cnt",46:"host.http.cnt",47:"http.hasheader.src.cnt",48:"http.hasheader.dst.cnt",49:"tags.cnt",50:"email.content-type.cnt",51:"email.dst.cnt",52:"email.fn.cnt",53:"email.message-id.cnt",54:"email.md5.cnt",55:"email.mime-version.cnt",56:"email.src.cnt",57:"email.subject.cnt",58:"email.x-mailer.cnt",59:"cert.alt.cnt",60:"smb.domain.cnt",61:"smb.fn.cnt",62:"smb.host.cnt",63:"smb.os.cnt",64:"smb.share.cnt",65:"smb.user.cnt",66:"smb.ver.cnt",67:"ssh.key.cnt",68:"ssh.ver.cnt",69:"irc.nick.cnt",70:"irc.channel.cnt",72:"node",73:"host.dns",74:"host.socks",75:"host.email",76:"host.http",77:"user",78:"email.dst",79:"email.src",80:"cert.subject.cn",81:"cert.issuer.cn",82:"cert.serial",83:"cert.alt",84:"ssh.ver",85:"payload8.dst",86:"payload8.src",88:"id",89:"ssh.key",90:"email.message-id",91:"email.md5",92:"email.mime-version",93:"email.fn",94:"email.content-type",95:"http.md5",96:"http.uri.key",97:"http.uri.path",98:"http.uri.value",99:"http.version.src",100:"http.version.dst",101:"irc.nick",102:"irc.channel",103:"rootId",104:"smb.domain",105:"smb.fn",106:"smb.host",107:"smb.os",108:"smb.share",109:"smb.user",110:"socks.user",111:"smb.ver",113:"country.dns",114:"country.dst",115:"country.email",116:"country.socks",117:"country.src",118:"country.xff",119:"rir.dns",120:"rir.dst",121:"rir.email",122:"rir.socks",123:"rir.src",124:"rir.xff",126:"asn.src",127:"asn.dst",128:"asn.dns",129:"asn.email",130:"asn.socks",131:"asn.xff",132:"email.subject",133:"email.x-mailer",134:"cert.subject.on",135:"cert.issuer.on",137:"http.uri",138:"http.user-agent",140:"ip",141:"ip.src",142:"ip.dst",143:"ip.xff",144:"ip.dns",145:"ip.email",146:"ip.socks",148:"ID",149:"asn",150:"dns",151:"dst",152:"email",153:"src",154:"xff",155:"cert",156:"alt",157:"cnt",158:"issuer",159:"cn",160:"on",161:"serial",162:"subject",163:"country",164:"ua",165:"header",166:"host",167:"http",168:"md5",169:"uri",170:"icmp",171:"socks",172:"port",173:"protocol",174:"rir",175:"ssh",176:"key",177:"ver",178:"tags",179:"tcp",180:"udp",181:"QUOTEDSTR",182:"REGEXSTR",183:"LOWERLIST",184:"ANYLIST",187:"&&",188:"||",189:"!",190:"-",191:"(",192:")",193:"==",194:"!=",195:"file",196:"http.hasheader",197:"http.hasheader.src",198:"http.hasheader.dst",199:"http.version",200:"payload8"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[13,1],[13,1],[18,1],[18,1],[21,1],[21,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[87,1],[112,1],[112,1],[112,1],[112,1],[112,1],[112,1],[112,1],[112,1],[112,1],[112,1],[112,1],[112,1],[125,1],[125,1],[125,1],[125,1],[125,1],[125,1],[125,1],[125,1],[125,1],[125,1],[136,1],[136,1],[139,1],[139,1],[139,1],[139,1],[139,1],[139,1],[139,1],[147,1],[147,1],[147,2],[147,2],[147,2],[147,2],[147,2],[147,1],[147,2],[147,3],[147,2],[147,3],[147,3],[147,2],[147,3],[147,3],[147,1],[147,2],[147,2],[147,2],[147,2],[147,2],[147,2],[147,3],[147,2],[147,3],[147,2],[147,3],[147,2],[147,3],[147,1],[147,2],[147,3],[147,2],[147,3],[147,1],[147,2],[147,2],[147,3],[147,2],[147,3],[147,2],[147,3],[147,1],[147,1],[147,2],[147,3],[147,2],[147,2],[147,3],[147,2],[147,2],[147,2],[147,3],[147,1],[147,1],[147,1],[147,2],[147,2],[147,2],[147,1],[147,1],[147,2],[147,2],[147,2],[147,2],[147,2],[147,2],[147,2],[147,3],[147,2],[147,3],[147,1],[147,2],[147,1],[147,1],[147,2],[147,1],[147,1],[147,2],[147,1],[147,1],[147,1],[147,1],[147,1],[147,1],[147,1],[147,1],[185,1],[185,1],[185,1],[185,1],[186,1],[186,1],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 16:this.$ = 'db'
break;
case 17:this.$ = 'by'
break;
case 18:this.$ = 'pa'
break;
case 19:this.$ = 'p2'
break;
case 20:this.$ = 'sockspo'
break;
case 21:this.$ = 'p1'
break;
case 22:this.$ = 'uscnt'
break;
case 23:this.$ = 'hkeycnt'
break;
case 24:this.$ = 'hpathcnt'
break;
case 25:this.$ = 'hvalcnt'
break;
case 26:this.$ = 'tlscnt'
break;
case 27:this.$ = 'dnsipcnt'
break;
case 28:this.$ = 'eipcnt'
break;
case 29:this.$ = 'xffscnt'
break;
case 30:this.$ = 'hmd5cnt'
break;
case 31:this.$ = 'uacnt'
break;
case 32:this.$ = 'hsvercnt'
break;
case 33:this.$ = 'hdvercnt'
break;
case 34:this.$ = 'usercnt'
break;
case 35:this.$ = 'dnshocnt'
break;
case 36:this.$ = 'ehocnt'
break;
case 37:this.$ = 'hocnt'
break;
case 38:this.$ = 'hh1cnt'
break;
case 39:this.$ = 'hh2cnt'
break;
case 40:this.$ = 'tacnt'
break;
case 41:this.$ = 'ectcnt'
break;
case 42:this.$ = 'edstcnt'
break;
case 43:this.$ = 'efncnt'
break;
case 44:this.$ = 'eidcnt'
break;
case 45:this.$ = 'emd5cnt'
break;
case 46:this.$ = 'emvcnt'
break;
case 47:this.$ = 'esrccnt'
break;
case 48:this.$ = 'esubcnt'
break;
case 49:this.$ = 'euacnt'
break;
case 50:this.$ = 'tls.altcnt'
break;
case 51:this.$ = 'smbdmcnt'
break;
case 52:this.$ = 'smbfncnt'
break;
case 53:this.$ = 'smbhocnt'
break;
case 54:this.$ = 'smboscnt'
break;
case 55:this.$ = 'smbsharecnt'
break;
case 56:this.$ = 'smbusercnt'
break;
case 57:this.$ = 'smbvercnt'
break;
case 58:this.$ = 'sshkeycnt'
break;
case 59:this.$ = 'sshvercnt'
break;
case 60:this.$ = 'ircnckcnt'
break;
case 61:this.$ = 'ircchcnt'
break;
case 62:this.$ = 'no'
break;
case 63:this.$ = 'dnsho'
break;
case 64:this.$ = 'socksho'
break;
case 65:this.$ = 'eho'
break;
case 66:this.$ = 'ho'
break;
case 67:this.$ = 'user'
break;
case 68:this.$ = 'edst'
break;
case 69:this.$ = 'esrc'
break;
case 70:this.$ = 'tls.sCn'
break;
case 71:this.$ = 'tls.iCn'
break;
case 72:this.$ = 'tls.sn'
break;
case 73:this.$ = 'tls.alt'
break;
case 74:this.$ = 'sshver'
break;
case 75:this.$ = 'fb2'
break;
case 76:this.$ = 'fb1'
break;
case 77:this.$ = '_id'
break;
case 78:this.$ = 'sshkey'
break;
case 79:this.$ = 'eid'
break;
case 80:this.$ = 'emd5'
break;
case 81:this.$ = 'emv'
break;
case 82:this.$ = 'efn'
break;
case 83:this.$ = 'ect'
break;
case 84:this.$ = 'hmd5'
break;
case 85:this.$ = 'hkey'
break;
case 86:this.$ = 'hpath'
break;
case 87:this.$ = 'hval'
break;
case 88:this.$ = 'hsver'
break;
case 89:this.$ = 'hdver'
break;
case 90:this.$ = 'ircnck'
break;
case 91:this.$ = 'ircch'
break;
case 92:this.$ = 'ro'
break;
case 93:this.$ = 'smbdm'
break;
case 94:this.$ = 'smbfn'
break;
case 95:this.$ = 'smbho'
break;
case 96:this.$ = 'smbos'
break;
case 97:this.$ = 'smbsh'
break;
case 98:this.$ = 'smbuser'
break;
case 99:this.$ = 'socksuser'
break;
case 100:this.$ = 'smbver'
break;
case 101:this.$ = 'gdnsip'
break;
case 102:this.$ = 'g2'
break;
case 103:this.$ = 'geip'
break;
case 104:this.$ = 'gsocksip'
break;
case 105:this.$ = 'g1'
break;
case 106:this.$ = 'gxff'
break;
case 107:this.$ = 'rirdnsip'
break;
case 108:this.$ = 'rir2'
break;
case 109:this.$ = 'rireip'
break;
case 110:this.$ = 'rirsocksip'
break;
case 111:this.$ = 'rir1'
break;
case 112:this.$ = 'rirxff'
break;
case 113:this.$ = 'as1'
break;
case 114:this.$ = 'as2'
break;
case 115:this.$ = 'asdnsip'
break;
case 116:this.$ = 'aseip'
break;
case 117:this.$ = 'assocksip'
break;
case 118:this.$ = 'asxff'
break;
case 119:this.$ = 'esub'
break;
case 120:this.$ = 'eua'
break;
case 121:this.$ = 'tls.sOn'
break;
case 122:this.$ = 'tls.iOn'
break;
case 123:this.$ = 'us'
break;
case 124:this.$ = 'ua'
break;
case 125:this.$ = 0
break;
case 126:this.$ = 1
break;
case 127:this.$ = 2
break;
case 128:this.$ = 3
break;
case 129:this.$ = 4
break;
case 130:this.$ = 5
break;
case 131:this.$ = 6
break;
case 226:this.$ = {bool: {must: [$$[$0-2], $$[$0]]}};
break;
case 227:this.$ = {bool: {should: [$$[$0-2], $$[$0]]}};
break;
case 228:this.$ = {not: $$[$0]};
break;
case 229:this.$ = -$$[$0];
break;
case 230:this.$ = $$[$0-1];
break;
case 231:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 232:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 233:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 234:this.$ = {terms: {}};
         this.$.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 235:this.$ = {not: {terms: {}}};
         this.$.not.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 236:this.$ = {term: {pr: protocolLookup($$[$0])}};
break;
case 237:this.$ = {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}};
break;
case 238:this.$ = {not: {term: {pr: protocolLookup($$[$0])}}};
break;
case 239:this.$ = {not: {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}}};
break;
case 240:this.$ = {bool: {should: [{range: {p1: {}}}, {range: {p2: {}}}]}};
         this.$.bool.should[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.bool.should[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 241:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toLowerCase())};
break;
case 242:this.$ = str2Query($$[$0-2], "term", $$[$0].toLowerCase());
break;
case 243:this.$ = {not: str2Query($$[$0-2], "term", $$[$0])};
break;
case 244:this.$ = str2Query($$[$0-2], "term", $$[$0]);
break;
case 245:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toUpperCase())};
break;
case 246:this.$ = str2Query($$[$0-2], "term", $$[$0].toUpperCase());
break;
case 247:this.$ = {not: str2Query($$[$0-2], "text", $$[$0].toLowerCase())};
break;
case 248:this.$ = str2Query($$[$0-2], "text", $$[$0].toLowerCase());
break;
case 249:this.$ = {not: str2Query($$[$0-2], "text", $$[$0])};
break;
case 250:this.$ = str2Query($$[$0-2], "text", $$[$0]);
break;
case 251:this.$ = str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0]);
break;
case 252:this.$ = {not: str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0])};
break;
case 253:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 254:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 255: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 256:
        this.$ = {terms: {}};
        this.$.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 257: this.$ = {not: {terms: {}}};
          this.$.not.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 258:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 259:this.$ = {bool: {should: [
                                {term: {p1: $$[$0]}},
                                {term: {p2: $$[$0]}},
                                {term: {sockspo: $$[$0]}}
                              ]}};
break;
case 260:this.$ = {bool: {should: [
                                {terms: {p1: CSVtoArray($$[$0])}},
                                {terms: {p2: CSVtoArray($$[$0])}},
                                {terms: {sockspo: CSVtoArray($$[$0])}}
                              ]}};
break;
case 261:this.$ = {bool: {must_not: [
                                  {term: {p1: $$[$0]}}, 
                                  {term: {p2: $$[$0]}},
                                  {term: {sockspo: $$[$0]}}
                                ]}};
break;
case 262:this.$ = {bool: {must_not: [
                                  {terms: {p1: CSVtoArray($$[$0])}}, 
                                  {terms: {p2: CSVtoArray($$[$0])}},
                                  {terms: {sockspo: CSVtoArray($$[$0])}}
                                ]}};
break;
case 263:this.$ = parseIpPort(yy, $$[$0],$$[$0-2]);
break;
case 264:this.$ = {not: parseIpPort(yy, $$[$0],$$[$0-2])};
break;
case 265: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("ta", tag);
        
break;
case 266: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("ta", tag)};
        
break;
case 267: var file = stripQuotes($$[$0]);
          this.$ = {fileand: file};
        
break;
case 268: var file = stripQuotes($$[$0]);
          this.$ = {not: {fileand: file}};
        
break;
case 269: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {should: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 270: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh1", tag);
        
break;
case 271: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh2", tag);
        
break;
case 272: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {must_not: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 273: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh1", tag)};
        
break;
case 274: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh2", tag)};
        
break;
case 275:
          this.$ = [str2Query("hsver", "term", $$[$0]),
                str2Query("hdver", "term", $$[$0])
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 276:
          this.$ = [str2Query("hsver", "term", $$[$0]),
                str2Query("hdver", "term", $$[$0])
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 277: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("fb1", "term", str),
                str2Query("fb2", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 278: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("fb1", "term", str),
                str2Query("fb2", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 279: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("g1", "term", str),
                str2Query("g2", "term", str),
                str2Query("gdnsip", "term", str),
                str2Query("geip", "term", str),
                str2Query("gsocksip", "term", str),
                str2Query("gxff", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 280: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("g1", "term", str),
                str2Query("g2", "term", str),
                str2Query("gdnsip", "term", str),
                str2Query("geip", "term", str),
                str2Query("gsocksip", "term", str),
                str2Query("gxff", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 281: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("rir1", "term", str),
                str2Query("rir2", "term", str),
                str2Query("rirxff", "term", str),
                str2Query("rirdnsip", "term", str),
                str2Query("rirsocksip", "term", str),
                str2Query("rireip", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 282: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("rir1", "term", str),
                str2Query("rir2", "term", str),
                str2Query("rirxff", "term", str),
                str2Query("rirdnsip", "term", str),
                str2Query("rirsocksip", "term", str),
                str2Query("rireip", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 283: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("as1", "text", str),
                str2Query("as2", "text", str),
                str2Query("aseip", "text", str),
                str2Query("asdnsip", "text", str),
                str2Query("assocksip", "text", str),
                str2Query("asxff", "text", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 284: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("as1", "text", str),
                str2Query("as2", "text", str),
                str2Query("asdnsip", "text", str),
                str2Query("aseip", "text", str),
                str2Query("assocksip", "text", str),
                str2Query("asxff", "text", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 285: var str = $$[$0].toLowerCase();

          this.$ = [str2Query("ho", "term", str),
                str2Query("dnsho", "term", str),
                str2Query("eho", "term", str),
                str2Query("socksho", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 286: var str = $$[$0].toLowerCase();

          this.$ = [str2Query("ho", "term", str),
                str2Query("dnsho", "term", str),
                str2Query("eho", "term", str),
                str2Query("socksho", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
}
},
table: [{3:1,4:2,18:14,19:[1,137],20:[1,138],21:15,22:[1,139],23:[1,140],24:6,25:[1,28],26:[1,29],27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:9,72:[1,74],73:[1,75],74:[1,76],75:[1,77],76:[1,78],77:[1,79],78:[1,80],79:[1,81],80:[1,82],81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:10,88:[1,89],89:[1,90],90:[1,91],91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],97:[1,98],98:[1,99],99:[1,100],100:[1,101],101:[1,102],102:[1,103],103:[1,104],104:[1,105],105:[1,106],106:[1,107],107:[1,108],108:[1,109],109:[1,110],110:[1,111],111:[1,112],112:11,113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:[1,124],125:12,126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:13,137:[1,135],138:[1,136],139:16,140:[1,141],141:[1,142],142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],149:[1,26],163:[1,24],166:[1,27],172:[1,8],173:[1,7],174:[1,25],178:[1,17],189:[1,3],190:[1,4],191:[1,5],195:[1,18],196:[1,19],197:[1,20],198:[1,21],199:[1,22],200:[1,23]},{1:[3]},{5:[1,148],187:[1,149],188:[1,150]},{4:151,18:14,19:[1,137],20:[1,138],21:15,22:[1,139],23:[1,140],24:6,25:[1,28],26:[1,29],27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:9,72:[1,74],73:[1,75],74:[1,76],75:[1,77],76:[1,78],77:[1,79],78:[1,80],79:[1,81],80:[1,82],81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:10,88:[1,89],89:[1,90],90:[1,91],91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],97:[1,98],98:[1,99],99:[1,100],100:[1,101],101:[1,102],102:[1,103],103:[1,104],104:[1,105],105:[1,106],106:[1,107],107:[1,108],108:[1,109],109:[1,110],110:[1,111],111:[1,112],112:11,113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:[1,124],125:12,126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:13,137:[1,135],138:[1,136],139:16,140:[1,141],141:[1,142],142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],149:[1,26],163:[1,24],166:[1,27],172:[1,8],173:[1,7],174:[1,25],178:[1,17],189:[1,3],190:[1,4],191:[1,5],195:[1,18],196:[1,19],197:[1,20],198:[1,21],199:[1,22],200:[1,23]},{4:152,18:14,19:[1,137],20:[1,138],21:15,22:[1,139],23:[1,140],24:6,25:[1,28],26:[1,29],27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:9,72:[1,74],73:[1,75],74:[1,76],75:[1,77],76:[1,78],77:[1,79],78:[1,80],79:[1,81],80:[1,82],81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:10,88:[1,89],89:[1,90],90:[1,91],91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],97:[1,98],98:[1,99],99:[1,100],100:[1,101],101:[1,102],102:[1,103],103:[1,104],104:[1,105],105:[1,106],106:[1,107],107:[1,108],108:[1,109],109:[1,110],110:[1,111],111:[1,112],112:11,113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:[1,124],125:12,126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:13,137:[1,135],138:[1,136],139:16,140:[1,141],141:[1,142],142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],149:[1,26],163:[1,24],166:[1,27],172:[1,8],173:[1,7],174:[1,25],178:[1,17],189:[1,3],190:[1,4],191:[1,5],195:[1,18],196:[1,19],197:[1,20],198:[1,21],199:[1,22],200:[1,23]},{4:153,18:14,19:[1,137],20:[1,138],21:15,22:[1,139],23:[1,140],24:6,25:[1,28],26:[1,29],27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:9,72:[1,74],73:[1,75],74:[1,76],75:[1,77],76:[1,78],77:[1,79],78:[1,80],79:[1,81],80:[1,82],81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:10,88:[1,89],89:[1,90],90:[1,91],91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],97:[1,98],98:[1,99],99:[1,100],100:[1,101],101:[1,102],102:[1,103],103:[1,104],104:[1,105],105:[1,106],106:[1,107],107:[1,108],108:[1,109],109:[1,110],110:[1,111],111:[1,112],112:11,113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:[1,124],125:12,126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:13,137:[1,135],138:[1,136],139:16,140:[1,141],141:[1,142],142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],149:[1,26],163:[1,24],166:[1,27],172:[1,8],173:[1,7],174:[1,25],178:[1,17],189:[1,3],190:[1,4],191:[1,5],195:[1,18],196:[1,19],197:[1,20],198:[1,21],199:[1,22],200:[1,23]},{6:157,7:[1,159],8:[1,160],9:158,10:[1,161],11:[1,162],12:154,193:[1,155],194:[1,156]},{193:[1,163],194:[1,164]},{6:157,7:[1,159],8:[1,160],9:158,10:[1,161],11:[1,162],12:165,193:[1,166],194:[1,167]},{193:[1,169],194:[1,168]},{193:[1,171],194:[1,170]},{193:[1,173],194:[1,172]},{193:[1,175],194:[1,174]},{193:[1,177],194:[1,176]},{6:157,7:[1,159],8:[1,160],9:158,10:[1,161],11:[1,162],12:180,193:[1,178],194:[1,179]},{6:157,7:[1,159],8:[1,160],9:158,10:[1,161],11:[1,162],12:183,193:[1,181],194:[1,182]},{193:[1,184],194:[1,185]},{193:[1,186],194:[1,187]},{193:[1,188],194:[1,189]},{193:[1,190],194:[1,191]},{193:[1,192],194:[1,193]},{193:[1,194],194:[1,195]},{193:[1,196],194:[1,197]},{193:[1,198],194:[1,199]},{193:[1,200],194:[1,201]},{193:[1,202],194:[1,203]},{193:[1,204],194:[1,205]},{193:[1,207],194:[1,206]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],193:[2,16],194:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],193:[2,17],194:[2,17]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],193:[2,18],194:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],193:[2,19],194:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],193:[2,20],194:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],193:[2,21],194:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],193:[2,22],194:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],193:[2,23],194:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],193:[2,24],194:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],193:[2,25],194:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],193:[2,26],194:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],193:[2,27],194:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],193:[2,28],194:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],193:[2,29],194:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],193:[2,30],194:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],193:[2,31],194:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],193:[2,32],194:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],193:[2,33],194:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],193:[2,34],194:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],193:[2,35],194:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],193:[2,36],194:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],193:[2,37],194:[2,37]},{7:[2,38],8:[2,38],10:[2,38],11:[2,38],193:[2,38],194:[2,38]},{7:[2,39],8:[2,39],10:[2,39],11:[2,39],193:[2,39],194:[2,39]},{7:[2,40],8:[2,40],10:[2,40],11:[2,40],193:[2,40],194:[2,40]},{7:[2,41],8:[2,41],10:[2,41],11:[2,41],193:[2,41],194:[2,41]},{7:[2,42],8:[2,42],10:[2,42],11:[2,42],193:[2,42],194:[2,42]},{7:[2,43],8:[2,43],10:[2,43],11:[2,43],193:[2,43],194:[2,43]},{7:[2,44],8:[2,44],10:[2,44],11:[2,44],193:[2,44],194:[2,44]},{7:[2,45],8:[2,45],10:[2,45],11:[2,45],193:[2,45],194:[2,45]},{7:[2,46],8:[2,46],10:[2,46],11:[2,46],193:[2,46],194:[2,46]},{7:[2,47],8:[2,47],10:[2,47],11:[2,47],193:[2,47],194:[2,47]},{7:[2,48],8:[2,48],10:[2,48],11:[2,48],193:[2,48],194:[2,48]},{7:[2,49],8:[2,49],10:[2,49],11:[2,49],193:[2,49],194:[2,49]},{7:[2,50],8:[2,50],10:[2,50],11:[2,50],193:[2,50],194:[2,50]},{7:[2,51],8:[2,51],10:[2,51],11:[2,51],193:[2,51],194:[2,51]},{7:[2,52],8:[2,52],10:[2,52],11:[2,52],193:[2,52],194:[2,52]},{7:[2,53],8:[2,53],10:[2,53],11:[2,53],193:[2,53],194:[2,53]},{7:[2,54],8:[2,54],10:[2,54],11:[2,54],193:[2,54],194:[2,54]},{7:[2,55],8:[2,55],10:[2,55],11:[2,55],193:[2,55],194:[2,55]},{7:[2,56],8:[2,56],10:[2,56],11:[2,56],193:[2,56],194:[2,56]},{7:[2,57],8:[2,57],10:[2,57],11:[2,57],193:[2,57],194:[2,57]},{7:[2,58],8:[2,58],10:[2,58],11:[2,58],193:[2,58],194:[2,58]},{7:[2,59],8:[2,59],10:[2,59],11:[2,59],193:[2,59],194:[2,59]},{7:[2,60],8:[2,60],10:[2,60],11:[2,60],193:[2,60],194:[2,60]},{7:[2,61],8:[2,61],10:[2,61],11:[2,61],193:[2,61],194:[2,61]},{193:[2,62],194:[2,62]},{193:[2,63],194:[2,63]},{193:[2,64],194:[2,64]},{193:[2,65],194:[2,65]},{193:[2,66],194:[2,66]},{193:[2,67],194:[2,67]},{193:[2,68],194:[2,68]},{193:[2,69],194:[2,69]},{193:[2,70],194:[2,70]},{193:[2,71],194:[2,71]},{193:[2,72],194:[2,72]},{193:[2,73],194:[2,73]},{193:[2,74],194:[2,74]},{193:[2,75],194:[2,75]},{193:[2,76],194:[2,76]},{193:[2,77],194:[2,77]},{193:[2,78],194:[2,78]},{193:[2,79],194:[2,79]},{193:[2,80],194:[2,80]},{193:[2,81],194:[2,81]},{193:[2,82],194:[2,82]},{193:[2,83],194:[2,83]},{193:[2,84],194:[2,84]},{193:[2,85],194:[2,85]},{193:[2,86],194:[2,86]},{193:[2,87],194:[2,87]},{193:[2,88],194:[2,88]},{193:[2,89],194:[2,89]},{193:[2,90],194:[2,90]},{193:[2,91],194:[2,91]},{193:[2,92],194:[2,92]},{193:[2,93],194:[2,93]},{193:[2,94],194:[2,94]},{193:[2,95],194:[2,95]},{193:[2,96],194:[2,96]},{193:[2,97],194:[2,97]},{193:[2,98],194:[2,98]},{193:[2,99],194:[2,99]},{193:[2,100],194:[2,100]},{193:[2,101],194:[2,101]},{193:[2,102],194:[2,102]},{193:[2,103],194:[2,103]},{193:[2,104],194:[2,104]},{193:[2,105],194:[2,105]},{193:[2,106],194:[2,106]},{193:[2,107],194:[2,107]},{193:[2,108],194:[2,108]},{193:[2,109],194:[2,109]},{193:[2,110],194:[2,110]},{193:[2,111],194:[2,111]},{193:[2,112],194:[2,112]},{193:[2,113],194:[2,113]},{193:[2,114],194:[2,114]},{193:[2,115],194:[2,115]},{193:[2,116],194:[2,116]},{193:[2,117],194:[2,117]},{193:[2,118],194:[2,118]},{193:[2,119],194:[2,119]},{193:[2,120],194:[2,120]},{193:[2,121],194:[2,121]},{193:[2,122],194:[2,122]},{193:[2,123],194:[2,123]},{193:[2,124],194:[2,124]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],193:[2,12],194:[2,12]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],193:[2,13],194:[2,13]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],193:[2,14],194:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],193:[2,15],194:[2,15]},{193:[2,125],194:[2,125]},{193:[2,126],194:[2,126]},{193:[2,127],194:[2,127]},{193:[2,128],194:[2,128]},{193:[2,129],194:[2,129]},{193:[2,130],194:[2,130]},{193:[2,131],194:[2,131]},{1:[2,1]},{4:208,18:14,19:[1,137],20:[1,138],21:15,22:[1,139],23:[1,140],24:6,25:[1,28],26:[1,29],27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:9,72:[1,74],73:[1,75],74:[1,76],75:[1,77],76:[1,78],77:[1,79],78:[1,80],79:[1,81],80:[1,82],81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:10,88:[1,89],89:[1,90],90:[1,91],91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],97:[1,98],98:[1,99],99:[1,100],100:[1,101],101:[1,102],102:[1,103],103:[1,104],104:[1,105],105:[1,106],106:[1,107],107:[1,108],108:[1,109],109:[1,110],110:[1,111],111:[1,112],112:11,113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:[1,124],125:12,126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:13,137:[1,135],138:[1,136],139:16,140:[1,141],141:[1,142],142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],149:[1,26],163:[1,24],166:[1,27],172:[1,8],173:[1,7],174:[1,25],178:[1,17],189:[1,3],190:[1,4],191:[1,5],195:[1,18],196:[1,19],197:[1,20],198:[1,21],199:[1,22],200:[1,23]},{4:209,18:14,19:[1,137],20:[1,138],21:15,22:[1,139],23:[1,140],24:6,25:[1,28],26:[1,29],27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:9,72:[1,74],73:[1,75],74:[1,76],75:[1,77],76:[1,78],77:[1,79],78:[1,80],79:[1,81],80:[1,82],81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:10,88:[1,89],89:[1,90],90:[1,91],91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],97:[1,98],98:[1,99],99:[1,100],100:[1,101],101:[1,102],102:[1,103],103:[1,104],104:[1,105],105:[1,106],106:[1,107],107:[1,108],108:[1,109],109:[1,110],110:[1,111],111:[1,112],112:11,113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:[1,124],125:12,126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:13,137:[1,135],138:[1,136],139:16,140:[1,141],141:[1,142],142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],149:[1,26],163:[1,24],166:[1,27],172:[1,8],173:[1,7],174:[1,25],178:[1,17],189:[1,3],190:[1,4],191:[1,5],195:[1,18],196:[1,19],197:[1,20],198:[1,21],199:[1,22],200:[1,23]},{5:[2,228],187:[2,228],188:[2,228],192:[2,228]},{5:[2,229],187:[2,229],188:[2,229],192:[2,229]},{187:[1,149],188:[1,150],192:[1,210]},{16:[1,211]},{16:[1,212],17:[1,213]},{16:[1,214],17:[1,215]},{16:[2,6]},{16:[2,7]},{16:[2,2]},{16:[2,3]},{16:[2,4]},{16:[2,5]},{16:[1,218],17:[1,222],170:[1,219],179:[1,220],180:[1,221],183:[1,223],185:216,186:217},{16:[1,218],17:[1,222],170:[1,219],179:[1,220],180:[1,221],183:[1,223],185:224,186:225},{16:[1,226]},{16:[1,227],17:[1,228]},{16:[1,229],17:[1,230]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:231,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:262,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:263,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:264,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:265,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:266,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:267,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:268,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:269,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:270,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:271,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:272,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{16:[1,273]},{16:[1,274],17:[1,275]},{16:[1,276],17:[1,277]},{16:[1,278]},{13:279,14:[1,280],15:[1,281],16:[1,282],17:[1,283]},{13:284,14:[1,280],15:[1,281],16:[1,282],17:[1,283]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:285,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:286,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:287,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:288,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:289,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:290,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:291,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:292,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:293,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:294,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:295,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:296,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:297,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:298,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:299,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:300,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:301,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:302,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:303,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:304,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:305,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{14:[1,260],15:[1,261],16:[1,254],17:[1,259],26:[1,234],27:[1,244],72:[1,243],140:[1,242],147:306,148:[1,232],149:[1,233],152:[1,237],155:[1,235],163:[1,236],164:[1,251],165:[1,238],166:[1,239],167:[1,240],169:[1,253],170:[1,241],172:[1,245],173:[1,246],174:[1,247],175:[1,248],178:[1,249],179:[1,250],180:[1,252],181:[1,255],182:[1,256],183:[1,257],184:[1,258]},{5:[2,226],187:[2,226],188:[2,226],192:[2,226]},{5:[2,227],187:[1,149],188:[2,227],192:[2,227]},{5:[2,230],187:[2,230],188:[2,230],192:[2,230]},{5:[2,231],187:[2,231],188:[2,231],192:[2,231]},{5:[2,232],187:[2,232],188:[2,232],192:[2,232]},{5:[2,234],187:[2,234],188:[2,234],192:[2,234]},{5:[2,233],187:[2,233],188:[2,233],192:[2,233]},{5:[2,235],187:[2,235],188:[2,235],192:[2,235]},{5:[2,236],187:[2,236],188:[2,236],192:[2,236]},{5:[2,237],187:[2,237],188:[2,237],192:[2,237]},{5:[2,220],187:[2,220],188:[2,220],192:[2,220]},{5:[2,221],187:[2,221],188:[2,221],192:[2,221]},{5:[2,222],187:[2,222],188:[2,222],192:[2,222]},{5:[2,223],187:[2,223],188:[2,223],192:[2,223]},{5:[2,224],187:[2,224],188:[2,224],192:[2,224]},{5:[2,225],187:[2,225],188:[2,225],192:[2,225]},{5:[2,238],187:[2,238],188:[2,238],192:[2,238]},{5:[2,239],187:[2,239],188:[2,239],192:[2,239]},{5:[2,240],187:[2,240],188:[2,240],192:[2,240]},{5:[2,259],187:[2,259],188:[2,259],192:[2,259]},{5:[2,260],187:[2,260],188:[2,260],192:[2,260]},{5:[2,261],187:[2,261],188:[2,261],192:[2,261]},{5:[2,262],187:[2,262],188:[2,262],192:[2,262]},{5:[2,241],187:[2,241],188:[2,241],192:[2,241]},{5:[2,132],187:[2,132],188:[2,132],192:[2,132]},{5:[2,133],150:[1,307],151:[1,308],152:[1,309],153:[1,310],154:[1,311],187:[2,133],188:[2,133],192:[2,133]},{5:[2,139],187:[2,139],188:[2,139],192:[2,139]},{156:[1,312],157:[1,313],158:[1,314],161:[1,315],162:[1,316]},{5:[2,148],150:[1,317],151:[1,318],152:[1,319],153:[1,320],154:[1,321],187:[2,148],188:[2,148],192:[2,148]},{151:[1,322],153:[1,323],162:[1,324],164:[1,325]},{5:[2,162],151:[1,326],153:[1,327],187:[2,162],188:[2,162],192:[2,162]},{5:[2,167],157:[1,328],187:[2,167],188:[2,167],192:[2,167]},{164:[1,330],168:[1,329],169:[1,331]},{5:[2,175],187:[2,175],188:[2,175],192:[2,175]},{5:[2,176],150:[1,332],151:[1,333],152:[1,334],153:[1,336],154:[1,337],171:[1,335],187:[2,176],188:[2,176],192:[2,176]},{5:[2,186],187:[2,186],188:[2,186],192:[2,186]},{5:[2,187],187:[2,187],188:[2,187],192:[2,187]},{5:[2,188],151:[1,338],153:[1,340],171:[1,339],187:[2,188],188:[2,188],192:[2,188]},{5:[2,192],187:[2,192],188:[2,192],192:[2,192]},{5:[2,193],150:[1,341],151:[1,342],152:[1,343],153:[1,345],154:[1,346],171:[1,344],187:[2,193],188:[2,193],192:[2,193]},{176:[1,347],177:[1,348]},{5:[2,204],157:[1,349],187:[2,204],188:[2,204],192:[2,204]},{5:[2,206],187:[2,206],188:[2,206],192:[2,206]},{5:[2,207],157:[1,350],187:[2,207],188:[2,207],192:[2,207]},{5:[2,209],187:[2,209],188:[2,209],192:[2,209]},{5:[2,210],157:[1,351],187:[2,210],188:[2,210],192:[2,210]},{5:[2,212],187:[2,212],188:[2,212],192:[2,212]},{5:[2,213],187:[2,213],188:[2,213],192:[2,213]},{5:[2,214],187:[2,214],188:[2,214],192:[2,214]},{5:[2,215],187:[2,215],188:[2,215],192:[2,215]},{5:[2,216],187:[2,216],188:[2,216],192:[2,216]},{5:[2,217],187:[2,217],188:[2,217],192:[2,217]},{5:[2,218],187:[2,218],188:[2,218],192:[2,218]},{5:[2,219],187:[2,219],188:[2,219],192:[2,219]},{5:[2,242],187:[2,242],188:[2,242],192:[2,242]},{5:[2,243],187:[2,243],188:[2,243],192:[2,243]},{5:[2,244],187:[2,244],188:[2,244],192:[2,244]},{5:[2,245],187:[2,245],188:[2,245],192:[2,245]},{5:[2,246],187:[2,246],188:[2,246],192:[2,246]},{5:[2,247],187:[2,247],188:[2,247],192:[2,247]},{5:[2,248],187:[2,248],188:[2,248],192:[2,248]},{5:[2,249],187:[2,249],188:[2,249],192:[2,249]},{5:[2,250],187:[2,250],188:[2,250],192:[2,250]},{5:[2,251],187:[2,251],188:[2,251],192:[2,251]},{5:[2,252],187:[2,252],188:[2,252],192:[2,252]},{5:[2,253],187:[2,253],188:[2,253],192:[2,253]},{5:[2,254],187:[2,254],188:[2,254],192:[2,254]},{5:[2,256],187:[2,256],188:[2,256],192:[2,256]},{5:[2,255],187:[2,255],188:[2,255],192:[2,255]},{5:[2,257],187:[2,257],188:[2,257],192:[2,257]},{5:[2,258],187:[2,258],188:[2,258],192:[2,258]},{5:[2,263],187:[2,263],188:[2,263],192:[2,263]},{5:[2,8],187:[2,8],188:[2,8],192:[2,8]},{5:[2,9],187:[2,9],188:[2,9],192:[2,9]},{5:[2,10],187:[2,10],188:[2,10],192:[2,10]},{5:[2,11],187:[2,11],188:[2,11],192:[2,11]},{5:[2,264],187:[2,264],188:[2,264],192:[2,264]},{5:[2,265],187:[2,265],188:[2,265],192:[2,265]},{5:[2,266],187:[2,266],188:[2,266],192:[2,266]},{5:[2,267],187:[2,267],188:[2,267],192:[2,267]},{5:[2,268],187:[2,268],188:[2,268],192:[2,268]},{5:[2,269],187:[2,269],188:[2,269],192:[2,269]},{5:[2,272],187:[2,272],188:[2,272],192:[2,272]},{5:[2,270],187:[2,270],188:[2,270],192:[2,270]},{5:[2,273],187:[2,273],188:[2,273],192:[2,273]},{5:[2,271],187:[2,271],188:[2,271],192:[2,271]},{5:[2,274],187:[2,274],188:[2,274],192:[2,274]},{5:[2,275],187:[2,275],188:[2,275],192:[2,275]},{5:[2,276],187:[2,276],188:[2,276],192:[2,276]},{5:[2,277],187:[2,277],188:[2,277],192:[2,277]},{5:[2,278],187:[2,278],188:[2,278],192:[2,278]},{5:[2,279],187:[2,279],188:[2,279],192:[2,279]},{5:[2,280],187:[2,280],188:[2,280],192:[2,280]},{5:[2,281],187:[2,281],188:[2,281],192:[2,281]},{5:[2,282],187:[2,282],188:[2,282],192:[2,282]},{5:[2,283],187:[2,283],188:[2,283],192:[2,283]},{5:[2,284],187:[2,284],188:[2,284],192:[2,284]},{5:[2,285],187:[2,285],188:[2,285],192:[2,285]},{5:[2,286],187:[2,286],188:[2,286],192:[2,286]},{5:[2,134],187:[2,134],188:[2,134],192:[2,134]},{5:[2,135],187:[2,135],188:[2,135],192:[2,135]},{5:[2,136],187:[2,136],188:[2,136],192:[2,136]},{5:[2,137],187:[2,137],188:[2,137],192:[2,137]},{5:[2,138],187:[2,138],188:[2,138],192:[2,138]},{5:[2,140],157:[1,352],187:[2,140],188:[2,140],192:[2,140]},{5:[2,142],187:[2,142],188:[2,142],192:[2,142]},{159:[1,353],160:[1,354]},{5:[2,145],187:[2,145],188:[2,145],192:[2,145]},{159:[1,355],160:[1,356]},{5:[2,149],187:[2,149],188:[2,149],192:[2,149]},{5:[2,150],187:[2,150],188:[2,150],192:[2,150]},{5:[2,151],187:[2,151],188:[2,151],192:[2,151]},{5:[2,152],187:[2,152],188:[2,152],192:[2,152]},{5:[2,153],187:[2,153],188:[2,153],192:[2,153]},{5:[2,154],157:[1,357],187:[2,154],188:[2,154],192:[2,154]},{5:[2,156],157:[1,358],187:[2,156],188:[2,156],192:[2,156]},{5:[2,158],157:[1,359],187:[2,158],188:[2,158],192:[2,158]},{5:[2,160],157:[1,360],187:[2,160],188:[2,160],192:[2,160]},{5:[2,163],157:[1,361],187:[2,163],188:[2,163],192:[2,163]},{5:[2,165],157:[1,362],187:[2,165],188:[2,165],192:[2,165]},{5:[2,168],187:[2,168],188:[2,168],192:[2,168]},{5:[2,169],157:[1,363],187:[2,169],188:[2,169],192:[2,169]},{5:[2,171],157:[1,364],187:[2,171],188:[2,171],192:[2,171]},{5:[2,173],157:[1,365],187:[2,173],188:[2,173],192:[2,173]},{5:[2,177],157:[1,366],187:[2,177],188:[2,177],192:[2,177]},{5:[2,179],187:[2,179],188:[2,179],192:[2,179]},{5:[2,180],157:[1,367],187:[2,180],188:[2,180],192:[2,180]},{5:[2,182],187:[2,182],188:[2,182],192:[2,182]},{5:[2,183],187:[2,183],188:[2,183],192:[2,183]},{5:[2,184],157:[1,368],187:[2,184],188:[2,184],192:[2,184]},{5:[2,189],187:[2,189],188:[2,189],192:[2,189]},{5:[2,190],187:[2,190],188:[2,190],192:[2,190]},{5:[2,191],187:[2,191],188:[2,191],192:[2,191]},{5:[2,194],187:[2,194],188:[2,194],192:[2,194]},{5:[2,195],187:[2,195],188:[2,195],192:[2,195]},{5:[2,196],187:[2,196],188:[2,196],192:[2,196]},{5:[2,197],187:[2,197],188:[2,197],192:[2,197]},{5:[2,198],187:[2,198],188:[2,198],192:[2,198]},{5:[2,199],187:[2,199],188:[2,199],192:[2,199]},{5:[2,200],157:[1,369],187:[2,200],188:[2,200],192:[2,200]},{5:[2,202],157:[1,370],187:[2,202],188:[2,202],192:[2,202]},{5:[2,205],187:[2,205],188:[2,205],192:[2,205]},{5:[2,208],187:[2,208],188:[2,208],192:[2,208]},{5:[2,211],187:[2,211],188:[2,211],192:[2,211]},{5:[2,141],187:[2,141],188:[2,141],192:[2,141]},{5:[2,143],187:[2,143],188:[2,143],192:[2,143]},{5:[2,144],187:[2,144],188:[2,144],192:[2,144]},{5:[2,146],187:[2,146],188:[2,146],192:[2,146]},{5:[2,147],187:[2,147],188:[2,147],192:[2,147]},{5:[2,155],187:[2,155],188:[2,155],192:[2,155]},{5:[2,157],187:[2,157],188:[2,157],192:[2,157]},{5:[2,159],187:[2,159],188:[2,159],192:[2,159]},{5:[2,161],187:[2,161],188:[2,161],192:[2,161]},{5:[2,164],187:[2,164],188:[2,164],192:[2,164]},{5:[2,166],187:[2,166],188:[2,166],192:[2,166]},{5:[2,170],187:[2,170],188:[2,170],192:[2,170]},{5:[2,172],187:[2,172],188:[2,172],192:[2,172]},{5:[2,174],187:[2,174],188:[2,174],192:[2,174]},{5:[2,178],187:[2,178],188:[2,178],192:[2,178]},{5:[2,181],187:[2,181],188:[2,181],192:[2,181]},{5:[2,185],187:[2,185],188:[2,185],192:[2,185]},{5:[2,201],187:[2,201],188:[2,201],192:[2,201]},{5:[2,203],187:[2,203],188:[2,203],192:[2,203]}],
defaultActions: {148:[2,1],157:[2,6],158:[2,7],159:[2,2],160:[2,3],161:[2,4],162:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


var    util           = require('util');

function parseIpPort(yy, ipPortStr, which) {
  ipPortStr = ipPortStr.trim();

// We really have a list of them
  if (ipPortStr[0] === "[" && ipPortStr[ipPortStr.length -1] === "]") {
      var obj =  {bool: {should: []}};
      CSVtoArray(ipPortStr).forEach(function(str) {
          obj.bool.should.push(parseIpPort(yy, str, which));
      });
      return obj;
  }

  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }

  var t1;
  var t2;
  var xff;
  var dns;
  var email;
  var socks;

  if (ip1 !== -1) {
    if (ip1 === ip2) {
        t1    = {term: {a1: ip1>>>0}};
        t2    = {term: {a2: ip1>>>0}};
        socks = {term: {socksip: ip1>>>0}};
        dns   = {term: {dnsip: ip1>>>0}};
        email = {term: {eip: ip1>>>0}};
        xff   = {term: {xff: ip1>>>0}};
    } else {
        t1    = {range: {a1: {from: ip1>>>0, to: ip2>>>0}}};
        t2    = {range: {a2: {from: ip1>>>0, to: ip2>>>0}}};
        socks = {range: {socksip: {from: ip1>>>0, to: ip2>>>0}}};
        dns   = {range: {dnsip: {from: ip1>>>0, to: ip2>>>0}}};
        email = {range: {eip: {from: ip1>>>0, to: ip2>>>0}}};
        xff   = {range: {xff: {from: ip1>>>0, to: ip2>>>0}}};
    }
  }

  if (port !== -1) {
    t1    = {bool: {must: [t1, {term: {p1: port}}]}};
    t2    = {bool: {must: [t2, {term: {p2: port}}]}};
    socks = {bool: {must: [socks, {term: {sockspo: port}}]}};
  }

  switch(which) {
  case 0:
    var ors = [t1, t2];

    if (xff)
        ors.push(xff);
    if (dns)
        ors.push(dns);
    if (yy.emailSearch === true && email)
        ors.push(email);
    if (socks)
        ors.push(socks);

    return {bool: {should: ors}};
  case 1:
    return t1;
  case 2:
    return t2;
  case 3:
    if (!xff)
        throw "xff doesn't support port only";
    return xff;
  case 4:
    if (!dns)
        throw "dns doesn't support port only";
    return dns;
  case 5:
    if (!email)
        throw "email doesn't support port only";
    return email;
  case 6:
    return socks;
  }
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}

var field2RawField = {
    us: "rawus",
    ua: "rawua",
    as1: "rawas1",
    as2: "rawas2",
    asxff: "rawasff",
    asdnsip: "rawasdnsip",
    iOn: "rawiOn",
    eua: "raweua",
    esub: "rawesub",
    aseip: "rawaseip"
}

function str2Query(field, kind, str)
{
    var obj;

    if (field2RawField[field] === undefined && field.indexOf(".snow", field.length - 5) !== -1) {
        field2RawField[field] = field.substring(0, field.length - 5) + ".raw";
    }

    if (str[0] === "/" && str[str.length -1] === "/") {
        field = field2RawField[field] || field;
        obj = {regexp: {}};
        obj.regexp[field] = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        return obj;
    }

    var strs;
    var quoted = false;
    if (str[0] === "\"" && str[str.length -1] === "\"") {
        str = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        quoted = true;
    } else if (str[0] === "[" && str[str.length -1] === "]") {
        strs = CSVtoArray(str);
        if (kind === "term") {
            obj = {terms: {}};
            obj.terms[field] = strs;
        } else if (kind === "text") {
            var obj =  {query: {bool: {should: []}}};
            strs.forEach(function(str) {
              var should = {text: {}};
              should.text[field] = {query: str, type: "phrase", operator: "and"}
              obj.query.bool.should.push(should);
            });
        }
        return obj;
    }

    if (!isNaN(str) && !quoted) {
        obj = {term: {}};
        obj.term[field] = str;
    } else if (str.indexOf("*") !== -1) {
        field = field2RawField[field] || field;
        obj = {query: {wildcard: {}}};
        obj.query.wildcard[field] = str;
    } else if (kind === "text") {
        obj = {query: {text: {}}};
        obj.query.text[field] = {query: str, type: "phrase", operator: "and"}
    } else if (kind === "term") {
        obj = {term: {}};
        obj.term[field] = str;
    }
    return obj;
}

function str2Header(yy, name) {
    var field = yy.fieldsMap[name];
    if (field === undefined) throw "Unknown field " + name;

    return field.db;
}

// http://stackoverflow.com/a/8497474
// Return array of string values, or NULL if CSV string not well formed.
function CSVtoArray(text) {
    text = text.substring(1, text.length-1);
    var re_valid = /^\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*(?:,\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*)*$/;
    var re_value = /(?!\s*$)\s*(?:'([^'\\]*(?:\\[\S\s][^'\\]*)*)'|"([^"\\]*(?:\\[\S\s][^"\\]*)*)"|([^,'"\s\\]*(?:\s+[^,'"\s\\]+)*))\s*(?:,|$)/g;
    // Return NULL if input string is not well formed CSV string.
    if (!re_valid.test(text)) return null;
    var a = [];                     // Initialize array to receive values.
    text.replace(re_value, // "Walk" the string using replace with callback.
        function(m0, m1, m2, m3) {
            // Remove backslash from \' in single quoted values.
            if      (m1 !== undefined) a.push(m1.replace(/\\'/g, "'"));
            // Remove backslash from \" in double quoted values.
            else if (m2 !== undefined) a.push(m2.replace(/\\"/g, '"'));
            else if (m3 !== undefined) a.push(m3);
            return ''; // Return empty string.
        });
    // Handle special case of empty last value.
    if (/,\s*$/.test(text)) a.push('');
    return a;
};

var protocols = {
    icmp: 1,
    tcp:  6,
    udp:  17
};

function protocolLookup(text) {
    if (typeof text !== "string") {
        for (var i = 0; i < text.length; i++) {
            text[i] = protocols[text[i]] || +text[i];
        }
        return text;
    } else {
        return protocols[text] || +text;
    }
}

function termOrTerms(field, str) {
  var obj = {};
  if (str[0] === "[" && str[str.length -1] === "]") {
    obj = {terms: {}};
    obj.terms[field] = CSVtoArray(str);
  } else {
    obj = {term: {}};
    obj.term[field] = str;
  }
  return obj;
}
/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 16
break;
case 2:return 17
break;
case 3:return 14
break;
case 4:return 15
break;
case 5:if (!yy.emailSearch) throw "email searches disabled for user"; return 50
break;
case 6:if (!yy.emailSearch) throw "email searches disabled for user"; return 94
break;
case 7:if (!yy.emailSearch) throw "email searches disabled for user"; return 55
break;
case 8:if (!yy.emailSearch) throw "email searches disabled for user"; return 92
break;
case 9:if (!yy.emailSearch) throw "email searches disabled for user"; return 53
break;
case 10:if (!yy.emailSearch) throw "email searches disabled for user"; return 90
break;
case 11:if (!yy.emailSearch) throw "email searches disabled for user"; return 58
break;
case 12:if (!yy.emailSearch) throw "email searches disabled for user"; return 133
break;
case 13:return "http.hasheader.dst.cnt"
break;
case 14:return "http.hasheader.dst"
break;
case 15:return "http.hasheader"
break;
case 16:return "http.hasheader.src.cnt"
break;
case 17:return "http.hasheader.src"
break;
case 18:return "http.user-agent.cnt"
break;
case 19:return "http.user-agent"
break;
case 20:return "http.user-agent.cnt"
break;
case 21:return "http.user-agent"
break;
case 22:return "http.uri.cnt"
break;
case 23:return "http.uri"
break;
case 24:return 149
break;
case 25:return 128
break;
case 26:return 127
break;
case 27:return 130
break;
case 28:return 126
break;
case 29:return 131
break;
case 30:if (!yy.emailSearch) throw "email searches disabled for user"; return 129
break;
case 31:return 26
break;
case 32:return "cert.alt.cnt"
break;
case 33:return "cert.alt"
break;
case 34:return "cert.cnt"
break;
case 35:return "cert.issuer.cn"
break;
case 36:return "cert.issuer.on"
break;
case 37:return "cert.serial"
break;
case 38:return "cert.subject.cn"
break;
case 39:return "cert.subject.on"
break;
case 40:return 163
break;
case 41:return 113
break;
case 42:return 114
break;
case 43:return 116
break;
case 44:return 117
break;
case 45:return 118
break;
case 46:if (!yy.emailSearch) throw "email searches disabled for user"; return 115
break;
case 47:return 25
break;
case 48:if (!yy.emailSearch) throw "email searches disabled for user"; return 50
break;
case 49:if (!yy.emailSearch) throw "email searches disabled for user"; return 94
break;
case 50:if (!yy.emailSearch) throw "email searches disabled for user"; return 51
break;
case 51:if (!yy.emailSearch) throw "email searches disabled for user"; return 78
break;
case 52:if (!yy.emailSearch) throw "email searches disabled for user"; return 52
break;
case 53:if (!yy.emailSearch) throw "email searches disabled for user"; return 93
break;
case 54:if (!yy.emailSearch) throw "email searches disabled for user"; return 53
break;
case 55:if (!yy.emailSearch) throw "email searches disabled for user"; return 90
break;
case 56:if (!yy.emailSearch) throw "email searches disabled for user"; return 54
break;
case 57:if (!yy.emailSearch) throw "email searches disabled for user"; return 91
break;
case 58:if (!yy.emailSearch) throw "email searches disabled for user"; return 55
break;
case 59:if (!yy.emailSearch) throw "email searches disabled for user"; return 92
break;
case 60:if (!yy.emailSearch) throw "email searches disabled for user"; return 56
break;
case 61:if (!yy.emailSearch) throw "email searches disabled for user"; return 79
break;
case 62:if (!yy.emailSearch) throw "email searches disabled for user"; return 57
break;
case 63:if (!yy.emailSearch) throw "email searches disabled for user"; return 132
break;
case 64:if (!yy.emailSearch) throw "email searches disabled for user"; return 58
break;
case 65:if (!yy.emailSearch) throw "email searches disabled for user"; return 133
break;
case 66:if (!yy.emailSearch) throw "email searches disabled for user"; return 22
break;
case 67:if (!yy.emailSearch) throw "email searches disabled for user"; return 19
break;
case 68:return "file"
break;
case 69:return "http.hasheader.dst.cnt"
break;
case 70:return "http.hasheader.dst"
break;
case 71:return "http.hasheader"
break;
case 72:return "http.hasheader.src.cnt"
break;
case 73:return "http.hasheader.src"
break;
case 74:return "host.dns.cnt"
break;
case 75:return "host.dns"
break;
case 76:return "host.email.cnt"
break;
case 77:return "host.email"
break;
case 78:return "host.http.cnt"
break;
case 79:return "host.http"
break;
case 80:return "host.socks"
break;
case 81:return "host"
break;
case 82:return "http.md5.cnt"
break;
case 83:return "http.md5"
break;
case 84:return "http.uri.cnt"
break;
case 85:return "http.uri"
break;
case 86:return "http.uri.key.cnt"
break;
case 87:return "http.uri.key"
break;
case 88:return "http.uri.path.cnt"
break;
case 89:return "http.uri.path"
break;
case 90:return "http.uri.value.cnt"
break;
case 91:return "http.uri.value"
break;
case 92:return "http.version"
break;
case 93:return "http.version.src"
break;
case 94:return "http.version.src.cnt"
break;
case 95:return "http.version.dst"
break;
case 96:return "http.version.dst.cnt"
break;
case 97:return "http.user-agent.cnt"
break;
case 98:return "http.user-agent"
break;
case 99:return "host.http.cnt"
break;
case 100:return "host.http"
break;
case 101:return "HTTP_HEADER_CNT"
break;
case 102:return "HTTP_HEADER"
break;
case 103:return "icmp"
break;
case 104:return "icmp"
break;
case 105:return "id"
break;
case 106:return "payload8.src"
break;
case 107:return "payload8.dst"
break;
case 108:return "payload8"
break;
case 109:return "ip.dns.cnt"
break;
case 110:return "ip.dns"
break;
case 111:return "ip.dst"
break;
case 112:return "ip"
break;
case 113:return "ip.socks"
break;
case 114:return "ip.src"
break;
case 115:return "ip.xff.cnt"
break;
case 116:return "ip.xff"
break;
case 117:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email.cnt"
break;
case 118:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email"
break;
case 119:return "irc.nick"
break;
case 120:return "irc.nick.cnt"
break;
case 121:return "irc.channel"
break;
case 122:return "irc.channel.cnt"
break;
case 123:return 72
break;
case 124:return 27
break;
case 125:return 28
break;
case 126:return 172
break;
case 127:return 29
break;
case 128:return 30
break;
case 129:return 173
break;
case 130:return 174
break;
case 131:return 119
break;
case 132:return 120
break;
case 133:return 122
break;
case 134:return 123
break;
case 135:return 124
break;
case 136:if (!yy.emailSearch) throw "email searches disabled for user"; return 121
break;
case 137:return "rootId"
break;
case 138:return "host.socks"
break;
case 139:return "ip.socks"
break;
case 140:return "port.socks"
break;
case 141:return "socks.user"
break;
case 142:return "smb.domain.cnt"
break;
case 143:return "smb.domain"
break;
case 144:return "smb.fn.cnt"
break;
case 145:return "smb.fn"
break;
case 146:return "smb.host.cnt"
break;
case 147:return "smb.host"
break;
case 148:return "smb.os.cnt"
break;
case 149:return "smb.os"
break;
case 150:return "smb.share.cnt"
break;
case 151:return "smb.share"
break;
case 152:return "smb.user.cnt"
break;
case 153:return "smb.user"
break;
case 154:return "smb.ver.cnt"
break;
case 155:return "smb.ver"
break;
case 156:return "ssh.key.cnt"
break;
case 157:return "ssh.key"
break;
case 158:return "ssh.ver.cnt"
break;
case 159:return "ssh.ver"
break;
case 160:return 49
break;
case 161:return 178
break;
case 162:return "tcp"
break;
case 163:return "tcp"
break;
case 164:return "udp"
break;
case 165:return "udp"
break;
case 166:return "user.cnt"
break;
case 167:return "user"
break;
case 168:return 148
break;
case 169:return 181
break;
case 170:return 182
break;
case 171:return 183
break;
case 172:return 184
break;
case 173:return 8
break;
case 174:return 7
break;
case 175:return 11
break;
case 176:return 10
break;
case 177:return 194
break;
case 178:return 193
break;
case 179:return 193
break;
case 180:return 188
break;
case 181:return 188
break;
case 182:return 187
break;
case 183:return 187
break;
case 184:return 191
break;
case 185:return 192
break;
case 186:return 189
break;
case 187:return 5
break;
case 188:return 'INVALID'
break;
case 189:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:\d+\b)/,/^(?:\[\d+(,\s*\d+)*\s*\])/,/^(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?\b)/,/^(?:\[(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?(,\s*){0,1})+\])/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:http\.ua\.cnt)/,/^(?:http\.ua)/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.socks)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:asn\.email)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.socks)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:country\.email)/,/^(?:databytes)/,/^(?:email\.content-type\.cnt)/,/^(?:email\.content-type)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.message-id\.cnt)/,/^(?:email\.message-id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mime-version\.cnt)/,/^(?:email\.mime-version)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.x-mailer\.cnt)/,/^(?:email\.x-mailer)/,/^(?:email\.[^\s!=><.]*\.cnt)/,/^(?:email\.[^\s!=><.]*)/,/^(?:file)/,/^(?:http\.hasheader\.dst\.cnt)/,/^(?:http\.hasheader\.dst)/,/^(?:http\.hasheader)/,/^(?:http\.hasheader\.src\.cnt)/,/^(?:http\.hasheader\.src)/,/^(?:host\.dns\.cnt)/,/^(?:host\.dns)/,/^(?:host\.email\.cnt)/,/^(?:host\.email)/,/^(?:host\.http\.cnt)/,/^(?:host\.http)/,/^(?:host\.socks)/,/^(?:host)/,/^(?:http\.md5\.cnt)/,/^(?:http\.md5)/,/^(?:http\.uri\.cnt)/,/^(?:http\.uri)/,/^(?:http\.uri\.key\.cnt)/,/^(?:http\.uri\.key)/,/^(?:http\.uri\.path\.cnt)/,/^(?:http\.uri\.path)/,/^(?:http\.uri\.value\.cnt)/,/^(?:http\.uri\.value)/,/^(?:http\.version)/,/^(?:http\.version\.src)/,/^(?:http\.version\.src\.cnt)/,/^(?:http\.version\.dst)/,/^(?:http\.version\.dst\.cnt)/,/^(?:http\.user-agent\.cnt)/,/^(?:http\.user-agent)/,/^(?:http\.host\.cnt)/,/^(?:http\.host)/,/^(?:http\.[^\s!=><.]*\.cnt)/,/^(?:http\.[^\s!=><.]*)/,/^(?:icmp)/,/^(?:"icmp")/,/^(?:id)/,/^(?:payload8\.src)/,/^(?:payload8\.dst)/,/^(?:payload8)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.socks)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:ip\.email\.cnt)/,/^(?:ip\.email)/,/^(?:irc\.nick)/,/^(?:irc\.nick\.cnt)/,/^(?:irc\.channel)/,/^(?:irc\.channel\.cnt)/,/^(?:node)/,/^(?:packets)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.socks)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rir)/,/^(?:rir\.dns)/,/^(?:rir\.dst)/,/^(?:rir\.socks)/,/^(?:rir\.src)/,/^(?:rir\.xff)/,/^(?:rir\.email)/,/^(?:rootId)/,/^(?:socks\.host)/,/^(?:socks\.ip)/,/^(?:socks\.port)/,/^(?:socks\.user)/,/^(?:smb\.domain\.cnt)/,/^(?:smb\.domain)/,/^(?:smb\.fn\.cnt)/,/^(?:smb\.fn)/,/^(?:smb\.host\.cnt)/,/^(?:smb\.host)/,/^(?:smb\.os\.cnt)/,/^(?:smb\.os)/,/^(?:smb\.share\.cnt)/,/^(?:smb\.share)/,/^(?:smb\.user\.cnt)/,/^(?:smb\.user)/,/^(?:smb\.ver\.cnt)/,/^(?:smb\.ver)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:"tcp")/,/^(?:udp)/,/^(?:"udp")/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"\\]*(?:\\.[^"\\]*)*")/,/^(?:\/[^/\\]*(?:\\.[^/\\]*)*\/)/,/^(?:\[[0-9a-z,"]+\])/,/^(?:\[[^\]]+\])/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}