/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"IPMATCHLIST":15,"NUMBER":16,"NUMBERLIST":17,"HEADER":18,"EMAIL_HEADER":19,"HTTP_HEADER":20,"HEADER_CNT":21,"EMAIL_HEADER_CNT":22,"HTTP_HEADER_CNT":23,"RANGEFIELD":24,"databytes":25,"bytes":26,"packets":27,"port.dst":28,"port.socks":29,"port.src":30,"http.uri.cnt":31,"cert.cnt":32,"ip.dns.cnt":33,"ip.email.cnt":34,"ip.xff.cnt":35,"http.md5.cnt":36,"http.user-agent.cnt":37,"http.version.src.cnt":38,"http.version.dst.cnt":39,"user.cnt":40,"host.dns.cnt":41,"host.email.cnt":42,"host.http.cnt":43,"http.hasheader.src.cnt":44,"http.hasheader.dst.cnt":45,"tags.cnt":46,"email.content-type.cnt":47,"email.dst.cnt":48,"email.fn.cnt":49,"email.message-id.cnt":50,"email.md5.cnt":51,"email.mime-version.cnt":52,"email.src.cnt":53,"email.subject.cnt":54,"email.x-mailer.cnt":55,"cert.alt.cnt":56,"smb.domain.cnt":57,"smb.fn.cnt":58,"smb.host.cnt":59,"smb.os.cnt":60,"smb.share.cnt":61,"smb.user.cnt":62,"smb.ver.cnt":63,"ssh.key.cnt":64,"ssh.ver.cnt":65,"irc.nick.cnt":66,"irc.channel.cnt":67,"LOTERMFIELD":68,"node":69,"host.dns":70,"host.socks":71,"host.email":72,"host.http":73,"user":74,"email.dst":75,"email.src":76,"cert.subject.cn":77,"cert.issuer.cn":78,"cert.serial":79,"cert.alt":80,"ssh.ver":81,"TERMFIELD":82,"id":83,"ssh.key":84,"email.message-id":85,"email.md5":86,"email.mime-version":87,"email.fn":88,"email.content-type":89,"http.md5":90,"http.version.src":91,"http.version.dst":92,"irc.nick":93,"irc.channel":94,"rootId":95,"smb.domain":96,"smb.fn":97,"smb.host":98,"smb.os":99,"smb.share":100,"smb.user":101,"smb.ver":102,"UPTERMFIELD":103,"country.dns":104,"country.dst":105,"country.email":106,"country.socks":107,"country.src":108,"country.xff":109,"rir.dns":110,"rir.dst":111,"rir.email":112,"rir.socks":113,"rir.src":114,"rir.xff":115,"LOTEXTFIELD":116,"asn.src":117,"asn.dst":118,"asn.dns":119,"asn.email":120,"asn.socks":121,"asn.xff":122,"email.subject":123,"email.x-mailer":124,"cert.subject.on":125,"cert.issuer.on":126,"TEXTFIELD":127,"http.uri":128,"http.user-agent":129,"IPFIELD":130,"ip":131,"ip.src":132,"ip.dst":133,"ip.xff":134,"ip.dns":135,"ip.email":136,"ip.socks":137,"STR":138,"ID":139,"asn":140,"dns":141,"dst":142,"email":143,"src":144,"xff":145,"cert":146,"alt":147,"cnt":148,"issuer":149,"cn":150,"on":151,"serial":152,"subject":153,"country":154,"ua":155,"header":156,"host":157,"http":158,"md5":159,"uri":160,"icmp":161,"socks":162,"port":163,"protocol":164,"QUOTEDSTR":165,"REGEXSTR":166,"rir":167,"ssh":168,"key":169,"ver":170,"tags":171,"tcp":172,"udp":173,"LOWERLIST":174,"ANYLIST":175,"PROTOCOLNUMBER":176,"PROTOCOLLIST":177,"&&":178,"||":179,"!":180,"-":181,"(":182,")":183,"==":184,"!=":185,"file":186,"http.hasheader":187,"http.hasheader.src":188,"http.hasheader.dst":189,"http.version":190,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"IPMATCHLIST",16:"NUMBER",17:"NUMBERLIST",19:"EMAIL_HEADER",20:"HTTP_HEADER",22:"EMAIL_HEADER_CNT",23:"HTTP_HEADER_CNT",25:"databytes",26:"bytes",27:"packets",28:"port.dst",29:"port.socks",30:"port.src",31:"http.uri.cnt",32:"cert.cnt",33:"ip.dns.cnt",34:"ip.email.cnt",35:"ip.xff.cnt",36:"http.md5.cnt",37:"http.user-agent.cnt",38:"http.version.src.cnt",39:"http.version.dst.cnt",40:"user.cnt",41:"host.dns.cnt",42:"host.email.cnt",43:"host.http.cnt",44:"http.hasheader.src.cnt",45:"http.hasheader.dst.cnt",46:"tags.cnt",47:"email.content-type.cnt",48:"email.dst.cnt",49:"email.fn.cnt",50:"email.message-id.cnt",51:"email.md5.cnt",52:"email.mime-version.cnt",53:"email.src.cnt",54:"email.subject.cnt",55:"email.x-mailer.cnt",56:"cert.alt.cnt",57:"smb.domain.cnt",58:"smb.fn.cnt",59:"smb.host.cnt",60:"smb.os.cnt",61:"smb.share.cnt",62:"smb.user.cnt",63:"smb.ver.cnt",64:"ssh.key.cnt",65:"ssh.ver.cnt",66:"irc.nick.cnt",67:"irc.channel.cnt",69:"node",70:"host.dns",71:"host.socks",72:"host.email",73:"host.http",74:"user",75:"email.dst",76:"email.src",77:"cert.subject.cn",78:"cert.issuer.cn",79:"cert.serial",80:"cert.alt",81:"ssh.ver",83:"id",84:"ssh.key",85:"email.message-id",86:"email.md5",87:"email.mime-version",88:"email.fn",89:"email.content-type",90:"http.md5",91:"http.version.src",92:"http.version.dst",93:"irc.nick",94:"irc.channel",95:"rootId",96:"smb.domain",97:"smb.fn",98:"smb.host",99:"smb.os",100:"smb.share",101:"smb.user",102:"smb.ver",104:"country.dns",105:"country.dst",106:"country.email",107:"country.socks",108:"country.src",109:"country.xff",110:"rir.dns",111:"rir.dst",112:"rir.email",113:"rir.socks",114:"rir.src",115:"rir.xff",117:"asn.src",118:"asn.dst",119:"asn.dns",120:"asn.email",121:"asn.socks",122:"asn.xff",123:"email.subject",124:"email.x-mailer",125:"cert.subject.on",126:"cert.issuer.on",128:"http.uri",129:"http.user-agent",131:"ip",132:"ip.src",133:"ip.dst",134:"ip.xff",135:"ip.dns",136:"ip.email",137:"ip.socks",139:"ID",140:"asn",141:"dns",142:"dst",143:"email",144:"src",145:"xff",146:"cert",147:"alt",148:"cnt",149:"issuer",150:"cn",151:"on",152:"serial",153:"subject",154:"country",155:"ua",156:"header",157:"host",158:"http",159:"md5",160:"uri",161:"icmp",162:"socks",163:"port",164:"protocol",165:"QUOTEDSTR",166:"REGEXSTR",167:"rir",168:"ssh",169:"key",170:"ver",171:"tags",172:"tcp",173:"udp",174:"LOWERLIST",175:"ANYLIST",178:"&&",179:"||",180:"!",181:"-",182:"(",183:")",184:"==",185:"!=",186:"file",187:"http.hasheader",188:"http.hasheader.src",189:"http.hasheader.dst",190:"http.version"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[13,1],[13,1],[18,1],[18,1],[21,1],[21,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[103,1],[103,1],[103,1],[103,1],[103,1],[103,1],[103,1],[103,1],[103,1],[103,1],[103,1],[103,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[127,1],[127,1],[130,1],[130,1],[130,1],[130,1],[130,1],[130,1],[130,1],[138,1],[138,1],[138,2],[138,2],[138,2],[138,2],[138,2],[138,1],[138,2],[138,3],[138,2],[138,3],[138,3],[138,2],[138,3],[138,3],[138,1],[138,2],[138,2],[138,2],[138,2],[138,2],[138,2],[138,3],[138,2],[138,3],[138,2],[138,3],[138,2],[138,3],[138,1],[138,2],[138,3],[138,2],[138,3],[138,1],[138,2],[138,2],[138,3],[138,2],[138,3],[138,2],[138,3],[138,1],[138,1],[138,2],[138,3],[138,2],[138,2],[138,3],[138,2],[138,2],[138,2],[138,3],[138,1],[138,1],[138,1],[138,2],[138,2],[138,2],[138,1],[138,1],[138,1],[138,1],[138,2],[138,2],[138,2],[138,2],[138,2],[138,2],[138,2],[138,3],[138,2],[138,3],[138,1],[138,2],[138,1],[138,1],[138,2],[138,1],[138,1],[138,2],[138,1],[138,1],[138,1],[138,1],[138,1],[176,1],[176,1],[176,1],[176,1],[177,1],[177,1],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 16:this.$ = 'db'
break;
case 17:this.$ = 'by'
break;
case 18:this.$ = 'pa'
break;
case 19:this.$ = 'p2'
break;
case 20:this.$ = 'sockspo'
break;
case 21:this.$ = 'p1'
break;
case 22:this.$ = 'uscnt'
break;
case 23:this.$ = 'tlscnt'
break;
case 24:this.$ = 'dnsipcnt'
break;
case 25:this.$ = 'eipcnt'
break;
case 26:this.$ = 'xffscnt'
break;
case 27:this.$ = 'hmd5cnt'
break;
case 28:this.$ = 'uacnt'
break;
case 29:this.$ = 'hsvercnt'
break;
case 30:this.$ = 'hdvercnt'
break;
case 31:this.$ = 'usercnt'
break;
case 32:this.$ = 'dnshocnt'
break;
case 33:this.$ = 'ehocnt'
break;
case 34:this.$ = 'hocnt'
break;
case 35:this.$ = 'hh1cnt'
break;
case 36:this.$ = 'hh2cnt'
break;
case 37:this.$ = 'tacnt'
break;
case 38:this.$ = 'ectcnt'
break;
case 39:this.$ = 'edstcnt'
break;
case 40:this.$ = 'efncnt'
break;
case 41:this.$ = 'eidcnt'
break;
case 42:this.$ = 'emd5cnt'
break;
case 43:this.$ = 'emvcnt'
break;
case 44:this.$ = 'esrccnt'
break;
case 45:this.$ = 'esubcnt'
break;
case 46:this.$ = 'euacnt'
break;
case 47:this.$ = 'tls.altcnt'
break;
case 48:this.$ = 'smbdmcnt'
break;
case 49:this.$ = 'smbfncnt'
break;
case 50:this.$ = 'smbhocnt'
break;
case 51:this.$ = 'smboscnt'
break;
case 52:this.$ = 'smbsharecnt'
break;
case 53:this.$ = 'smbusercnt'
break;
case 54:this.$ = 'smbvercnt'
break;
case 55:this.$ = 'sshkeycnt'
break;
case 56:this.$ = 'sshvercnt'
break;
case 57:this.$ = 'ircnckcnt'
break;
case 58:this.$ = 'ircchcnt'
break;
case 59:this.$ = 'no'
break;
case 60:this.$ = 'dnsho'
break;
case 61:this.$ = 'socksho'
break;
case 62:this.$ = 'eho'
break;
case 63:this.$ = 'ho'
break;
case 64:this.$ = 'user'
break;
case 65:this.$ = 'edst'
break;
case 66:this.$ = 'esrc'
break;
case 67:this.$ = 'tls.sCn'
break;
case 68:this.$ = 'tls.iCn'
break;
case 69:this.$ = 'tls.sn'
break;
case 70:this.$ = 'tls.alt'
break;
case 71:this.$ = 'sshver'
break;
case 72:this.$ = '_id'
break;
case 73:this.$ = 'sshkey'
break;
case 74:this.$ = 'eid'
break;
case 75:this.$ = 'emd5'
break;
case 76:this.$ = 'emv'
break;
case 77:this.$ = 'efn'
break;
case 78:this.$ = 'ect'
break;
case 79:this.$ = 'hmd5'
break;
case 80:this.$ = 'hsver'
break;
case 81:this.$ = 'hdver'
break;
case 82:this.$ = 'ircnck'
break;
case 83:this.$ = 'ircch'
break;
case 84:this.$ = 'ro'
break;
case 85:this.$ = 'smbdm'
break;
case 86:this.$ = 'smbfn'
break;
case 87:this.$ = 'smbho'
break;
case 88:this.$ = 'smbos'
break;
case 89:this.$ = 'smbsh'
break;
case 90:this.$ = 'smbuser'
break;
case 91:this.$ = 'smbver'
break;
case 92:this.$ = 'gdnsip'
break;
case 93:this.$ = 'g2'
break;
case 94:this.$ = 'geip'
break;
case 95:this.$ = 'gsocksip'
break;
case 96:this.$ = 'g1'
break;
case 97:this.$ = 'gxff'
break;
case 98:this.$ = 'rirdnsip'
break;
case 99:this.$ = 'rir2'
break;
case 100:this.$ = 'rireip'
break;
case 101:this.$ = 'rirsocksip'
break;
case 102:this.$ = 'rir1'
break;
case 103:this.$ = 'rirxff'
break;
case 104:this.$ = 'as1'
break;
case 105:this.$ = 'as2'
break;
case 106:this.$ = 'asdnsip'
break;
case 107:this.$ = 'aseip'
break;
case 108:this.$ = 'assocksip'
break;
case 109:this.$ = 'asxff'
break;
case 110:this.$ = 'esub'
break;
case 111:this.$ = 'eua'
break;
case 112:this.$ = 'tls.sOn'
break;
case 113:this.$ = 'tls.iOn'
break;
case 114:this.$ = 'us'
break;
case 115:this.$ = 'ua'
break;
case 116:this.$ = 0
break;
case 117:this.$ = 1
break;
case 118:this.$ = 2
break;
case 119:this.$ = 3
break;
case 120:this.$ = 4
break;
case 121:this.$ = 5
break;
case 122:this.$ = 6
break;
case 216:this.$ = {bool: {must: [$$[$0-2], $$[$0]]}};
break;
case 217:this.$ = {bool: {should: [$$[$0-2], $$[$0]]}};
break;
case 218:this.$ = {not: $$[$0]};
break;
case 219:this.$ = -$$[$0];
break;
case 220:this.$ = $$[$0-1];
break;
case 221:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 222:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 223:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 224:this.$ = {terms: {}};
         this.$.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 225:this.$ = {not: {terms: {}}};
         this.$.not.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 226:this.$ = {term: {pr: protocolLookup($$[$0])}};
break;
case 227:this.$ = {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}};
break;
case 228:this.$ = {not: {term: {pr: protocolLookup($$[$0])}}};
break;
case 229:this.$ = {not: {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}}};
break;
case 230:this.$ = {bool: {should: [{range: {p1: {}}}, {range: {p2: {}}}]}};
         this.$.bool.should[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.bool.should[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 231:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toLowerCase())};
break;
case 232:this.$ = str2Query($$[$0-2], "term", $$[$0].toLowerCase());
break;
case 233:this.$ = {not: str2Query($$[$0-2], "term", $$[$0])};
break;
case 234:this.$ = str2Query($$[$0-2], "term", $$[$0]);
break;
case 235:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toUpperCase())};
break;
case 236:this.$ = str2Query($$[$0-2], "term", $$[$0].toUpperCase());
break;
case 237:this.$ = {not: str2Query($$[$0-2], "text", $$[$0].toLowerCase())};
break;
case 238:this.$ = str2Query($$[$0-2], "text", $$[$0].toLowerCase());
break;
case 239:this.$ = {not: str2Query($$[$0-2], "text", $$[$0])};
break;
case 240:this.$ = str2Query($$[$0-2], "text", $$[$0]);
break;
case 241:this.$ = str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0]);
break;
case 242:this.$ = {not: str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0])};
break;
case 243:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 244: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 245:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 246:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 247: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 248:
        this.$ = {terms: {}};
        this.$.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 249: this.$ = {not: {terms: {}}};
          this.$.not.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 250:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 251:this.$ = {bool: {should: [
                                {term: {p1: $$[$0]}},
                                {term: {p2: $$[$0]}},
                                {term: {sockspo: $$[$0]}}
                              ]}};
break;
case 252:this.$ = {bool: {should: [
                                {terms: {p1: CSVtoArray($$[$0])}},
                                {terms: {p2: CSVtoArray($$[$0])}},
                                {terms: {sockspo: CSVtoArray($$[$0])}}
                              ]}};
break;
case 253:this.$ = {bool: {must_not: [
                                  {term: {p1: $$[$0]}}, 
                                  {term: {p2: $$[$0]}},
                                  {term: {sockspo: $$[$0]}}
                                ]}};
break;
case 254:this.$ = {bool: {must_not: [
                                  {terms: {p1: CSVtoArray($$[$0])}}, 
                                  {terms: {p2: CSVtoArray($$[$0])}},
                                  {terms: {sockspo: CSVtoArray($$[$0])}}
                                ]}};
break;
case 255:this.$ = parseIpPort(yy, $$[$0],$$[$0-2]);
break;
case 256:this.$ = {not: parseIpPort(yy, $$[$0],$$[$0-2])};
break;
case 257: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("ta", tag);
        
break;
case 258: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("ta", tag)};
        
break;
case 259: var file = stripQuotes($$[$0]);
          this.$ = {fileand: file};
        
break;
case 260: var file = stripQuotes($$[$0]);
          this.$ = {not: {fileand: file}};
        
break;
case 261: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {should: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 262: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh1", tag);
        
break;
case 263: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh2", tag);
        
break;
case 264: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {must_not: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 265: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh1", tag)};
        
break;
case 266: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh2", tag)};
        
break;
case 267:
          this.$ = [str2Query("hsver", "term", $$[$0]),
                str2Query("hdver", "term", $$[$0])
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 268:
          this.$ = [str2Query("hsver", "term", $$[$0]),
                str2Query("hdver", "term", $$[$0])
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 269: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("g1", "term", str),
                str2Query("g2", "term", str),
                str2Query("gdnsip", "term", str),
                str2Query("geip", "term", str),
                str2Query("gsocksip", "term", str),
                str2Query("gxff", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 270: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("g1", "term", str),
                str2Query("g2", "term", str),
                str2Query("gdnsip", "term", str),
                str2Query("geip", "term", str),
                str2Query("gsocksip", "term", str),
                str2Query("gxff", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 271: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("rir1", "term", str),
                str2Query("rir2", "term", str),
                str2Query("rirxff", "term", str),
                str2Query("rirdnsip", "term", str),
                str2Query("rirsocksip", "term", str),
                str2Query("rireip", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 272: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("rir1", "term", str),
                str2Query("rir2", "term", str),
                str2Query("rirxff", "term", str),
                str2Query("rirdnsip", "term", str),
                str2Query("rirsocksip", "term", str),
                str2Query("rireip", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 273: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("as1", "text", str),
                str2Query("as2", "text", str),
                str2Query("aseip", "text", str),
                str2Query("asdnsip", "text", str),
                str2Query("assocksip", "text", str),
                str2Query("asxff", "text", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 274: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("as1", "text", str),
                str2Query("as2", "text", str),
                str2Query("asdnsip", "text", str),
                str2Query("aseip", "text", str),
                str2Query("assocksip", "text", str),
                str2Query("asxff", "text", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 275: var str = $$[$0].toLowerCase();

          this.$ = [str2Query("ho", "term", str),
                str2Query("dnsho", "term", str),
                str2Query("eho", "term", str),
                str2Query("socksho", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 276: var str = $$[$0].toLowerCase();

          this.$ = [str2Query("ho", "term", str),
                str2Query("dnsho", "term", str),
                str2Query("eho", "term", str),
                str2Query("socksho", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
}
},
table: [{3:1,4:2,18:14,19:[1,127],20:[1,128],21:15,22:[1,129],23:[1,130],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:9,69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:10,83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:11,104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:12,117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:13,128:[1,125],129:[1,126],130:16,131:[1,131],132:[1,132],133:[1,133],134:[1,134],135:[1,135],136:[1,136],137:[1,137],140:[1,25],154:[1,23],157:[1,26],163:[1,8],164:[1,7],167:[1,24],171:[1,17],180:[1,3],181:[1,4],182:[1,5],186:[1,18],187:[1,19],188:[1,20],189:[1,21],190:[1,22]},{1:[3]},{5:[1,138],178:[1,139],179:[1,140]},{4:141,18:14,19:[1,127],20:[1,128],21:15,22:[1,129],23:[1,130],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:9,69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:10,83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:11,104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:12,117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:13,128:[1,125],129:[1,126],130:16,131:[1,131],132:[1,132],133:[1,133],134:[1,134],135:[1,135],136:[1,136],137:[1,137],140:[1,25],154:[1,23],157:[1,26],163:[1,8],164:[1,7],167:[1,24],171:[1,17],180:[1,3],181:[1,4],182:[1,5],186:[1,18],187:[1,19],188:[1,20],189:[1,21],190:[1,22]},{4:142,18:14,19:[1,127],20:[1,128],21:15,22:[1,129],23:[1,130],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:9,69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:10,83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:11,104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:12,117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:13,128:[1,125],129:[1,126],130:16,131:[1,131],132:[1,132],133:[1,133],134:[1,134],135:[1,135],136:[1,136],137:[1,137],140:[1,25],154:[1,23],157:[1,26],163:[1,8],164:[1,7],167:[1,24],171:[1,17],180:[1,3],181:[1,4],182:[1,5],186:[1,18],187:[1,19],188:[1,20],189:[1,21],190:[1,22]},{4:143,18:14,19:[1,127],20:[1,128],21:15,22:[1,129],23:[1,130],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:9,69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:10,83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:11,104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:12,117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:13,128:[1,125],129:[1,126],130:16,131:[1,131],132:[1,132],133:[1,133],134:[1,134],135:[1,135],136:[1,136],137:[1,137],140:[1,25],154:[1,23],157:[1,26],163:[1,8],164:[1,7],167:[1,24],171:[1,17],180:[1,3],181:[1,4],182:[1,5],186:[1,18],187:[1,19],188:[1,20],189:[1,21],190:[1,22]},{6:147,7:[1,149],8:[1,150],9:148,10:[1,151],11:[1,152],12:144,184:[1,145],185:[1,146]},{184:[1,153],185:[1,154]},{6:147,7:[1,149],8:[1,150],9:148,10:[1,151],11:[1,152],12:155,184:[1,156],185:[1,157]},{184:[1,159],185:[1,158]},{184:[1,161],185:[1,160]},{184:[1,163],185:[1,162]},{184:[1,165],185:[1,164]},{184:[1,167],185:[1,166]},{6:147,7:[1,149],8:[1,150],9:148,10:[1,151],11:[1,152],12:170,184:[1,168],185:[1,169]},{6:147,7:[1,149],8:[1,150],9:148,10:[1,151],11:[1,152],12:173,184:[1,171],185:[1,172]},{184:[1,174],185:[1,175]},{184:[1,176],185:[1,177]},{184:[1,178],185:[1,179]},{184:[1,180],185:[1,181]},{184:[1,182],185:[1,183]},{184:[1,184],185:[1,185]},{184:[1,186],185:[1,187]},{184:[1,188],185:[1,189]},{184:[1,190],185:[1,191]},{184:[1,192],185:[1,193]},{184:[1,195],185:[1,194]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],184:[2,16],185:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],184:[2,17],185:[2,17]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],184:[2,18],185:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],184:[2,19],185:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],184:[2,20],185:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],184:[2,21],185:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],184:[2,22],185:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],184:[2,23],185:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],184:[2,24],185:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],184:[2,25],185:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],184:[2,26],185:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],184:[2,27],185:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],184:[2,28],185:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],184:[2,29],185:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],184:[2,30],185:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],184:[2,31],185:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],184:[2,32],185:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],184:[2,33],185:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],184:[2,34],185:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],184:[2,35],185:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],184:[2,36],185:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],184:[2,37],185:[2,37]},{7:[2,38],8:[2,38],10:[2,38],11:[2,38],184:[2,38],185:[2,38]},{7:[2,39],8:[2,39],10:[2,39],11:[2,39],184:[2,39],185:[2,39]},{7:[2,40],8:[2,40],10:[2,40],11:[2,40],184:[2,40],185:[2,40]},{7:[2,41],8:[2,41],10:[2,41],11:[2,41],184:[2,41],185:[2,41]},{7:[2,42],8:[2,42],10:[2,42],11:[2,42],184:[2,42],185:[2,42]},{7:[2,43],8:[2,43],10:[2,43],11:[2,43],184:[2,43],185:[2,43]},{7:[2,44],8:[2,44],10:[2,44],11:[2,44],184:[2,44],185:[2,44]},{7:[2,45],8:[2,45],10:[2,45],11:[2,45],184:[2,45],185:[2,45]},{7:[2,46],8:[2,46],10:[2,46],11:[2,46],184:[2,46],185:[2,46]},{7:[2,47],8:[2,47],10:[2,47],11:[2,47],184:[2,47],185:[2,47]},{7:[2,48],8:[2,48],10:[2,48],11:[2,48],184:[2,48],185:[2,48]},{7:[2,49],8:[2,49],10:[2,49],11:[2,49],184:[2,49],185:[2,49]},{7:[2,50],8:[2,50],10:[2,50],11:[2,50],184:[2,50],185:[2,50]},{7:[2,51],8:[2,51],10:[2,51],11:[2,51],184:[2,51],185:[2,51]},{7:[2,52],8:[2,52],10:[2,52],11:[2,52],184:[2,52],185:[2,52]},{7:[2,53],8:[2,53],10:[2,53],11:[2,53],184:[2,53],185:[2,53]},{7:[2,54],8:[2,54],10:[2,54],11:[2,54],184:[2,54],185:[2,54]},{7:[2,55],8:[2,55],10:[2,55],11:[2,55],184:[2,55],185:[2,55]},{7:[2,56],8:[2,56],10:[2,56],11:[2,56],184:[2,56],185:[2,56]},{7:[2,57],8:[2,57],10:[2,57],11:[2,57],184:[2,57],185:[2,57]},{7:[2,58],8:[2,58],10:[2,58],11:[2,58],184:[2,58],185:[2,58]},{184:[2,59],185:[2,59]},{184:[2,60],185:[2,60]},{184:[2,61],185:[2,61]},{184:[2,62],185:[2,62]},{184:[2,63],185:[2,63]},{184:[2,64],185:[2,64]},{184:[2,65],185:[2,65]},{184:[2,66],185:[2,66]},{184:[2,67],185:[2,67]},{184:[2,68],185:[2,68]},{184:[2,69],185:[2,69]},{184:[2,70],185:[2,70]},{184:[2,71],185:[2,71]},{184:[2,72],185:[2,72]},{184:[2,73],185:[2,73]},{184:[2,74],185:[2,74]},{184:[2,75],185:[2,75]},{184:[2,76],185:[2,76]},{184:[2,77],185:[2,77]},{184:[2,78],185:[2,78]},{184:[2,79],185:[2,79]},{184:[2,80],185:[2,80]},{184:[2,81],185:[2,81]},{184:[2,82],185:[2,82]},{184:[2,83],185:[2,83]},{184:[2,84],185:[2,84]},{184:[2,85],185:[2,85]},{184:[2,86],185:[2,86]},{184:[2,87],185:[2,87]},{184:[2,88],185:[2,88]},{184:[2,89],185:[2,89]},{184:[2,90],185:[2,90]},{184:[2,91],185:[2,91]},{184:[2,92],185:[2,92]},{184:[2,93],185:[2,93]},{184:[2,94],185:[2,94]},{184:[2,95],185:[2,95]},{184:[2,96],185:[2,96]},{184:[2,97],185:[2,97]},{184:[2,98],185:[2,98]},{184:[2,99],185:[2,99]},{184:[2,100],185:[2,100]},{184:[2,101],185:[2,101]},{184:[2,102],185:[2,102]},{184:[2,103],185:[2,103]},{184:[2,104],185:[2,104]},{184:[2,105],185:[2,105]},{184:[2,106],185:[2,106]},{184:[2,107],185:[2,107]},{184:[2,108],185:[2,108]},{184:[2,109],185:[2,109]},{184:[2,110],185:[2,110]},{184:[2,111],185:[2,111]},{184:[2,112],185:[2,112]},{184:[2,113],185:[2,113]},{184:[2,114],185:[2,114]},{184:[2,115],185:[2,115]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],184:[2,12],185:[2,12]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],184:[2,13],185:[2,13]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],184:[2,14],185:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],184:[2,15],185:[2,15]},{184:[2,116],185:[2,116]},{184:[2,117],185:[2,117]},{184:[2,118],185:[2,118]},{184:[2,119],185:[2,119]},{184:[2,120],185:[2,120]},{184:[2,121],185:[2,121]},{184:[2,122],185:[2,122]},{1:[2,1]},{4:196,18:14,19:[1,127],20:[1,128],21:15,22:[1,129],23:[1,130],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:9,69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:10,83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:11,104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:12,117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:13,128:[1,125],129:[1,126],130:16,131:[1,131],132:[1,132],133:[1,133],134:[1,134],135:[1,135],136:[1,136],137:[1,137],140:[1,25],154:[1,23],157:[1,26],163:[1,8],164:[1,7],167:[1,24],171:[1,17],180:[1,3],181:[1,4],182:[1,5],186:[1,18],187:[1,19],188:[1,20],189:[1,21],190:[1,22]},{4:197,18:14,19:[1,127],20:[1,128],21:15,22:[1,129],23:[1,130],24:6,25:[1,27],26:[1,28],27:[1,29],28:[1,30],29:[1,31],30:[1,32],31:[1,33],32:[1,34],33:[1,35],34:[1,36],35:[1,37],36:[1,38],37:[1,39],38:[1,40],39:[1,41],40:[1,42],41:[1,43],42:[1,44],43:[1,45],44:[1,46],45:[1,47],46:[1,48],47:[1,49],48:[1,50],49:[1,51],50:[1,52],51:[1,53],52:[1,54],53:[1,55],54:[1,56],55:[1,57],56:[1,58],57:[1,59],58:[1,60],59:[1,61],60:[1,62],61:[1,63],62:[1,64],63:[1,65],64:[1,66],65:[1,67],66:[1,68],67:[1,69],68:9,69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:[1,81],81:[1,82],82:10,83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:[1,90],91:[1,91],92:[1,92],93:[1,93],94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],100:[1,100],101:[1,101],102:[1,102],103:11,104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:[1,113],115:[1,114],116:12,117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:13,128:[1,125],129:[1,126],130:16,131:[1,131],132:[1,132],133:[1,133],134:[1,134],135:[1,135],136:[1,136],137:[1,137],140:[1,25],154:[1,23],157:[1,26],163:[1,8],164:[1,7],167:[1,24],171:[1,17],180:[1,3],181:[1,4],182:[1,5],186:[1,18],187:[1,19],188:[1,20],189:[1,21],190:[1,22]},{5:[2,218],178:[2,218],179:[2,218],183:[2,218]},{5:[2,219],178:[2,219],179:[2,219],183:[2,219]},{178:[1,139],179:[1,140],183:[1,198]},{16:[1,199]},{16:[1,200],17:[1,201]},{16:[1,202],17:[1,203]},{16:[2,6]},{16:[2,7]},{16:[2,2]},{16:[2,3]},{16:[2,4]},{16:[2,5]},{16:[1,206],17:[1,210],161:[1,207],172:[1,208],173:[1,209],174:[1,211],176:204,177:205},{16:[1,206],17:[1,210],161:[1,207],172:[1,208],173:[1,209],174:[1,211],176:212,177:213},{16:[1,214]},{16:[1,215],17:[1,216]},{16:[1,217],17:[1,218]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:219,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:249,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:250,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:251,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:252,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:253,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:254,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:255,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:256,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:257,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],16:[1,259],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:258,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],16:[1,261],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:260,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{16:[1,262]},{16:[1,263],17:[1,264]},{16:[1,265],17:[1,266]},{16:[1,267]},{13:268,14:[1,269],15:[1,270],16:[1,271],17:[1,272]},{13:273,14:[1,269],15:[1,270],16:[1,271],17:[1,272]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:274,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:275,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:276,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:277,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:278,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:279,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:280,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:281,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:282,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:283,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:284,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:285,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:286,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:287,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:288,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:289,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:290,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:291,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:292,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{14:[1,247],15:[1,248],17:[1,246],26:[1,222],27:[1,232],69:[1,231],131:[1,230],138:293,139:[1,220],140:[1,221],143:[1,225],146:[1,223],154:[1,224],155:[1,241],156:[1,226],157:[1,227],158:[1,228],160:[1,243],161:[1,229],163:[1,233],164:[1,234],165:[1,235],166:[1,236],167:[1,237],168:[1,238],171:[1,239],172:[1,240],173:[1,242],174:[1,244],175:[1,245]},{5:[2,216],178:[2,216],179:[2,216],183:[2,216]},{5:[2,217],178:[1,139],179:[2,217],183:[2,217]},{5:[2,220],178:[2,220],179:[2,220],183:[2,220]},{5:[2,221],178:[2,221],179:[2,221],183:[2,221]},{5:[2,222],178:[2,222],179:[2,222],183:[2,222]},{5:[2,224],178:[2,224],179:[2,224],183:[2,224]},{5:[2,223],178:[2,223],179:[2,223],183:[2,223]},{5:[2,225],178:[2,225],179:[2,225],183:[2,225]},{5:[2,226],178:[2,226],179:[2,226],183:[2,226]},{5:[2,227],178:[2,227],179:[2,227],183:[2,227]},{5:[2,210],178:[2,210],179:[2,210],183:[2,210]},{5:[2,211],178:[2,211],179:[2,211],183:[2,211]},{5:[2,212],178:[2,212],179:[2,212],183:[2,212]},{5:[2,213],178:[2,213],179:[2,213],183:[2,213]},{5:[2,214],178:[2,214],179:[2,214],183:[2,214]},{5:[2,215],178:[2,215],179:[2,215],183:[2,215]},{5:[2,228],178:[2,228],179:[2,228],183:[2,228]},{5:[2,229],178:[2,229],179:[2,229],183:[2,229]},{5:[2,230],178:[2,230],179:[2,230],183:[2,230]},{5:[2,251],178:[2,251],179:[2,251],183:[2,251]},{5:[2,252],178:[2,252],179:[2,252],183:[2,252]},{5:[2,253],178:[2,253],179:[2,253],183:[2,253]},{5:[2,254],178:[2,254],179:[2,254],183:[2,254]},{5:[2,231],178:[2,231],179:[2,231],183:[2,231]},{5:[2,123],178:[2,123],179:[2,123],183:[2,123]},{5:[2,124],141:[1,294],142:[1,295],143:[1,296],144:[1,297],145:[1,298],178:[2,124],179:[2,124],183:[2,124]},{5:[2,130],178:[2,130],179:[2,130],183:[2,130]},{147:[1,299],148:[1,300],149:[1,301],152:[1,302],153:[1,303]},{5:[2,139],141:[1,304],142:[1,305],143:[1,306],144:[1,307],145:[1,308],178:[2,139],179:[2,139],183:[2,139]},{142:[1,309],144:[1,310],153:[1,311],155:[1,312]},{5:[2,153],142:[1,313],144:[1,314],178:[2,153],179:[2,153],183:[2,153]},{5:[2,158],148:[1,315],178:[2,158],179:[2,158],183:[2,158]},{155:[1,317],159:[1,316],160:[1,318]},{5:[2,166],178:[2,166],179:[2,166],183:[2,166]},{5:[2,167],141:[1,319],142:[1,320],143:[1,321],144:[1,323],145:[1,324],162:[1,322],178:[2,167],179:[2,167],183:[2,167]},{5:[2,177],178:[2,177],179:[2,177],183:[2,177]},{5:[2,178],178:[2,178],179:[2,178],183:[2,178]},{5:[2,179],142:[1,325],144:[1,327],162:[1,326],178:[2,179],179:[2,179],183:[2,179]},{5:[2,183],178:[2,183],179:[2,183],183:[2,183]},{5:[2,184],178:[2,184],179:[2,184],183:[2,184]},{5:[2,185],178:[2,185],179:[2,185],183:[2,185]},{5:[2,186],141:[1,328],142:[1,329],143:[1,330],144:[1,332],145:[1,333],162:[1,331],178:[2,186],179:[2,186],183:[2,186]},{169:[1,334],170:[1,335]},{5:[2,197],148:[1,336],178:[2,197],179:[2,197],183:[2,197]},{5:[2,199],178:[2,199],179:[2,199],183:[2,199]},{5:[2,200],148:[1,337],178:[2,200],179:[2,200],183:[2,200]},{5:[2,202],178:[2,202],179:[2,202],183:[2,202]},{5:[2,203],148:[1,338],178:[2,203],179:[2,203],183:[2,203]},{5:[2,205],178:[2,205],179:[2,205],183:[2,205]},{5:[2,206],178:[2,206],179:[2,206],183:[2,206]},{5:[2,207],178:[2,207],179:[2,207],183:[2,207]},{5:[2,208],178:[2,208],179:[2,208],183:[2,208]},{5:[2,209],178:[2,209],179:[2,209],183:[2,209]},{5:[2,232],178:[2,232],179:[2,232],183:[2,232]},{5:[2,233],178:[2,233],179:[2,233],183:[2,233]},{5:[2,234],178:[2,234],179:[2,234],183:[2,234]},{5:[2,235],178:[2,235],179:[2,235],183:[2,235]},{5:[2,236],178:[2,236],179:[2,236],183:[2,236]},{5:[2,237],178:[2,237],179:[2,237],183:[2,237]},{5:[2,238],178:[2,238],179:[2,238],183:[2,238]},{5:[2,239],178:[2,239],179:[2,239],183:[2,239]},{5:[2,240],178:[2,240],179:[2,240],183:[2,240]},{5:[2,241],178:[2,241],179:[2,241],183:[2,241]},{5:[2,243],178:[2,243],179:[2,243],183:[2,243]},{5:[2,242],178:[2,242],179:[2,242],183:[2,242]},{5:[2,244],178:[2,244],179:[2,244],183:[2,244]},{5:[2,245],178:[2,245],179:[2,245],183:[2,245]},{5:[2,246],178:[2,246],179:[2,246],183:[2,246]},{5:[2,248],178:[2,248],179:[2,248],183:[2,248]},{5:[2,247],178:[2,247],179:[2,247],183:[2,247]},{5:[2,249],178:[2,249],179:[2,249],183:[2,249]},{5:[2,250],178:[2,250],179:[2,250],183:[2,250]},{5:[2,255],178:[2,255],179:[2,255],183:[2,255]},{5:[2,8],178:[2,8],179:[2,8],183:[2,8]},{5:[2,9],178:[2,9],179:[2,9],183:[2,9]},{5:[2,10],178:[2,10],179:[2,10],183:[2,10]},{5:[2,11],178:[2,11],179:[2,11],183:[2,11]},{5:[2,256],178:[2,256],179:[2,256],183:[2,256]},{5:[2,257],178:[2,257],179:[2,257],183:[2,257]},{5:[2,258],178:[2,258],179:[2,258],183:[2,258]},{5:[2,259],178:[2,259],179:[2,259],183:[2,259]},{5:[2,260],178:[2,260],179:[2,260],183:[2,260]},{5:[2,261],178:[2,261],179:[2,261],183:[2,261]},{5:[2,264],178:[2,264],179:[2,264],183:[2,264]},{5:[2,262],178:[2,262],179:[2,262],183:[2,262]},{5:[2,265],178:[2,265],179:[2,265],183:[2,265]},{5:[2,263],178:[2,263],179:[2,263],183:[2,263]},{5:[2,266],178:[2,266],179:[2,266],183:[2,266]},{5:[2,267],178:[2,267],179:[2,267],183:[2,267]},{5:[2,268],178:[2,268],179:[2,268],183:[2,268]},{5:[2,269],178:[2,269],179:[2,269],183:[2,269]},{5:[2,270],178:[2,270],179:[2,270],183:[2,270]},{5:[2,271],178:[2,271],179:[2,271],183:[2,271]},{5:[2,272],178:[2,272],179:[2,272],183:[2,272]},{5:[2,273],178:[2,273],179:[2,273],183:[2,273]},{5:[2,274],178:[2,274],179:[2,274],183:[2,274]},{5:[2,275],178:[2,275],179:[2,275],183:[2,275]},{5:[2,276],178:[2,276],179:[2,276],183:[2,276]},{5:[2,125],178:[2,125],179:[2,125],183:[2,125]},{5:[2,126],178:[2,126],179:[2,126],183:[2,126]},{5:[2,127],178:[2,127],179:[2,127],183:[2,127]},{5:[2,128],178:[2,128],179:[2,128],183:[2,128]},{5:[2,129],178:[2,129],179:[2,129],183:[2,129]},{5:[2,131],148:[1,339],178:[2,131],179:[2,131],183:[2,131]},{5:[2,133],178:[2,133],179:[2,133],183:[2,133]},{150:[1,340],151:[1,341]},{5:[2,136],178:[2,136],179:[2,136],183:[2,136]},{150:[1,342],151:[1,343]},{5:[2,140],178:[2,140],179:[2,140],183:[2,140]},{5:[2,141],178:[2,141],179:[2,141],183:[2,141]},{5:[2,142],178:[2,142],179:[2,142],183:[2,142]},{5:[2,143],178:[2,143],179:[2,143],183:[2,143]},{5:[2,144],178:[2,144],179:[2,144],183:[2,144]},{5:[2,145],148:[1,344],178:[2,145],179:[2,145],183:[2,145]},{5:[2,147],148:[1,345],178:[2,147],179:[2,147],183:[2,147]},{5:[2,149],148:[1,346],178:[2,149],179:[2,149],183:[2,149]},{5:[2,151],148:[1,347],178:[2,151],179:[2,151],183:[2,151]},{5:[2,154],148:[1,348],178:[2,154],179:[2,154],183:[2,154]},{5:[2,156],148:[1,349],178:[2,156],179:[2,156],183:[2,156]},{5:[2,159],178:[2,159],179:[2,159],183:[2,159]},{5:[2,160],148:[1,350],178:[2,160],179:[2,160],183:[2,160]},{5:[2,162],148:[1,351],178:[2,162],179:[2,162],183:[2,162]},{5:[2,164],148:[1,352],178:[2,164],179:[2,164],183:[2,164]},{5:[2,168],148:[1,353],178:[2,168],179:[2,168],183:[2,168]},{5:[2,170],178:[2,170],179:[2,170],183:[2,170]},{5:[2,171],148:[1,354],178:[2,171],179:[2,171],183:[2,171]},{5:[2,173],178:[2,173],179:[2,173],183:[2,173]},{5:[2,174],178:[2,174],179:[2,174],183:[2,174]},{5:[2,175],148:[1,355],178:[2,175],179:[2,175],183:[2,175]},{5:[2,180],178:[2,180],179:[2,180],183:[2,180]},{5:[2,181],178:[2,181],179:[2,181],183:[2,181]},{5:[2,182],178:[2,182],179:[2,182],183:[2,182]},{5:[2,187],178:[2,187],179:[2,187],183:[2,187]},{5:[2,188],178:[2,188],179:[2,188],183:[2,188]},{5:[2,189],178:[2,189],179:[2,189],183:[2,189]},{5:[2,190],178:[2,190],179:[2,190],183:[2,190]},{5:[2,191],178:[2,191],179:[2,191],183:[2,191]},{5:[2,192],178:[2,192],179:[2,192],183:[2,192]},{5:[2,193],148:[1,356],178:[2,193],179:[2,193],183:[2,193]},{5:[2,195],148:[1,357],178:[2,195],179:[2,195],183:[2,195]},{5:[2,198],178:[2,198],179:[2,198],183:[2,198]},{5:[2,201],178:[2,201],179:[2,201],183:[2,201]},{5:[2,204],178:[2,204],179:[2,204],183:[2,204]},{5:[2,132],178:[2,132],179:[2,132],183:[2,132]},{5:[2,134],178:[2,134],179:[2,134],183:[2,134]},{5:[2,135],178:[2,135],179:[2,135],183:[2,135]},{5:[2,137],178:[2,137],179:[2,137],183:[2,137]},{5:[2,138],178:[2,138],179:[2,138],183:[2,138]},{5:[2,146],178:[2,146],179:[2,146],183:[2,146]},{5:[2,148],178:[2,148],179:[2,148],183:[2,148]},{5:[2,150],178:[2,150],179:[2,150],183:[2,150]},{5:[2,152],178:[2,152],179:[2,152],183:[2,152]},{5:[2,155],178:[2,155],179:[2,155],183:[2,155]},{5:[2,157],178:[2,157],179:[2,157],183:[2,157]},{5:[2,161],178:[2,161],179:[2,161],183:[2,161]},{5:[2,163],178:[2,163],179:[2,163],183:[2,163]},{5:[2,165],178:[2,165],179:[2,165],183:[2,165]},{5:[2,169],178:[2,169],179:[2,169],183:[2,169]},{5:[2,172],178:[2,172],179:[2,172],183:[2,172]},{5:[2,176],178:[2,176],179:[2,176],183:[2,176]},{5:[2,194],178:[2,194],179:[2,194],183:[2,194]},{5:[2,196],178:[2,196],179:[2,196],183:[2,196]}],
defaultActions: {138:[2,1],147:[2,6],148:[2,7],149:[2,2],150:[2,3],151:[2,4],152:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


var    util           = require('util');

function parseIpPort(yy, ipPortStr, which) {
  ipPortStr = ipPortStr.trim();

// We really have a list of them
  if (ipPortStr[0] === "[" && ipPortStr[ipPortStr.length -1] === "]") {
      var obj =  {bool: {should: []}};
      CSVtoArray(ipPortStr).forEach(function(str) {
          obj.bool.should.push(parseIpPort(yy, str, which));
      });
      return obj;
  }

  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }

  var t1;
  var t2;
  var xff;
  var dns;
  var email;
  var socks;

  if (ip1 !== -1) {
    if (ip1 === ip2) {
        t1    = {term: {a1: ip1>>>0}};
        t2    = {term: {a2: ip1>>>0}};
        socks = {term: {socksip: ip1>>>0}};
        dns   = {term: {dnsip: ip1>>>0}};
        email = {term: {eip: ip1>>>0}};
        xff   = {term: {xff: ip1>>>0}};
    } else {
        t1    = {range: {a1: {from: ip1>>>0, to: ip2>>>0}}};
        t2    = {range: {a2: {from: ip1>>>0, to: ip2>>>0}}};
        socks = {range: {socksip: {from: ip1>>>0, to: ip2>>>0}}};
        dns   = {range: {dnsip: {from: ip1>>>0, to: ip2>>>0}}};
        email = {range: {eip: {from: ip1>>>0, to: ip2>>>0}}};
        xff   = {range: {xff: {from: ip1>>>0, to: ip2>>>0}}};
    }
  }

  if (port !== -1) {
    t1    = {bool: {must: [t1, {term: {p1: port}}]}};
    t2    = {bool: {must: [t2, {term: {p1: port}}]}};
    socks = {bool: {must: [socks, {term: {p1: port}}]}};
  }

  switch(which) {
  case 0:
    var ors = [t1, t2];

    if (xff)
        ors.push(xff);
    if (dns)
        ors.push(dns);
    if (yy.emailSearch === true && email)
        ors.push(email);
    if (socks)
        ors.push(socks);

    return {bool: {should: ors}};
  case 1:
    return t1;
  case 2:
    return t2;
  case 3:
    if (!xff)
        throw "xff doesn't support port only";
    return xff;
  case 4:
    if (!dns)
        throw "dns doesn't support port only";
    return dns;
  case 5:
    if (!email)
        throw "email doesn't support port only";
    return email;
  case 6:
    return socks;
  }
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}

var field2RawField = {
    us: "rawus",
    ua: "rawua",
    as1: "rawas1",
    as2: "rawas2",
    asxff: "rawasff",
    asdnsip: "rawasdnsip",
    iOn: "rawiOn",
    eua: "raweua",
    esub: "rawesub",
    aseip: "rawaseip"
}

function str2Query(field, kind, str)
{
    var obj;

    if (field2RawField[field] === undefined && field.indexOf(".snow", field.length - 5) !== -1) {
        field2RawField[field] = field.substring(0, field.length - 5) + ".raw";
    }

    if (str[0] === "/" && str[str.length -1] === "/") {
        field = field2RawField[field] || field;
        obj = {regexp: {}};
        obj.regexp[field] = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        return obj;
    }

    var strs;
    if (str[0] === "\"" && str[str.length -1] === "\"") {
        str = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
    } else if (str[0] === "[" && str[str.length -1] === "]") {
        strs = CSVtoArray(str);
        if (kind === "term") {
            obj = {terms: {}};
            obj.terms[field] = strs;
        } else if (kind === "text") {
            var obj =  {query: {bool: {should: []}}};
            strs.forEach(function(str) {
              var should = {text: {}};
              should.text[field] = {query: str, type: "phrase", operator: "and"}
              obj.query.bool.should.push(should);
            });
        }
        return obj;
    }

    if (str.indexOf("*") !== -1) {
        field = field2RawField[field] || field;
        obj = {query: {wildcard: {}}};
        obj.query.wildcard[field] = str;
    } else if (kind === "text") {
        obj = {query: {text: {}}};
        obj.query.text[field] = {query: str, type: "phrase", operator: "and"}
    } else if (kind === "term") {
        obj = {term: {}};
        obj.term[field] = str;
    }
    return obj;
}

function str2Header(yy, name) {
    var field = yy.fieldsMap[name];
    if (field === undefined) throw "Unknown field " + name;

    return field.db;
}

// http://stackoverflow.com/a/8497474
// Return array of string values, or NULL if CSV string not well formed.
function CSVtoArray(text) {
    text = text.substring(1, text.length-1);
    var re_valid = /^\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*(?:,\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*)*$/;
    var re_value = /(?!\s*$)\s*(?:'([^'\\]*(?:\\[\S\s][^'\\]*)*)'|"([^"\\]*(?:\\[\S\s][^"\\]*)*)"|([^,'"\s\\]*(?:\s+[^,'"\s\\]+)*))\s*(?:,|$)/g;
    // Return NULL if input string is not well formed CSV string.
    if (!re_valid.test(text)) return null;
    var a = [];                     // Initialize array to receive values.
    text.replace(re_value, // "Walk" the string using replace with callback.
        function(m0, m1, m2, m3) {
            // Remove backslash from \' in single quoted values.
            if      (m1 !== undefined) a.push(m1.replace(/\\'/g, "'"));
            // Remove backslash from \" in double quoted values.
            else if (m2 !== undefined) a.push(m2.replace(/\\"/g, '"'));
            else if (m3 !== undefined) a.push(m3);
            return ''; // Return empty string.
        });
    // Handle special case of empty last value.
    if (/,\s*$/.test(text)) a.push('');
    return a;
};

var protocols = {
    icmp: 1,
    tcp:  6,
    udp:  17
};

function protocolLookup(text) {
    if (typeof text !== "string") {
        for (var i = 0; i < text.length; i++) {
            text[i] = protocols[text[i]] || +text[i];
        }
        return text;
    } else {
        return protocols[text] || +text;
    }
}

function termOrTerms(field, str) {
  var obj = {};
  if (str[0] === "[" && str[str.length -1] === "]") {
    obj = {terms: {}};
    obj.terms[field] = CSVtoArray(str);
  } else {
    obj = {term: {}};
    obj.term[field] = str;
  }
  return obj;
}
/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 16
break;
case 2:return 17
break;
case 3:return 14
break;
case 4:return 15
break;
case 5:if (!yy.emailSearch) throw "email searches disabled for user"; return 47
break;
case 6:if (!yy.emailSearch) throw "email searches disabled for user"; return 89
break;
case 7:if (!yy.emailSearch) throw "email searches disabled for user"; return 52
break;
case 8:if (!yy.emailSearch) throw "email searches disabled for user"; return 87
break;
case 9:if (!yy.emailSearch) throw "email searches disabled for user"; return 50
break;
case 10:if (!yy.emailSearch) throw "email searches disabled for user"; return 85
break;
case 11:if (!yy.emailSearch) throw "email searches disabled for user"; return 55
break;
case 12:if (!yy.emailSearch) throw "email searches disabled for user"; return 124
break;
case 13:return "http.hasheader.dst.cnt"
break;
case 14:return "http.hasheader.dst"
break;
case 15:return "http.hasheader"
break;
case 16:return "http.hasheader.src.cnt"
break;
case 17:return "http.hasheader.src"
break;
case 18:return "http.user-agent.cnt"
break;
case 19:return "http.user-agent"
break;
case 20:return "http.user-agent.cnt"
break;
case 21:return "http.user-agent"
break;
case 22:return 140
break;
case 23:return 119
break;
case 24:return 118
break;
case 25:return 121
break;
case 26:return 117
break;
case 27:return 122
break;
case 28:if (!yy.emailSearch) throw "email searches disabled for user"; return 120
break;
case 29:return 26
break;
case 30:return "cert.alt.cnt"
break;
case 31:return "cert.alt"
break;
case 32:return "cert.cnt"
break;
case 33:return "cert.issuer.cn"
break;
case 34:return "cert.issuer.on"
break;
case 35:return "cert.serial"
break;
case 36:return "cert.subject.cn"
break;
case 37:return "cert.subject.on"
break;
case 38:return 154
break;
case 39:return 104
break;
case 40:return 105
break;
case 41:return 107
break;
case 42:return 108
break;
case 43:return 109
break;
case 44:if (!yy.emailSearch) throw "email searches disabled for user"; return 106
break;
case 45:return 25
break;
case 46:if (!yy.emailSearch) throw "email searches disabled for user"; return 47
break;
case 47:if (!yy.emailSearch) throw "email searches disabled for user"; return 89
break;
case 48:if (!yy.emailSearch) throw "email searches disabled for user"; return 48
break;
case 49:if (!yy.emailSearch) throw "email searches disabled for user"; return 75
break;
case 50:if (!yy.emailSearch) throw "email searches disabled for user"; return 49
break;
case 51:if (!yy.emailSearch) throw "email searches disabled for user"; return 88
break;
case 52:if (!yy.emailSearch) throw "email searches disabled for user"; return 50
break;
case 53:if (!yy.emailSearch) throw "email searches disabled for user"; return 85
break;
case 54:if (!yy.emailSearch) throw "email searches disabled for user"; return 51
break;
case 55:if (!yy.emailSearch) throw "email searches disabled for user"; return 86
break;
case 56:if (!yy.emailSearch) throw "email searches disabled for user"; return 52
break;
case 57:if (!yy.emailSearch) throw "email searches disabled for user"; return 87
break;
case 58:if (!yy.emailSearch) throw "email searches disabled for user"; return 53
break;
case 59:if (!yy.emailSearch) throw "email searches disabled for user"; return 76
break;
case 60:if (!yy.emailSearch) throw "email searches disabled for user"; return 54
break;
case 61:if (!yy.emailSearch) throw "email searches disabled for user"; return 123
break;
case 62:if (!yy.emailSearch) throw "email searches disabled for user"; return 55
break;
case 63:if (!yy.emailSearch) throw "email searches disabled for user"; return 124
break;
case 64:if (!yy.emailSearch) throw "email searches disabled for user"; return 22
break;
case 65:if (!yy.emailSearch) throw "email searches disabled for user"; return 19
break;
case 66:return "file"
break;
case 67:return "http.hasheader.dst.cnt"
break;
case 68:return "http.hasheader.dst"
break;
case 69:return "http.hasheader"
break;
case 70:return "http.hasheader.src.cnt"
break;
case 71:return "http.hasheader.src"
break;
case 72:return "host.dns.cnt"
break;
case 73:return "host.dns"
break;
case 74:return "host.email.cnt"
break;
case 75:return "host.email"
break;
case 76:return "host.http.cnt"
break;
case 77:return "host.http"
break;
case 78:return "host.socks"
break;
case 79:return "host"
break;
case 80:return "http.md5.cnt"
break;
case 81:return "http.md5"
break;
case 82:return "http.uri.cnt"
break;
case 83:return "http.uri"
break;
case 84:return "http.version"
break;
case 85:return "http.version.src"
break;
case 86:return "http.version.src.cnt"
break;
case 87:return "http.version.dst"
break;
case 88:return "http.version.dst.cnt"
break;
case 89:return "http.user-agent.cnt"
break;
case 90:return "http.user-agent"
break;
case 91:return "host.http.cnt"
break;
case 92:return "host.http"
break;
case 93:return "HTTP_HEADER_CNT"
break;
case 94:return "HTTP_HEADER"
break;
case 95:return "icmp"
break;
case 96:return "icmp"
break;
case 97:return "id"
break;
case 98:return "ip.dns.cnt"
break;
case 99:return "ip.dns"
break;
case 100:return "ip.dst"
break;
case 101:return "ip"
break;
case 102:return "ip.socks"
break;
case 103:return "ip.src"
break;
case 104:return "ip.xff.cnt"
break;
case 105:return "ip.xff"
break;
case 106:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email.cnt"
break;
case 107:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email"
break;
case 108:return "irc.nick"
break;
case 109:return "irc.nick.cnt"
break;
case 110:return "irc.channel"
break;
case 111:return "irc.channel.cnt"
break;
case 112:return 69
break;
case 113:return 27
break;
case 114:return 28
break;
case 115:return 163
break;
case 116:return 29
break;
case 117:return 30
break;
case 118:return 164
break;
case 119:return 167
break;
case 120:return 110
break;
case 121:return 111
break;
case 122:return 113
break;
case 123:return 114
break;
case 124:return 115
break;
case 125:if (!yy.emailSearch) throw "email searches disabled for user"; return 112
break;
case 126:return "rootId"
break;
case 127:return "host.socks"
break;
case 128:return "ip.socks"
break;
case 129:return "port.socks"
break;
case 130:return "smb.domain.cnt"
break;
case 131:return "smb.domain"
break;
case 132:return "smb.fn.cnt"
break;
case 133:return "smb.fn"
break;
case 134:return "smb.host.cnt"
break;
case 135:return "smb.host"
break;
case 136:return "smb.os.cnt"
break;
case 137:return "smb.os"
break;
case 138:return "smb.share.cnt"
break;
case 139:return "smb.share"
break;
case 140:return "smb.user.cnt"
break;
case 141:return "smb.user"
break;
case 142:return "smb.ver.cnt"
break;
case 143:return "smb.ver"
break;
case 144:return "ssh.key.cnt"
break;
case 145:return "ssh.key"
break;
case 146:return "ssh.ver.cnt"
break;
case 147:return "ssh.ver"
break;
case 148:return 46
break;
case 149:return 171
break;
case 150:return "tcp"
break;
case 151:return "tcp"
break;
case 152:return "udp"
break;
case 153:return "udp"
break;
case 154:return "http.uri.cnt"
break;
case 155:return "http.uri"
break;
case 156:return "user.cnt"
break;
case 157:return "user"
break;
case 158:return 139
break;
case 159:return 165
break;
case 160:return 166
break;
case 161:return 174
break;
case 162:return 175
break;
case 163:return 8
break;
case 164:return 7
break;
case 165:return 11
break;
case 166:return 10
break;
case 167:return 185
break;
case 168:return 184
break;
case 169:return 184
break;
case 170:return 179
break;
case 171:return 179
break;
case 172:return 178
break;
case 173:return 178
break;
case 174:return 182
break;
case 175:return 183
break;
case 176:return 180
break;
case 177:return 5
break;
case 178:return 'INVALID'
break;
case 179:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:\d+\b)/,/^(?:\[\d+(,\s*\d+)*\s*\])/,/^(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?\b)/,/^(?:\[(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?(,\s*){0,1})+\])/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:http\.ua\.cnt)/,/^(?:http\.ua)/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.socks)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:asn\.email)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.socks)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:country\.email)/,/^(?:databytes)/,/^(?:email\.content-type\.cnt)/,/^(?:email\.content-type)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.message-id\.cnt)/,/^(?:email\.message-id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mime-version\.cnt)/,/^(?:email\.mime-version)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.x-mailer\.cnt)/,/^(?:email\.x-mailer)/,/^(?:email\.[^\s!=><.]*\.cnt)/,/^(?:email\.[^\s!=><.]*)/,/^(?:file)/,/^(?:http\.hasheader\.dst\.cnt)/,/^(?:http\.hasheader\.dst)/,/^(?:http\.hasheader)/,/^(?:http\.hasheader\.src\.cnt)/,/^(?:http\.hasheader\.src)/,/^(?:host\.dns\.cnt)/,/^(?:host\.dns)/,/^(?:host\.email\.cnt)/,/^(?:host\.email)/,/^(?:host\.http\.cnt)/,/^(?:host\.http)/,/^(?:host\.socks)/,/^(?:host)/,/^(?:http\.md5\.cnt)/,/^(?:http\.md5)/,/^(?:http\.uri\.cnt)/,/^(?:http\.uri)/,/^(?:http\.version)/,/^(?:http\.version\.src)/,/^(?:http\.version\.src\.cnt)/,/^(?:http\.version\.dst)/,/^(?:http\.version\.dst\.cnt)/,/^(?:http\.user-agent\.cnt)/,/^(?:http\.user-agent)/,/^(?:http\.host\.cnt)/,/^(?:http\.host)/,/^(?:http\.[^\s!=><.]*\.cnt)/,/^(?:http\.[^\s!=><.]*)/,/^(?:icmp)/,/^(?:"icmp")/,/^(?:id)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.socks)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:ip\.email\.cnt)/,/^(?:ip\.email)/,/^(?:irc\.nick)/,/^(?:irc\.nick\.cnt)/,/^(?:irc\.channel)/,/^(?:irc\.channel\.cnt)/,/^(?:node)/,/^(?:packets)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.socks)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rir)/,/^(?:rir\.dns)/,/^(?:rir\.dst)/,/^(?:rir\.socks)/,/^(?:rir\.src)/,/^(?:rir\.xff)/,/^(?:rir\.email)/,/^(?:rootId)/,/^(?:socks\.host)/,/^(?:socks\.ip)/,/^(?:socks\.port)/,/^(?:smb\.domain\.cnt)/,/^(?:smb\.domain)/,/^(?:smb\.fn\.cnt)/,/^(?:smb\.fn)/,/^(?:smb\.host\.cnt)/,/^(?:smb\.host)/,/^(?:smb\.os\.cnt)/,/^(?:smb\.os)/,/^(?:smb\.share\.cnt)/,/^(?:smb\.share)/,/^(?:smb\.user\.cnt)/,/^(?:smb\.user)/,/^(?:smb\.ver\.cnt)/,/^(?:smb\.ver)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:"tcp")/,/^(?:udp)/,/^(?:"udp")/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"\\]*(?:\\.[^"\\]*)*")/,/^(?:\/[^/\\]*(?:\\.[^/\\]*)*\/)/,/^(?:\[[0-9a-z,"]+\])/,/^(?:\[[^\]]+\])/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}