/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"IPMATCHLIST":15,"NUMBER":16,"NUMBERLIST":17,"HEADER":18,"EMAIL_HEADER":19,"HTTP_HEADER":20,"PLUGIN":21,"HEADER_CNT":22,"EMAIL_HEADER_CNT":23,"HTTP_HEADER_CNT":24,"PLUGIN_CNT":25,"RANGEFIELD":26,"databytes":27,"bytes":28,"packets":29,"port.dst":30,"port.socks":31,"port.src":32,"http.uri.cnt":33,"http.uri.key.cnt":34,"http.uri.path.cnt":35,"http.uri.value.cnt":36,"cert.cnt":37,"ip.dns.cnt":38,"ip.email.cnt":39,"ip.xff.cnt":40,"http.md5.cnt":41,"http.user-agent.cnt":42,"http.version.src.cnt":43,"http.version.dst.cnt":44,"user.cnt":45,"host.dns.cnt":46,"host.email.cnt":47,"host.http.cnt":48,"http.hasheader.src.cnt":49,"http.hasheader.dst.cnt":50,"tags.cnt":51,"email.content-type.cnt":52,"email.dst.cnt":53,"email.fn.cnt":54,"email.message-id.cnt":55,"email.md5.cnt":56,"email.mime-version.cnt":57,"email.src.cnt":58,"email.subject.cnt":59,"email.x-mailer.cnt":60,"cert.alt.cnt":61,"smb.domain.cnt":62,"smb.fn.cnt":63,"smb.host.cnt":64,"smb.os.cnt":65,"smb.share.cnt":66,"smb.user.cnt":67,"smb.ver.cnt":68,"ssh.key.cnt":69,"ssh.ver.cnt":70,"irc.nick.cnt":71,"irc.channel.cnt":72,"LOTERMFIELD":73,"node":74,"host.dns":75,"host.socks":76,"host.email":77,"host.http":78,"user":79,"email.dst":80,"email.src":81,"cert.subject.cn":82,"cert.issuer.cn":83,"cert.serial":84,"cert.alt":85,"ssh.ver":86,"payload8.dst":87,"payload8.src":88,"TERMFIELD":89,"id":90,"ssh.key":91,"email.message-id":92,"email.md5":93,"email.mime-version":94,"email.fn":95,"email.content-type":96,"http.md5":97,"http.uri.key":98,"http.uri.path":99,"http.uri.value":100,"http.version.src":101,"http.version.dst":102,"irc.nick":103,"irc.channel":104,"rootId":105,"smb.domain":106,"smb.fn":107,"smb.host":108,"smb.os":109,"smb.share":110,"smb.user":111,"socks.user":112,"smb.ver":113,"UPTERMFIELD":114,"country.dns":115,"country.dst":116,"country.email":117,"country.socks":118,"country.src":119,"country.xff":120,"rir.dns":121,"rir.dst":122,"rir.email":123,"rir.socks":124,"rir.src":125,"rir.xff":126,"LOTEXTFIELD":127,"asn.src":128,"asn.dst":129,"asn.dns":130,"asn.email":131,"asn.socks":132,"asn.xff":133,"email.subject":134,"email.x-mailer":135,"cert.subject.on":136,"cert.issuer.on":137,"TEXTFIELD":138,"http.uri":139,"http.user-agent":140,"IPFIELD":141,"ip":142,"ip.src":143,"ip.dst":144,"ip.xff":145,"ip.dns":146,"ip.email":147,"ip.socks":148,"STR":149,"ID":150,"asn":151,"dns":152,"dst":153,"email":154,"src":155,"xff":156,"cert":157,"alt":158,"cnt":159,"issuer":160,"cn":161,"on":162,"serial":163,"subject":164,"country":165,"ua":166,"header":167,"host":168,"http":169,"md5":170,"uri":171,"icmp":172,"socks":173,"port":174,"protocol":175,"rir":176,"ssh":177,"key":178,"ver":179,"tags":180,"tcp":181,"udp":182,"QUOTEDSTR":183,"REGEXSTR":184,"LOWERLIST":185,"ANYLIST":186,"PROTOCOLNUMBER":187,"PROTOCOLLIST":188,"&&":189,"||":190,"!":191,"-":192,"(":193,")":194,"==":195,"!=":196,"EXISTS":197,"file":198,"http.hasheader":199,"http.hasheader.src":200,"http.hasheader.dst":201,"http.version":202,"payload8":203,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"IPMATCHLIST",16:"NUMBER",17:"NUMBERLIST",19:"EMAIL_HEADER",20:"HTTP_HEADER",21:"PLUGIN",23:"EMAIL_HEADER_CNT",24:"HTTP_HEADER_CNT",25:"PLUGIN_CNT",27:"databytes",28:"bytes",29:"packets",30:"port.dst",31:"port.socks",32:"port.src",33:"http.uri.cnt",34:"http.uri.key.cnt",35:"http.uri.path.cnt",36:"http.uri.value.cnt",37:"cert.cnt",38:"ip.dns.cnt",39:"ip.email.cnt",40:"ip.xff.cnt",41:"http.md5.cnt",42:"http.user-agent.cnt",43:"http.version.src.cnt",44:"http.version.dst.cnt",45:"user.cnt",46:"host.dns.cnt",47:"host.email.cnt",48:"host.http.cnt",49:"http.hasheader.src.cnt",50:"http.hasheader.dst.cnt",51:"tags.cnt",52:"email.content-type.cnt",53:"email.dst.cnt",54:"email.fn.cnt",55:"email.message-id.cnt",56:"email.md5.cnt",57:"email.mime-version.cnt",58:"email.src.cnt",59:"email.subject.cnt",60:"email.x-mailer.cnt",61:"cert.alt.cnt",62:"smb.domain.cnt",63:"smb.fn.cnt",64:"smb.host.cnt",65:"smb.os.cnt",66:"smb.share.cnt",67:"smb.user.cnt",68:"smb.ver.cnt",69:"ssh.key.cnt",70:"ssh.ver.cnt",71:"irc.nick.cnt",72:"irc.channel.cnt",74:"node",75:"host.dns",76:"host.socks",77:"host.email",78:"host.http",79:"user",80:"email.dst",81:"email.src",82:"cert.subject.cn",83:"cert.issuer.cn",84:"cert.serial",85:"cert.alt",86:"ssh.ver",87:"payload8.dst",88:"payload8.src",90:"id",91:"ssh.key",92:"email.message-id",93:"email.md5",94:"email.mime-version",95:"email.fn",96:"email.content-type",97:"http.md5",98:"http.uri.key",99:"http.uri.path",100:"http.uri.value",101:"http.version.src",102:"http.version.dst",103:"irc.nick",104:"irc.channel",105:"rootId",106:"smb.domain",107:"smb.fn",108:"smb.host",109:"smb.os",110:"smb.share",111:"smb.user",112:"socks.user",113:"smb.ver",115:"country.dns",116:"country.dst",117:"country.email",118:"country.socks",119:"country.src",120:"country.xff",121:"rir.dns",122:"rir.dst",123:"rir.email",124:"rir.socks",125:"rir.src",126:"rir.xff",128:"asn.src",129:"asn.dst",130:"asn.dns",131:"asn.email",132:"asn.socks",133:"asn.xff",134:"email.subject",135:"email.x-mailer",136:"cert.subject.on",137:"cert.issuer.on",139:"http.uri",140:"http.user-agent",142:"ip",143:"ip.src",144:"ip.dst",145:"ip.xff",146:"ip.dns",147:"ip.email",148:"ip.socks",150:"ID",151:"asn",152:"dns",153:"dst",154:"email",155:"src",156:"xff",157:"cert",158:"alt",159:"cnt",160:"issuer",161:"cn",162:"on",163:"serial",164:"subject",165:"country",166:"ua",167:"header",168:"host",169:"http",170:"md5",171:"uri",172:"icmp",173:"socks",174:"port",175:"protocol",176:"rir",177:"ssh",178:"key",179:"ver",180:"tags",181:"tcp",182:"udp",183:"QUOTEDSTR",184:"REGEXSTR",185:"LOWERLIST",186:"ANYLIST",189:"&&",190:"||",191:"!",192:"-",193:"(",194:")",195:"==",196:"!=",197:"EXISTS",198:"file",199:"http.hasheader",200:"http.hasheader.src",201:"http.hasheader.dst",202:"http.version",203:"payload8"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[13,1],[13,1],[18,1],[18,1],[18,1],[22,1],[22,1],[22,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[114,1],[114,1],[114,1],[114,1],[114,1],[114,1],[114,1],[114,1],[114,1],[114,1],[114,1],[114,1],[127,1],[127,1],[127,1],[127,1],[127,1],[127,1],[127,1],[127,1],[127,1],[127,1],[138,1],[138,1],[141,1],[141,1],[141,1],[141,1],[141,1],[141,1],[141,1],[149,1],[149,1],[149,2],[149,2],[149,2],[149,2],[149,2],[149,1],[149,2],[149,3],[149,2],[149,3],[149,3],[149,2],[149,3],[149,3],[149,1],[149,2],[149,2],[149,2],[149,2],[149,2],[149,2],[149,3],[149,2],[149,3],[149,2],[149,3],[149,2],[149,3],[149,1],[149,2],[149,3],[149,2],[149,3],[149,1],[149,2],[149,2],[149,3],[149,2],[149,3],[149,2],[149,3],[149,1],[149,1],[149,2],[149,3],[149,2],[149,2],[149,3],[149,2],[149,2],[149,2],[149,3],[149,1],[149,1],[149,1],[149,2],[149,2],[149,2],[149,1],[149,1],[149,2],[149,2],[149,2],[149,2],[149,2],[149,2],[149,2],[149,3],[149,2],[149,3],[149,1],[149,2],[149,1],[149,1],[149,2],[149,1],[149,1],[149,2],[149,1],[149,1],[149,1],[149,1],[149,1],[149,1],[149,1],[149,1],[187,1],[187,1],[187,1],[187,1],[188,1],[188,1],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 18:this.$ = 'db'
break;
case 19:this.$ = 'by'
break;
case 20:this.$ = 'pa'
break;
case 21:this.$ = 'p2'
break;
case 22:this.$ = 'sockspo'
break;
case 23:this.$ = 'p1'
break;
case 24:this.$ = 'uscnt'
break;
case 25:this.$ = 'hkeycnt'
break;
case 26:this.$ = 'hpathcnt'
break;
case 27:this.$ = 'hvalcnt'
break;
case 28:this.$ = 'tlscnt'
break;
case 29:this.$ = 'dnsipcnt'
break;
case 30:this.$ = 'eipcnt'
break;
case 31:this.$ = 'xffscnt'
break;
case 32:this.$ = 'hmd5cnt'
break;
case 33:this.$ = 'uacnt'
break;
case 34:this.$ = 'hsvercnt'
break;
case 35:this.$ = 'hdvercnt'
break;
case 36:this.$ = 'usercnt'
break;
case 37:this.$ = 'dnshocnt'
break;
case 38:this.$ = 'ehocnt'
break;
case 39:this.$ = 'hocnt'
break;
case 40:this.$ = 'hh1cnt'
break;
case 41:this.$ = 'hh2cnt'
break;
case 42:this.$ = 'tacnt'
break;
case 43:this.$ = 'ectcnt'
break;
case 44:this.$ = 'edstcnt'
break;
case 45:this.$ = 'efncnt'
break;
case 46:this.$ = 'eidcnt'
break;
case 47:this.$ = 'emd5cnt'
break;
case 48:this.$ = 'emvcnt'
break;
case 49:this.$ = 'esrccnt'
break;
case 50:this.$ = 'esubcnt'
break;
case 51:this.$ = 'euacnt'
break;
case 52:this.$ = 'tls.altcnt'
break;
case 53:this.$ = 'smbdmcnt'
break;
case 54:this.$ = 'smbfncnt'
break;
case 55:this.$ = 'smbhocnt'
break;
case 56:this.$ = 'smboscnt'
break;
case 57:this.$ = 'smbsharecnt'
break;
case 58:this.$ = 'smbusercnt'
break;
case 59:this.$ = 'smbvercnt'
break;
case 60:this.$ = 'sshkeycnt'
break;
case 61:this.$ = 'sshvercnt'
break;
case 62:this.$ = 'ircnckcnt'
break;
case 63:this.$ = 'ircchcnt'
break;
case 64:this.$ = 'no'
break;
case 65:this.$ = 'dnsho'
break;
case 66:this.$ = 'socksho'
break;
case 67:this.$ = 'eho'
break;
case 68:this.$ = 'ho'
break;
case 69:this.$ = 'user'
break;
case 70:this.$ = 'edst'
break;
case 71:this.$ = 'esrc'
break;
case 72:this.$ = 'tls.sCn'
break;
case 73:this.$ = 'tls.iCn'
break;
case 74:this.$ = 'tls.sn'
break;
case 75:this.$ = 'tls.alt'
break;
case 76:this.$ = 'sshver'
break;
case 77:this.$ = 'fb2'
break;
case 78:this.$ = 'fb1'
break;
case 79:this.$ = '_id'
break;
case 80:this.$ = 'sshkey'
break;
case 81:this.$ = 'eid'
break;
case 82:this.$ = 'emd5'
break;
case 83:this.$ = 'emv'
break;
case 84:this.$ = 'efn'
break;
case 85:this.$ = 'ect'
break;
case 86:this.$ = 'hmd5'
break;
case 87:this.$ = 'hkey'
break;
case 88:this.$ = 'hpath'
break;
case 89:this.$ = 'hval'
break;
case 90:this.$ = 'hsver'
break;
case 91:this.$ = 'hdver'
break;
case 92:this.$ = 'ircnck'
break;
case 93:this.$ = 'ircch'
break;
case 94:this.$ = 'ro'
break;
case 95:this.$ = 'smbdm'
break;
case 96:this.$ = 'smbfn'
break;
case 97:this.$ = 'smbho'
break;
case 98:this.$ = 'smbos'
break;
case 99:this.$ = 'smbsh'
break;
case 100:this.$ = 'smbuser'
break;
case 101:this.$ = 'socksuser'
break;
case 102:this.$ = 'smbver'
break;
case 103:this.$ = 'gdnsip'
break;
case 104:this.$ = 'g2'
break;
case 105:this.$ = 'geip'
break;
case 106:this.$ = 'gsocksip'
break;
case 107:this.$ = 'g1'
break;
case 108:this.$ = 'gxff'
break;
case 109:this.$ = 'rirdnsip'
break;
case 110:this.$ = 'rir2'
break;
case 111:this.$ = 'rireip'
break;
case 112:this.$ = 'rirsocksip'
break;
case 113:this.$ = 'rir1'
break;
case 114:this.$ = 'rirxff'
break;
case 115:this.$ = 'as1'
break;
case 116:this.$ = 'as2'
break;
case 117:this.$ = 'asdnsip'
break;
case 118:this.$ = 'aseip'
break;
case 119:this.$ = 'assocksip'
break;
case 120:this.$ = 'asxff'
break;
case 121:this.$ = 'esub'
break;
case 122:this.$ = 'eua'
break;
case 123:this.$ = 'tls.sOn'
break;
case 124:this.$ = 'tls.iOn'
break;
case 125:this.$ = 'us'
break;
case 126:this.$ = 'ua'
break;
case 127:this.$ = "all"
break;
case 128:this.$ = "a1"
break;
case 129:this.$ = "a2"
break;
case 130:this.$ = "xff"
break;
case 131:this.$ = "dnsip"
break;
case 132:this.$ = "eip"
break;
case 133:this.$ = "socksip"
break;
case 228:this.$ = {bool: {must: [$$[$0-2], $$[$0]]}};
break;
case 229:this.$ = {bool: {should: [$$[$0-2], $$[$0]]}};
break;
case 230:this.$ = {not: $$[$0]};
break;
case 231:this.$ = -$$[$0];
break;
case 232:this.$ = $$[$0-1];
break;
case 233:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 234:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 235:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 236:this.$ = {terms: {}};
         this.$.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 237:this.$ = {not: {terms: {}}};
         this.$.not.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 238:this.$ = {term: {pr: protocolLookup($$[$0])}};
break;
case 239:this.$ = {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}};
break;
case 240:this.$ = {not: {term: {pr: protocolLookup($$[$0])}}};
break;
case 241:this.$ = {not: {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}}};
break;
case 242:this.$ = {bool: {should: [{range: {p1: {}}}, {range: {p2: {}}}]}};
         this.$.bool.should[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.bool.should[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 243:this.$ = {not: str2Query(yy, $$[$0-2], "term", $$[$0].toLowerCase())};
break;
case 244:this.$ = str2Query(yy, $$[$0-2], "term", $$[$0].toLowerCase());
break;
case 245:this.$ = {exists: {field: $$[$0-2]}};
break;
case 246:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 247:this.$ = {not: str2Query(yy, $$[$0-2], "term", $$[$0])};
break;
case 248:this.$ = str2Query(yy, $$[$0-2], "term", $$[$0]);
break;
case 249:this.$ = {exists: {field: $$[$0-2]}};
break;
case 250:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 251:this.$ = {not: str2Query(yy, $$[$0-2], "term", $$[$0].toUpperCase())};
break;
case 252:this.$ = str2Query(yy, $$[$0-2], "term", $$[$0].toUpperCase());
break;
case 253:this.$ = {exists: {field: $$[$0-2]}};
break;
case 254:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 255:this.$ = {not: str2Query(yy, $$[$0-2], "text", $$[$0].toLowerCase())};
break;
case 256:this.$ = str2Query(yy, $$[$0-2], "text", $$[$0].toLowerCase());
break;
case 257:this.$ = {exists: {field: $$[$0-2]}};
break;
case 258:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 259:this.$ = {not: str2Query(yy, $$[$0-2], "text", $$[$0])};
break;
case 260:this.$ = str2Query(yy, $$[$0-2], "text", $$[$0]);
break;
case 261:this.$ = {exists: {field: $$[$0-2]}};
break;
case 262:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 263:this.$ = str2Query(yy, str2Header(yy, $$[$0-2]), "text", $$[$0]);
break;
case 264:this.$ = {not: str2Query(yy, str2Header(yy, $$[$0-2]), "text", $$[$0])};
break;
case 265:this.$ = {exists: {field: str2Header(yy, $$[$0-2])}};
break;
case 266:this.$ = {not: {exists: {field: str2Header(yy, $$[$0-2])}}};
break;
case 267:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 268:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 269: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 270:
        this.$ = {terms: {}};
        this.$.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 271: this.$ = {not: {terms: {}}};
          this.$.not.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 272:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 273:this.$ = {bool: {should: [
                                {term: {p1: $$[$0]}},
                                {term: {p2: $$[$0]}},
                                {term: {sockspo: $$[$0]}}
                              ]}};
break;
case 274:this.$ = {bool: {should: [
                                {terms: {p1: CSVtoArray($$[$0])}},
                                {terms: {p2: CSVtoArray($$[$0])}},
                                {terms: {sockspo: CSVtoArray($$[$0])}}
                              ]}};
break;
case 275:this.$ = {bool: {must_not: [
                                  {term: {p1: $$[$0]}}, 
                                  {term: {p2: $$[$0]}},
                                  {term: {sockspo: $$[$0]}}
                                ]}};
break;
case 276:this.$ = {bool: {must_not: [
                                  {terms: {p1: CSVtoArray($$[$0])}}, 
                                  {terms: {p2: CSVtoArray($$[$0])}},
                                  {terms: {sockspo: CSVtoArray($$[$0])}}
                                ]}};
break;
case 277:this.$ = parseIpPort(yy, $$[$0],$$[$0-2]);
break;
case 278:this.$ = {not: parseIpPort(yy, $$[$0],$$[$0-2])};
break;
case 279: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("ta", tag);
        
break;
case 280: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("ta", tag)};
        
break;
case 281: var file = stripQuotes($$[$0]);
          this.$ = {fileand: file};
        
break;
case 282: var file = stripQuotes($$[$0]);
          this.$ = {not: {fileand: file}};
        
break;
case 283: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {should: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 284: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh1", tag);
        
break;
case 285: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh2", tag);
        
break;
case 286: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {must_not: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 287: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh1", tag)};
        
break;
case 288: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh2", tag)};
        
break;
case 289:
          this.$ = [str2Query(yy, "hsver", "term", $$[$0]),
                str2Query(yy, "hdver", "term", $$[$0])
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 290:
          this.$ = [str2Query(yy, "hsver", "term", $$[$0]),
                str2Query(yy, "hdver", "term", $$[$0])
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 291: var str = $$[$0].toLowerCase();
          this.$ = [str2Query(yy, "fb1", "term", str),
                str2Query(yy, "fb2", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 292: var str = $$[$0].toLowerCase();
          this.$ = [str2Query(yy, "fb1", "term", str),
                str2Query(yy, "fb2", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 293: var str = $$[$0].toUpperCase();
          this.$ = str2IpListQuery(yy, "geo", "term", str);
          this.$ = {bool: {should: this.$}};
        
break;
case 294: var str = $$[$0].toUpperCase();
          this.$ = str2IpListQuery(yy, "geo", "term", str);
          this.$ = {bool: {must_not: this.$}};
        
break;
case 295: var str = $$[$0].toUpperCase();
          this.$ = str2IpListQuery(yy, "rir", "term", str);
          this.$ = {bool: {should: this.$}};
        
break;
case 296: var str = $$[$0].toUpperCase();
          this.$ = str2IpListQuery(yy, "rir", "term", str);
          this.$ = {bool: {must_not: this.$}};
        
break;
case 297: var str = $$[$0].toLowerCase();
          this.$ = str2IpListQuery(yy, "asn", "text", str);
          this.$ = {bool: {should: this.$}};
        
break;
case 298: var str = $$[$0].toLowerCase();
          this.$ = str2IpListQuery(yy, "asn", "text", str);
          this.$ = {bool: {must_not: this.$}};
        
break;
case 299: var str = $$[$0].toLowerCase();

          this.$ = [str2Query(yy, "ho", "term", str),
                str2Query(yy, "dnsho", "term", str),
                str2Query(yy, "eho", "term", str),
                str2Query(yy, "socksho", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 300: var str = $$[$0].toLowerCase();

          this.$ = [str2Query(yy, "ho", "term", str),
                str2Query(yy, "dnsho", "term", str),
                str2Query(yy, "eho", "term", str),
                str2Query(yy, "socksho", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
}
},
table: [{3:1,4:2,18:14,19:[1,137],20:[1,138],21:[1,139],22:15,23:[1,140],24:[1,141],25:[1,142],26:6,27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:[1,68],68:[1,69],69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:9,74:[1,74],75:[1,75],76:[1,76],77:[1,77],78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:10,90:[1,89],91:[1,90],92:[1,91],93:[1,92],94:[1,93],95:[1,94],96:[1,95],97:[1,96],98:[1,97],99:[1,98],100:[1,99],101:[1,100],102:[1,101],103:[1,102],104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:11,115:[1,113],116:[1,114],117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:12,128:[1,125],129:[1,126],130:[1,127],131:[1,128],132:[1,129],133:[1,130],134:[1,131],135:[1,132],136:[1,133],137:[1,134],138:13,139:[1,135],140:[1,136],141:16,142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],147:[1,148],148:[1,149],151:[1,26],165:[1,24],168:[1,27],174:[1,8],175:[1,7],176:[1,25],180:[1,17],191:[1,3],192:[1,4],193:[1,5],198:[1,18],199:[1,19],200:[1,20],201:[1,21],202:[1,22],203:[1,23]},{1:[3]},{5:[1,150],189:[1,151],190:[1,152]},{4:153,18:14,19:[1,137],20:[1,138],21:[1,139],22:15,23:[1,140],24:[1,141],25:[1,142],26:6,27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:[1,68],68:[1,69],69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:9,74:[1,74],75:[1,75],76:[1,76],77:[1,77],78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:10,90:[1,89],91:[1,90],92:[1,91],93:[1,92],94:[1,93],95:[1,94],96:[1,95],97:[1,96],98:[1,97],99:[1,98],100:[1,99],101:[1,100],102:[1,101],103:[1,102],104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:11,115:[1,113],116:[1,114],117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:12,128:[1,125],129:[1,126],130:[1,127],131:[1,128],132:[1,129],133:[1,130],134:[1,131],135:[1,132],136:[1,133],137:[1,134],138:13,139:[1,135],140:[1,136],141:16,142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],147:[1,148],148:[1,149],151:[1,26],165:[1,24],168:[1,27],174:[1,8],175:[1,7],176:[1,25],180:[1,17],191:[1,3],192:[1,4],193:[1,5],198:[1,18],199:[1,19],200:[1,20],201:[1,21],202:[1,22],203:[1,23]},{4:154,18:14,19:[1,137],20:[1,138],21:[1,139],22:15,23:[1,140],24:[1,141],25:[1,142],26:6,27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:[1,68],68:[1,69],69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:9,74:[1,74],75:[1,75],76:[1,76],77:[1,77],78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:10,90:[1,89],91:[1,90],92:[1,91],93:[1,92],94:[1,93],95:[1,94],96:[1,95],97:[1,96],98:[1,97],99:[1,98],100:[1,99],101:[1,100],102:[1,101],103:[1,102],104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:11,115:[1,113],116:[1,114],117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:12,128:[1,125],129:[1,126],130:[1,127],131:[1,128],132:[1,129],133:[1,130],134:[1,131],135:[1,132],136:[1,133],137:[1,134],138:13,139:[1,135],140:[1,136],141:16,142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],147:[1,148],148:[1,149],151:[1,26],165:[1,24],168:[1,27],174:[1,8],175:[1,7],176:[1,25],180:[1,17],191:[1,3],192:[1,4],193:[1,5],198:[1,18],199:[1,19],200:[1,20],201:[1,21],202:[1,22],203:[1,23]},{4:155,18:14,19:[1,137],20:[1,138],21:[1,139],22:15,23:[1,140],24:[1,141],25:[1,142],26:6,27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:[1,68],68:[1,69],69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:9,74:[1,74],75:[1,75],76:[1,76],77:[1,77],78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:10,90:[1,89],91:[1,90],92:[1,91],93:[1,92],94:[1,93],95:[1,94],96:[1,95],97:[1,96],98:[1,97],99:[1,98],100:[1,99],101:[1,100],102:[1,101],103:[1,102],104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:11,115:[1,113],116:[1,114],117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:12,128:[1,125],129:[1,126],130:[1,127],131:[1,128],132:[1,129],133:[1,130],134:[1,131],135:[1,132],136:[1,133],137:[1,134],138:13,139:[1,135],140:[1,136],141:16,142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],147:[1,148],148:[1,149],151:[1,26],165:[1,24],168:[1,27],174:[1,8],175:[1,7],176:[1,25],180:[1,17],191:[1,3],192:[1,4],193:[1,5],198:[1,18],199:[1,19],200:[1,20],201:[1,21],202:[1,22],203:[1,23]},{6:159,7:[1,161],8:[1,162],9:160,10:[1,163],11:[1,164],12:156,195:[1,157],196:[1,158]},{195:[1,165],196:[1,166]},{6:159,7:[1,161],8:[1,162],9:160,10:[1,163],11:[1,164],12:167,195:[1,168],196:[1,169]},{195:[1,171],196:[1,170]},{195:[1,173],196:[1,172]},{195:[1,175],196:[1,174]},{195:[1,177],196:[1,176]},{195:[1,179],196:[1,178]},{6:159,7:[1,161],8:[1,162],9:160,10:[1,163],11:[1,164],12:182,195:[1,180],196:[1,181]},{6:159,7:[1,161],8:[1,162],9:160,10:[1,163],11:[1,164],12:185,195:[1,183],196:[1,184]},{195:[1,186],196:[1,187]},{195:[1,188],196:[1,189]},{195:[1,190],196:[1,191]},{195:[1,192],196:[1,193]},{195:[1,194],196:[1,195]},{195:[1,196],196:[1,197]},{195:[1,198],196:[1,199]},{195:[1,200],196:[1,201]},{195:[1,202],196:[1,203]},{195:[1,204],196:[1,205]},{195:[1,206],196:[1,207]},{195:[1,209],196:[1,208]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],195:[2,18],196:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],195:[2,19],196:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],195:[2,20],196:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],195:[2,21],196:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],195:[2,22],196:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],195:[2,23],196:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],195:[2,24],196:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],195:[2,25],196:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],195:[2,26],196:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],195:[2,27],196:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],195:[2,28],196:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],195:[2,29],196:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],195:[2,30],196:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],195:[2,31],196:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],195:[2,32],196:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],195:[2,33],196:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],195:[2,34],196:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],195:[2,35],196:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],195:[2,36],196:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],195:[2,37],196:[2,37]},{7:[2,38],8:[2,38],10:[2,38],11:[2,38],195:[2,38],196:[2,38]},{7:[2,39],8:[2,39],10:[2,39],11:[2,39],195:[2,39],196:[2,39]},{7:[2,40],8:[2,40],10:[2,40],11:[2,40],195:[2,40],196:[2,40]},{7:[2,41],8:[2,41],10:[2,41],11:[2,41],195:[2,41],196:[2,41]},{7:[2,42],8:[2,42],10:[2,42],11:[2,42],195:[2,42],196:[2,42]},{7:[2,43],8:[2,43],10:[2,43],11:[2,43],195:[2,43],196:[2,43]},{7:[2,44],8:[2,44],10:[2,44],11:[2,44],195:[2,44],196:[2,44]},{7:[2,45],8:[2,45],10:[2,45],11:[2,45],195:[2,45],196:[2,45]},{7:[2,46],8:[2,46],10:[2,46],11:[2,46],195:[2,46],196:[2,46]},{7:[2,47],8:[2,47],10:[2,47],11:[2,47],195:[2,47],196:[2,47]},{7:[2,48],8:[2,48],10:[2,48],11:[2,48],195:[2,48],196:[2,48]},{7:[2,49],8:[2,49],10:[2,49],11:[2,49],195:[2,49],196:[2,49]},{7:[2,50],8:[2,50],10:[2,50],11:[2,50],195:[2,50],196:[2,50]},{7:[2,51],8:[2,51],10:[2,51],11:[2,51],195:[2,51],196:[2,51]},{7:[2,52],8:[2,52],10:[2,52],11:[2,52],195:[2,52],196:[2,52]},{7:[2,53],8:[2,53],10:[2,53],11:[2,53],195:[2,53],196:[2,53]},{7:[2,54],8:[2,54],10:[2,54],11:[2,54],195:[2,54],196:[2,54]},{7:[2,55],8:[2,55],10:[2,55],11:[2,55],195:[2,55],196:[2,55]},{7:[2,56],8:[2,56],10:[2,56],11:[2,56],195:[2,56],196:[2,56]},{7:[2,57],8:[2,57],10:[2,57],11:[2,57],195:[2,57],196:[2,57]},{7:[2,58],8:[2,58],10:[2,58],11:[2,58],195:[2,58],196:[2,58]},{7:[2,59],8:[2,59],10:[2,59],11:[2,59],195:[2,59],196:[2,59]},{7:[2,60],8:[2,60],10:[2,60],11:[2,60],195:[2,60],196:[2,60]},{7:[2,61],8:[2,61],10:[2,61],11:[2,61],195:[2,61],196:[2,61]},{7:[2,62],8:[2,62],10:[2,62],11:[2,62],195:[2,62],196:[2,62]},{7:[2,63],8:[2,63],10:[2,63],11:[2,63],195:[2,63],196:[2,63]},{195:[2,64],196:[2,64]},{195:[2,65],196:[2,65]},{195:[2,66],196:[2,66]},{195:[2,67],196:[2,67]},{195:[2,68],196:[2,68]},{195:[2,69],196:[2,69]},{195:[2,70],196:[2,70]},{195:[2,71],196:[2,71]},{195:[2,72],196:[2,72]},{195:[2,73],196:[2,73]},{195:[2,74],196:[2,74]},{195:[2,75],196:[2,75]},{195:[2,76],196:[2,76]},{195:[2,77],196:[2,77]},{195:[2,78],196:[2,78]},{195:[2,79],196:[2,79]},{195:[2,80],196:[2,80]},{195:[2,81],196:[2,81]},{195:[2,82],196:[2,82]},{195:[2,83],196:[2,83]},{195:[2,84],196:[2,84]},{195:[2,85],196:[2,85]},{195:[2,86],196:[2,86]},{195:[2,87],196:[2,87]},{195:[2,88],196:[2,88]},{195:[2,89],196:[2,89]},{195:[2,90],196:[2,90]},{195:[2,91],196:[2,91]},{195:[2,92],196:[2,92]},{195:[2,93],196:[2,93]},{195:[2,94],196:[2,94]},{195:[2,95],196:[2,95]},{195:[2,96],196:[2,96]},{195:[2,97],196:[2,97]},{195:[2,98],196:[2,98]},{195:[2,99],196:[2,99]},{195:[2,100],196:[2,100]},{195:[2,101],196:[2,101]},{195:[2,102],196:[2,102]},{195:[2,103],196:[2,103]},{195:[2,104],196:[2,104]},{195:[2,105],196:[2,105]},{195:[2,106],196:[2,106]},{195:[2,107],196:[2,107]},{195:[2,108],196:[2,108]},{195:[2,109],196:[2,109]},{195:[2,110],196:[2,110]},{195:[2,111],196:[2,111]},{195:[2,112],196:[2,112]},{195:[2,113],196:[2,113]},{195:[2,114],196:[2,114]},{195:[2,115],196:[2,115]},{195:[2,116],196:[2,116]},{195:[2,117],196:[2,117]},{195:[2,118],196:[2,118]},{195:[2,119],196:[2,119]},{195:[2,120],196:[2,120]},{195:[2,121],196:[2,121]},{195:[2,122],196:[2,122]},{195:[2,123],196:[2,123]},{195:[2,124],196:[2,124]},{195:[2,125],196:[2,125]},{195:[2,126],196:[2,126]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],195:[2,12],196:[2,12]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],195:[2,13],196:[2,13]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],195:[2,14],196:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],195:[2,15],196:[2,15]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],195:[2,16],196:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],195:[2,17],196:[2,17]},{195:[2,127],196:[2,127]},{195:[2,128],196:[2,128]},{195:[2,129],196:[2,129]},{195:[2,130],196:[2,130]},{195:[2,131],196:[2,131]},{195:[2,132],196:[2,132]},{195:[2,133],196:[2,133]},{1:[2,1]},{4:210,18:14,19:[1,137],20:[1,138],21:[1,139],22:15,23:[1,140],24:[1,141],25:[1,142],26:6,27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:[1,68],68:[1,69],69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:9,74:[1,74],75:[1,75],76:[1,76],77:[1,77],78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:10,90:[1,89],91:[1,90],92:[1,91],93:[1,92],94:[1,93],95:[1,94],96:[1,95],97:[1,96],98:[1,97],99:[1,98],100:[1,99],101:[1,100],102:[1,101],103:[1,102],104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:11,115:[1,113],116:[1,114],117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:12,128:[1,125],129:[1,126],130:[1,127],131:[1,128],132:[1,129],133:[1,130],134:[1,131],135:[1,132],136:[1,133],137:[1,134],138:13,139:[1,135],140:[1,136],141:16,142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],147:[1,148],148:[1,149],151:[1,26],165:[1,24],168:[1,27],174:[1,8],175:[1,7],176:[1,25],180:[1,17],191:[1,3],192:[1,4],193:[1,5],198:[1,18],199:[1,19],200:[1,20],201:[1,21],202:[1,22],203:[1,23]},{4:211,18:14,19:[1,137],20:[1,138],21:[1,139],22:15,23:[1,140],24:[1,141],25:[1,142],26:6,27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:[1,61],61:[1,62],62:[1,63],63:[1,64],64:[1,65],65:[1,66],66:[1,67],67:[1,68],68:[1,69],69:[1,70],70:[1,71],71:[1,72],72:[1,73],73:9,74:[1,74],75:[1,75],76:[1,76],77:[1,77],78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:10,90:[1,89],91:[1,90],92:[1,91],93:[1,92],94:[1,93],95:[1,94],96:[1,95],97:[1,96],98:[1,97],99:[1,98],100:[1,99],101:[1,100],102:[1,101],103:[1,102],104:[1,103],105:[1,104],106:[1,105],107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],113:[1,112],114:11,115:[1,113],116:[1,114],117:[1,115],118:[1,116],119:[1,117],120:[1,118],121:[1,119],122:[1,120],123:[1,121],124:[1,122],125:[1,123],126:[1,124],127:12,128:[1,125],129:[1,126],130:[1,127],131:[1,128],132:[1,129],133:[1,130],134:[1,131],135:[1,132],136:[1,133],137:[1,134],138:13,139:[1,135],140:[1,136],141:16,142:[1,143],143:[1,144],144:[1,145],145:[1,146],146:[1,147],147:[1,148],148:[1,149],151:[1,26],165:[1,24],168:[1,27],174:[1,8],175:[1,7],176:[1,25],180:[1,17],191:[1,3],192:[1,4],193:[1,5],198:[1,18],199:[1,19],200:[1,20],201:[1,21],202:[1,22],203:[1,23]},{5:[2,230],189:[2,230],190:[2,230],194:[2,230]},{5:[2,231],189:[2,231],190:[2,231],194:[2,231]},{189:[1,151],190:[1,152],194:[1,212]},{16:[1,213]},{16:[1,214],17:[1,215]},{16:[1,216],17:[1,217]},{16:[2,6]},{16:[2,7]},{16:[2,2]},{16:[2,3]},{16:[2,4]},{16:[2,5]},{16:[1,220],17:[1,224],172:[1,221],181:[1,222],182:[1,223],185:[1,225],187:218,188:219},{16:[1,220],17:[1,224],172:[1,221],181:[1,222],182:[1,223],185:[1,225],187:226,188:227},{16:[1,228]},{16:[1,229],17:[1,230]},{16:[1,231],17:[1,232]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:233,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,234]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:265,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,266]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:267,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,268]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:269,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,270]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:271,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,272]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:273,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,274]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:275,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,276]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:277,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,278]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:279,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,280]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:281,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,282]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:283,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,284]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:285,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261],197:[1,286]},{16:[1,287]},{16:[1,288],17:[1,289]},{16:[1,290],17:[1,291]},{16:[1,292]},{13:293,14:[1,294],15:[1,295],16:[1,296],17:[1,297]},{13:298,14:[1,294],15:[1,295],16:[1,296],17:[1,297]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:299,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:300,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:301,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:302,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:303,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:304,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:305,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:306,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:307,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:308,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:309,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:310,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:311,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:312,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:313,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:314,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:315,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:316,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:317,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:318,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:319,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{14:[1,263],15:[1,264],16:[1,257],17:[1,262],28:[1,237],29:[1,247],74:[1,246],142:[1,245],149:320,150:[1,235],151:[1,236],154:[1,240],157:[1,238],165:[1,239],166:[1,254],167:[1,241],168:[1,242],169:[1,243],171:[1,256],172:[1,244],174:[1,248],175:[1,249],176:[1,250],177:[1,251],180:[1,252],181:[1,253],182:[1,255],183:[1,258],184:[1,259],185:[1,260],186:[1,261]},{5:[2,228],189:[2,228],190:[2,228],194:[2,228]},{5:[2,229],189:[1,151],190:[2,229],194:[2,229]},{5:[2,232],189:[2,232],190:[2,232],194:[2,232]},{5:[2,233],189:[2,233],190:[2,233],194:[2,233]},{5:[2,234],189:[2,234],190:[2,234],194:[2,234]},{5:[2,236],189:[2,236],190:[2,236],194:[2,236]},{5:[2,235],189:[2,235],190:[2,235],194:[2,235]},{5:[2,237],189:[2,237],190:[2,237],194:[2,237]},{5:[2,238],189:[2,238],190:[2,238],194:[2,238]},{5:[2,239],189:[2,239],190:[2,239],194:[2,239]},{5:[2,222],189:[2,222],190:[2,222],194:[2,222]},{5:[2,223],189:[2,223],190:[2,223],194:[2,223]},{5:[2,224],189:[2,224],190:[2,224],194:[2,224]},{5:[2,225],189:[2,225],190:[2,225],194:[2,225]},{5:[2,226],189:[2,226],190:[2,226],194:[2,226]},{5:[2,227],189:[2,227],190:[2,227],194:[2,227]},{5:[2,240],189:[2,240],190:[2,240],194:[2,240]},{5:[2,241],189:[2,241],190:[2,241],194:[2,241]},{5:[2,242],189:[2,242],190:[2,242],194:[2,242]},{5:[2,273],189:[2,273],190:[2,273],194:[2,273]},{5:[2,274],189:[2,274],190:[2,274],194:[2,274]},{5:[2,275],189:[2,275],190:[2,275],194:[2,275]},{5:[2,276],189:[2,276],190:[2,276],194:[2,276]},{5:[2,243],189:[2,243],190:[2,243],194:[2,243]},{5:[2,246],189:[2,246],190:[2,246],194:[2,246]},{5:[2,134],189:[2,134],190:[2,134],194:[2,134]},{5:[2,135],152:[1,321],153:[1,322],154:[1,323],155:[1,324],156:[1,325],189:[2,135],190:[2,135],194:[2,135]},{5:[2,141],189:[2,141],190:[2,141],194:[2,141]},{158:[1,326],159:[1,327],160:[1,328],163:[1,329],164:[1,330]},{5:[2,150],152:[1,331],153:[1,332],154:[1,333],155:[1,334],156:[1,335],189:[2,150],190:[2,150],194:[2,150]},{153:[1,336],155:[1,337],164:[1,338],166:[1,339]},{5:[2,164],153:[1,340],155:[1,341],189:[2,164],190:[2,164],194:[2,164]},{5:[2,169],159:[1,342],189:[2,169],190:[2,169],194:[2,169]},{166:[1,344],170:[1,343],171:[1,345]},{5:[2,177],189:[2,177],190:[2,177],194:[2,177]},{5:[2,178],152:[1,346],153:[1,347],154:[1,348],155:[1,350],156:[1,351],173:[1,349],189:[2,178],190:[2,178],194:[2,178]},{5:[2,188],189:[2,188],190:[2,188],194:[2,188]},{5:[2,189],189:[2,189],190:[2,189],194:[2,189]},{5:[2,190],153:[1,352],155:[1,354],173:[1,353],189:[2,190],190:[2,190],194:[2,190]},{5:[2,194],189:[2,194],190:[2,194],194:[2,194]},{5:[2,195],152:[1,355],153:[1,356],154:[1,357],155:[1,359],156:[1,360],173:[1,358],189:[2,195],190:[2,195],194:[2,195]},{178:[1,361],179:[1,362]},{5:[2,206],159:[1,363],189:[2,206],190:[2,206],194:[2,206]},{5:[2,208],189:[2,208],190:[2,208],194:[2,208]},{5:[2,209],159:[1,364],189:[2,209],190:[2,209],194:[2,209]},{5:[2,211],189:[2,211],190:[2,211],194:[2,211]},{5:[2,212],159:[1,365],189:[2,212],190:[2,212],194:[2,212]},{5:[2,214],189:[2,214],190:[2,214],194:[2,214]},{5:[2,215],189:[2,215],190:[2,215],194:[2,215]},{5:[2,216],189:[2,216],190:[2,216],194:[2,216]},{5:[2,217],189:[2,217],190:[2,217],194:[2,217]},{5:[2,218],189:[2,218],190:[2,218],194:[2,218]},{5:[2,219],189:[2,219],190:[2,219],194:[2,219]},{5:[2,220],189:[2,220],190:[2,220],194:[2,220]},{5:[2,221],189:[2,221],190:[2,221],194:[2,221]},{5:[2,244],189:[2,244],190:[2,244],194:[2,244]},{5:[2,245],189:[2,245],190:[2,245],194:[2,245]},{5:[2,247],189:[2,247],190:[2,247],194:[2,247]},{5:[2,250],189:[2,250],190:[2,250],194:[2,250]},{5:[2,248],189:[2,248],190:[2,248],194:[2,248]},{5:[2,249],189:[2,249],190:[2,249],194:[2,249]},{5:[2,251],189:[2,251],190:[2,251],194:[2,251]},{5:[2,254],189:[2,254],190:[2,254],194:[2,254]},{5:[2,252],189:[2,252],190:[2,252],194:[2,252]},{5:[2,253],189:[2,253],190:[2,253],194:[2,253]},{5:[2,255],189:[2,255],190:[2,255],194:[2,255]},{5:[2,258],189:[2,258],190:[2,258],194:[2,258]},{5:[2,256],189:[2,256],190:[2,256],194:[2,256]},{5:[2,257],189:[2,257],190:[2,257],194:[2,257]},{5:[2,259],189:[2,259],190:[2,259],194:[2,259]},{5:[2,262],189:[2,262],190:[2,262],194:[2,262]},{5:[2,260],189:[2,260],190:[2,260],194:[2,260]},{5:[2,261],189:[2,261],190:[2,261],194:[2,261]},{5:[2,263],189:[2,263],190:[2,263],194:[2,263]},{5:[2,265],189:[2,265],190:[2,265],194:[2,265]},{5:[2,264],189:[2,264],190:[2,264],194:[2,264]},{5:[2,266],189:[2,266],190:[2,266],194:[2,266]},{5:[2,267],189:[2,267],190:[2,267],194:[2,267]},{5:[2,268],189:[2,268],190:[2,268],194:[2,268]},{5:[2,270],189:[2,270],190:[2,270],194:[2,270]},{5:[2,269],189:[2,269],190:[2,269],194:[2,269]},{5:[2,271],189:[2,271],190:[2,271],194:[2,271]},{5:[2,272],189:[2,272],190:[2,272],194:[2,272]},{5:[2,277],189:[2,277],190:[2,277],194:[2,277]},{5:[2,8],189:[2,8],190:[2,8],194:[2,8]},{5:[2,9],189:[2,9],190:[2,9],194:[2,9]},{5:[2,10],189:[2,10],190:[2,10],194:[2,10]},{5:[2,11],189:[2,11],190:[2,11],194:[2,11]},{5:[2,278],189:[2,278],190:[2,278],194:[2,278]},{5:[2,279],189:[2,279],190:[2,279],194:[2,279]},{5:[2,280],189:[2,280],190:[2,280],194:[2,280]},{5:[2,281],189:[2,281],190:[2,281],194:[2,281]},{5:[2,282],189:[2,282],190:[2,282],194:[2,282]},{5:[2,283],189:[2,283],190:[2,283],194:[2,283]},{5:[2,286],189:[2,286],190:[2,286],194:[2,286]},{5:[2,284],189:[2,284],190:[2,284],194:[2,284]},{5:[2,287],189:[2,287],190:[2,287],194:[2,287]},{5:[2,285],189:[2,285],190:[2,285],194:[2,285]},{5:[2,288],189:[2,288],190:[2,288],194:[2,288]},{5:[2,289],189:[2,289],190:[2,289],194:[2,289]},{5:[2,290],189:[2,290],190:[2,290],194:[2,290]},{5:[2,291],189:[2,291],190:[2,291],194:[2,291]},{5:[2,292],189:[2,292],190:[2,292],194:[2,292]},{5:[2,293],189:[2,293],190:[2,293],194:[2,293]},{5:[2,294],189:[2,294],190:[2,294],194:[2,294]},{5:[2,295],189:[2,295],190:[2,295],194:[2,295]},{5:[2,296],189:[2,296],190:[2,296],194:[2,296]},{5:[2,297],189:[2,297],190:[2,297],194:[2,297]},{5:[2,298],189:[2,298],190:[2,298],194:[2,298]},{5:[2,299],189:[2,299],190:[2,299],194:[2,299]},{5:[2,300],189:[2,300],190:[2,300],194:[2,300]},{5:[2,136],189:[2,136],190:[2,136],194:[2,136]},{5:[2,137],189:[2,137],190:[2,137],194:[2,137]},{5:[2,138],189:[2,138],190:[2,138],194:[2,138]},{5:[2,139],189:[2,139],190:[2,139],194:[2,139]},{5:[2,140],189:[2,140],190:[2,140],194:[2,140]},{5:[2,142],159:[1,366],189:[2,142],190:[2,142],194:[2,142]},{5:[2,144],189:[2,144],190:[2,144],194:[2,144]},{161:[1,367],162:[1,368]},{5:[2,147],189:[2,147],190:[2,147],194:[2,147]},{161:[1,369],162:[1,370]},{5:[2,151],189:[2,151],190:[2,151],194:[2,151]},{5:[2,152],189:[2,152],190:[2,152],194:[2,152]},{5:[2,153],189:[2,153],190:[2,153],194:[2,153]},{5:[2,154],189:[2,154],190:[2,154],194:[2,154]},{5:[2,155],189:[2,155],190:[2,155],194:[2,155]},{5:[2,156],159:[1,371],189:[2,156],190:[2,156],194:[2,156]},{5:[2,158],159:[1,372],189:[2,158],190:[2,158],194:[2,158]},{5:[2,160],159:[1,373],189:[2,160],190:[2,160],194:[2,160]},{5:[2,162],159:[1,374],189:[2,162],190:[2,162],194:[2,162]},{5:[2,165],159:[1,375],189:[2,165],190:[2,165],194:[2,165]},{5:[2,167],159:[1,376],189:[2,167],190:[2,167],194:[2,167]},{5:[2,170],189:[2,170],190:[2,170],194:[2,170]},{5:[2,171],159:[1,377],189:[2,171],190:[2,171],194:[2,171]},{5:[2,173],159:[1,378],189:[2,173],190:[2,173],194:[2,173]},{5:[2,175],159:[1,379],189:[2,175],190:[2,175],194:[2,175]},{5:[2,179],159:[1,380],189:[2,179],190:[2,179],194:[2,179]},{5:[2,181],189:[2,181],190:[2,181],194:[2,181]},{5:[2,182],159:[1,381],189:[2,182],190:[2,182],194:[2,182]},{5:[2,184],189:[2,184],190:[2,184],194:[2,184]},{5:[2,185],189:[2,185],190:[2,185],194:[2,185]},{5:[2,186],159:[1,382],189:[2,186],190:[2,186],194:[2,186]},{5:[2,191],189:[2,191],190:[2,191],194:[2,191]},{5:[2,192],189:[2,192],190:[2,192],194:[2,192]},{5:[2,193],189:[2,193],190:[2,193],194:[2,193]},{5:[2,196],189:[2,196],190:[2,196],194:[2,196]},{5:[2,197],189:[2,197],190:[2,197],194:[2,197]},{5:[2,198],189:[2,198],190:[2,198],194:[2,198]},{5:[2,199],189:[2,199],190:[2,199],194:[2,199]},{5:[2,200],189:[2,200],190:[2,200],194:[2,200]},{5:[2,201],189:[2,201],190:[2,201],194:[2,201]},{5:[2,202],159:[1,383],189:[2,202],190:[2,202],194:[2,202]},{5:[2,204],159:[1,384],189:[2,204],190:[2,204],194:[2,204]},{5:[2,207],189:[2,207],190:[2,207],194:[2,207]},{5:[2,210],189:[2,210],190:[2,210],194:[2,210]},{5:[2,213],189:[2,213],190:[2,213],194:[2,213]},{5:[2,143],189:[2,143],190:[2,143],194:[2,143]},{5:[2,145],189:[2,145],190:[2,145],194:[2,145]},{5:[2,146],189:[2,146],190:[2,146],194:[2,146]},{5:[2,148],189:[2,148],190:[2,148],194:[2,148]},{5:[2,149],189:[2,149],190:[2,149],194:[2,149]},{5:[2,157],189:[2,157],190:[2,157],194:[2,157]},{5:[2,159],189:[2,159],190:[2,159],194:[2,159]},{5:[2,161],189:[2,161],190:[2,161],194:[2,161]},{5:[2,163],189:[2,163],190:[2,163],194:[2,163]},{5:[2,166],189:[2,166],190:[2,166],194:[2,166]},{5:[2,168],189:[2,168],190:[2,168],194:[2,168]},{5:[2,172],189:[2,172],190:[2,172],194:[2,172]},{5:[2,174],189:[2,174],190:[2,174],194:[2,174]},{5:[2,176],189:[2,176],190:[2,176],194:[2,176]},{5:[2,180],189:[2,180],190:[2,180],194:[2,180]},{5:[2,183],189:[2,183],190:[2,183],194:[2,183]},{5:[2,187],189:[2,187],190:[2,187],194:[2,187]},{5:[2,203],189:[2,203],190:[2,203],194:[2,203]},{5:[2,205],189:[2,205],190:[2,205],194:[2,205]}],
defaultActions: {150:[2,1],159:[2,6],160:[2,7],161:[2,2],162:[2,3],163:[2,4],164:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


var    util           = require('util');

function parseIpPort(yy, ipPortStr, which) {
  function singleIp(which, ip1, ip2, port) {
    var obj;

    if (ip1 !== -1) {
      if (ip1 === ip2) {
        obj = {term: {}};
        obj.term[which] = ip1>>>0;
      } else {
        obj = {range: {}};
        obj.range[which] = {from: ip1>>>0, to: ip2>>>0};
      }
    }

    if (port !== -1) {
      if (which === "a1") {
        obj = {bool: {must: [obj, {term: {p1: port}}]}};
      } else if (which === "a2") {
        obj = {bool: {must: [obj, {term: {p2: port}}]}};
      } else if (which === "socksip") {
        obj = {bool: {must: [obj, {term: {sockspo: port}}]}};
      } else {
        return obj;
      }

      if (ip1 === -1) {
        obj = obj.bool.must[1];
      }
    }

    return obj;
  }


  var obj;

  ipPortStr = ipPortStr.trim();

// We really have a list of them
  if (ipPortStr[0] === "[" && ipPortStr[ipPortStr.length -1] === "]") {
      obj =  {bool: {should: []}};
      CSVtoArray(ipPortStr).forEach(function(str) {
          obj.bool.should.push(parseIpPort(yy, str, which));
      });
      return obj;
  }

  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }
  
  if (which !== "all") {
    return singleIp(which, ip1, ip2, port);
  }

  var ors = [];
  for (var i = 0, ilen = yy.ipFields.length; i < ilen; i++) {
    if (yy.emailSearch !== true && yy.ipFields[i].addr === "eip") {
      continue;
    }
    obj = singleIp(yy.ipFields[i].addr, ip1, ip2, port);
    if (obj) {
      ors.push(obj);
    }
  }

  return {bool: {should: ors}};
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}

var field2RawField = {
    us: "rawus",
    ua: "rawua",
    as1: "rawas1",
    as2: "rawas2",
    asxff: "rawasff",
    asdnsip: "rawasdnsip",
    iOn: "rawiOn",
    eua: "raweua",
    esub: "rawesub",
    aseip: "rawaseip"
}

function str2Query(yy, field, kind, str)
{
    if (yy.fieldsMap[field] && yy.fieldsMap[field].type === "ip") {
        return parseIpPort(yy, str, field);
    }

    var obj;

    if (field2RawField[field] === undefined && field.indexOf(".snow", field.length - 5) !== -1) {
        field2RawField[field] = field.substring(0, field.length - 5) + ".raw";
    }

    if (str[0] === "/" && str[str.length -1] === "/") {
        field = field2RawField[field] || field;
        obj = {regexp: {}};
        obj.regexp[field] = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        return obj;
    }

    var strs;
    var quoted = false;
    if (str[0] === "\"" && str[str.length -1] === "\"") {
        str = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        quoted = true;
    } else if (str[0] === "[" && str[str.length -1] === "]") {
        strs = CSVtoArray(str);
        if (kind === "term") {
            obj = {terms: {}};
            obj.terms[field] = strs;
        } else if (kind === "text") {
            var obj =  {query: {bool: {should: []}}};
            strs.forEach(function(str) {
              var should = {text: {}};
              should.text[field] = {query: str, type: "phrase", operator: "and"}
              obj.query.bool.should.push(should);
            });
        }
        return obj;
    }

    if (!isNaN(str) && !quoted) {
        obj = {term: {}};
        obj.term[field] = str;
    } else if (str.indexOf("*") !== -1) {
        field = field2RawField[field] || field;
        obj = {query: {wildcard: {}}};
        obj.query.wildcard[field] = str;
    } else if (kind === "text") {
        obj = {query: {text: {}}};
        obj.query.text[field] = {query: str, type: "phrase", operator: "and"}
    } else if (kind === "term") {
        obj = {term: {}};
        obj.term[field] = str;
    }
    return obj;
}

function str2IpListQuery(yy, field, kind, str) {
  var obj = [];
  for (var i = 0, ilen = yy.ipFields.length; i < ilen; i++) {
      obj.push(str2Query(yy, yy.ipFields[i][field], kind, str));
  }
  return obj;
}

function str2Header(yy, name) {
    var field = yy.fieldsMap[name];
    if (field === undefined) throw "Unknown field " + name;

    return field.db;
}

// http://stackoverflow.com/a/8497474
// Return array of string values, or NULL if CSV string not well formed.
function CSVtoArray(text) {
    text = text.substring(1, text.length-1);
    var re_valid = /^\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*(?:,\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*)*$/;
    var re_value = /(?!\s*$)\s*(?:'([^'\\]*(?:\\[\S\s][^'\\]*)*)'|"([^"\\]*(?:\\[\S\s][^"\\]*)*)"|([^,'"\s\\]*(?:\s+[^,'"\s\\]+)*))\s*(?:,|$)/g;
    // Return NULL if input string is not well formed CSV string.
    if (!re_valid.test(text)) return null;
    var a = [];                     // Initialize array to receive values.
    text.replace(re_value, // "Walk" the string using replace with callback.
        function(m0, m1, m2, m3) {
            // Remove backslash from \' in single quoted values.
            if      (m1 !== undefined) a.push(m1.replace(/\\'/g, "'"));
            // Remove backslash from \" in double quoted values.
            else if (m2 !== undefined) a.push(m2.replace(/\\"/g, '"'));
            else if (m3 !== undefined) a.push(m3);
            return ''; // Return empty string.
        });
    // Handle special case of empty last value.
    if (/,\s*$/.test(text)) a.push('');
    return a;
};

var protocols = {
    icmp: 1,
    tcp:  6,
    udp:  17
};

function protocolLookup(text) {
    if (typeof text !== "string") {
        for (var i = 0; i < text.length; i++) {
            text[i] = protocols[text[i]] || +text[i];
        }
        return text;
    } else {
        return protocols[text] || +text;
    }
}

function termOrTerms(field, str) {
  var obj = {};
  if (str[0] === "[" && str[str.length -1] === "]") {
    obj = {terms: {}};
    obj.terms[field] = CSVtoArray(str);
  } else {
    obj = {term: {}};
    obj.term[field] = str;
  }
  return obj;
}
/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 16
break;
case 2:return 17
break;
case 3:return 14
break;
case 4:return 15
break;
case 5:if (!yy.emailSearch) throw "email searches disabled for user"; return 52
break;
case 6:if (!yy.emailSearch) throw "email searches disabled for user"; return 96
break;
case 7:if (!yy.emailSearch) throw "email searches disabled for user"; return 57
break;
case 8:if (!yy.emailSearch) throw "email searches disabled for user"; return 94
break;
case 9:if (!yy.emailSearch) throw "email searches disabled for user"; return 55
break;
case 10:if (!yy.emailSearch) throw "email searches disabled for user"; return 92
break;
case 11:if (!yy.emailSearch) throw "email searches disabled for user"; return 60
break;
case 12:if (!yy.emailSearch) throw "email searches disabled for user"; return 135
break;
case 13:return "http.hasheader.dst.cnt"
break;
case 14:return "http.hasheader.dst"
break;
case 15:return "http.hasheader"
break;
case 16:return "http.hasheader.src.cnt"
break;
case 17:return "http.hasheader.src"
break;
case 18:return "http.user-agent.cnt"
break;
case 19:return "http.user-agent"
break;
case 20:return "http.user-agent.cnt"
break;
case 21:return "http.user-agent"
break;
case 22:return "http.uri.cnt"
break;
case 23:return "http.uri"
break;
case 24:return "EXISTS"
break;
case 25:return 151
break;
case 26:return 130
break;
case 27:return 129
break;
case 28:return 132
break;
case 29:return 128
break;
case 30:return 133
break;
case 31:if (!yy.emailSearch) throw "email searches disabled for user"; return 131
break;
case 32:return 28
break;
case 33:return "cert.alt.cnt"
break;
case 34:return "cert.alt"
break;
case 35:return "cert.cnt"
break;
case 36:return "cert.issuer.cn"
break;
case 37:return "cert.issuer.on"
break;
case 38:return "cert.serial"
break;
case 39:return "cert.subject.cn"
break;
case 40:return "cert.subject.on"
break;
case 41:return 165
break;
case 42:return 115
break;
case 43:return 116
break;
case 44:return 118
break;
case 45:return 119
break;
case 46:return 120
break;
case 47:if (!yy.emailSearch) throw "email searches disabled for user"; return 117
break;
case 48:return 27
break;
case 49:if (!yy.emailSearch) throw "email searches disabled for user"; return 52
break;
case 50:if (!yy.emailSearch) throw "email searches disabled for user"; return 96
break;
case 51:if (!yy.emailSearch) throw "email searches disabled for user"; return 53
break;
case 52:if (!yy.emailSearch) throw "email searches disabled for user"; return 80
break;
case 53:if (!yy.emailSearch) throw "email searches disabled for user"; return 54
break;
case 54:if (!yy.emailSearch) throw "email searches disabled for user"; return 95
break;
case 55:if (!yy.emailSearch) throw "email searches disabled for user"; return 55
break;
case 56:if (!yy.emailSearch) throw "email searches disabled for user"; return 92
break;
case 57:if (!yy.emailSearch) throw "email searches disabled for user"; return 56
break;
case 58:if (!yy.emailSearch) throw "email searches disabled for user"; return 93
break;
case 59:if (!yy.emailSearch) throw "email searches disabled for user"; return 57
break;
case 60:if (!yy.emailSearch) throw "email searches disabled for user"; return 94
break;
case 61:if (!yy.emailSearch) throw "email searches disabled for user"; return 58
break;
case 62:if (!yy.emailSearch) throw "email searches disabled for user"; return 81
break;
case 63:if (!yy.emailSearch) throw "email searches disabled for user"; return 59
break;
case 64:if (!yy.emailSearch) throw "email searches disabled for user"; return 134
break;
case 65:if (!yy.emailSearch) throw "email searches disabled for user"; return 60
break;
case 66:if (!yy.emailSearch) throw "email searches disabled for user"; return 135
break;
case 67:if (!yy.emailSearch) throw "email searches disabled for user"; return 23
break;
case 68:if (!yy.emailSearch) throw "email searches disabled for user"; return 19
break;
case 69:return "file"
break;
case 70:return "http.hasheader.dst.cnt"
break;
case 71:return "http.hasheader.dst"
break;
case 72:return "http.hasheader"
break;
case 73:return "http.hasheader.src.cnt"
break;
case 74:return "http.hasheader.src"
break;
case 75:return "host.dns.cnt"
break;
case 76:return "host.dns"
break;
case 77:return "host.email.cnt"
break;
case 78:return "host.email"
break;
case 79:return "host.http.cnt"
break;
case 80:return "host.http"
break;
case 81:return "host.socks"
break;
case 82:return "host"
break;
case 83:return "http.md5.cnt"
break;
case 84:return "http.md5"
break;
case 85:return "http.uri.cnt"
break;
case 86:return "http.uri"
break;
case 87:return "http.uri.key.cnt"
break;
case 88:return "http.uri.key"
break;
case 89:return "http.uri.path.cnt"
break;
case 90:return "http.uri.path"
break;
case 91:return "http.uri.value.cnt"
break;
case 92:return "http.uri.value"
break;
case 93:return "http.version"
break;
case 94:return "http.version.src"
break;
case 95:return "http.version.src.cnt"
break;
case 96:return "http.version.dst"
break;
case 97:return "http.version.dst.cnt"
break;
case 98:return "http.user-agent.cnt"
break;
case 99:return "http.user-agent"
break;
case 100:return "host.http.cnt"
break;
case 101:return "host.http"
break;
case 102:return "HTTP_HEADER_CNT"
break;
case 103:return "HTTP_HEADER"
break;
case 104:return "icmp"
break;
case 105:return "icmp"
break;
case 106:return "id"
break;
case 107:return "ip.dns.cnt"
break;
case 108:return "ip.dns"
break;
case 109:return "ip.dst"
break;
case 110:return "ip"
break;
case 111:return "ip.socks"
break;
case 112:return "ip.src"
break;
case 113:return "ip.xff.cnt"
break;
case 114:return "ip.xff"
break;
case 115:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email.cnt"
break;
case 116:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email"
break;
case 117:return "irc.nick"
break;
case 118:return "irc.nick.cnt"
break;
case 119:return "irc.channel"
break;
case 120:return "irc.channel.cnt"
break;
case 121:return 74
break;
case 122:return 29
break;
case 123:return "payload8.src"
break;
case 124:return "payload8.dst"
break;
case 125:return "payload8"
break;
case 126:return "PLUGIN_CNT"
break;
case 127:return "PLUGIN"
break;
case 128:return 30
break;
case 129:return 174
break;
case 130:return 31
break;
case 131:return 32
break;
case 132:return 175
break;
case 133:return 176
break;
case 134:return 121
break;
case 135:return 122
break;
case 136:return 124
break;
case 137:return 125
break;
case 138:return 126
break;
case 139:if (!yy.emailSearch) throw "email searches disabled for user"; return 123
break;
case 140:return "rootId"
break;
case 141:return "host.socks"
break;
case 142:return "ip.socks"
break;
case 143:return "port.socks"
break;
case 144:return "socks.user"
break;
case 145:return "smb.domain.cnt"
break;
case 146:return "smb.domain"
break;
case 147:return "smb.fn.cnt"
break;
case 148:return "smb.fn"
break;
case 149:return "smb.host.cnt"
break;
case 150:return "smb.host"
break;
case 151:return "smb.os.cnt"
break;
case 152:return "smb.os"
break;
case 153:return "smb.share.cnt"
break;
case 154:return "smb.share"
break;
case 155:return "smb.user.cnt"
break;
case 156:return "smb.user"
break;
case 157:return "smb.ver.cnt"
break;
case 158:return "smb.ver"
break;
case 159:return "ssh.key.cnt"
break;
case 160:return "ssh.key"
break;
case 161:return "ssh.ver.cnt"
break;
case 162:return "ssh.ver"
break;
case 163:return 51
break;
case 164:return 180
break;
case 165:return "tcp"
break;
case 166:return "tcp"
break;
case 167:return "udp"
break;
case 168:return "udp"
break;
case 169:return "user.cnt"
break;
case 170:return "user"
break;
case 171:return 150
break;
case 172:return 183
break;
case 173:return 184
break;
case 174:return 185
break;
case 175:return 186
break;
case 176:return 8
break;
case 177:return 7
break;
case 178:return 11
break;
case 179:return 10
break;
case 180:return 196
break;
case 181:return 195
break;
case 182:return 195
break;
case 183:return 190
break;
case 184:return 190
break;
case 185:return 189
break;
case 186:return 189
break;
case 187:return 193
break;
case 188:return 194
break;
case 189:return 191
break;
case 190:return 5
break;
case 191:return 'INVALID'
break;
case 192:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:\d+\b)/,/^(?:\[\d+(,\s*\d+)*\s*\])/,/^(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?\b)/,/^(?:\[(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?(,\s*){0,1})+\])/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:http\.ua\.cnt)/,/^(?:http\.ua)/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:EXISTS!)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.socks)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:asn\.email)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.socks)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:country\.email)/,/^(?:databytes)/,/^(?:email\.content-type\.cnt)/,/^(?:email\.content-type)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.message-id\.cnt)/,/^(?:email\.message-id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mime-version\.cnt)/,/^(?:email\.mime-version)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.x-mailer\.cnt)/,/^(?:email\.x-mailer)/,/^(?:email\.[^\s!=><.]*\.cnt)/,/^(?:email\.[^\s!=><.]*)/,/^(?:file)/,/^(?:http\.hasheader\.dst\.cnt)/,/^(?:http\.hasheader\.dst)/,/^(?:http\.hasheader)/,/^(?:http\.hasheader\.src\.cnt)/,/^(?:http\.hasheader\.src)/,/^(?:host\.dns\.cnt)/,/^(?:host\.dns)/,/^(?:host\.email\.cnt)/,/^(?:host\.email)/,/^(?:host\.http\.cnt)/,/^(?:host\.http)/,/^(?:host\.socks)/,/^(?:host)/,/^(?:http\.md5\.cnt)/,/^(?:http\.md5)/,/^(?:http\.uri\.cnt)/,/^(?:http\.uri)/,/^(?:http\.uri\.key\.cnt)/,/^(?:http\.uri\.key)/,/^(?:http\.uri\.path\.cnt)/,/^(?:http\.uri\.path)/,/^(?:http\.uri\.value\.cnt)/,/^(?:http\.uri\.value)/,/^(?:http\.version)/,/^(?:http\.version\.src)/,/^(?:http\.version\.src\.cnt)/,/^(?:http\.version\.dst)/,/^(?:http\.version\.dst\.cnt)/,/^(?:http\.user-agent\.cnt)/,/^(?:http\.user-agent)/,/^(?:http\.host\.cnt)/,/^(?:http\.host)/,/^(?:http\.[^\s!=><.]*\.cnt)/,/^(?:http\.[^\s!=><.]*)/,/^(?:icmp)/,/^(?:"icmp")/,/^(?:id)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.socks)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:ip\.email\.cnt)/,/^(?:ip\.email)/,/^(?:irc\.nick)/,/^(?:irc\.nick\.cnt)/,/^(?:irc\.channel)/,/^(?:irc\.channel\.cnt)/,/^(?:node)/,/^(?:packets)/,/^(?:payload8\.src)/,/^(?:payload8\.dst)/,/^(?:payload8)/,/^(?:plugin\.[^\s!=><]*\.cnt)/,/^(?:plugin\.[^\s!=><]*)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.socks)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rir)/,/^(?:rir\.dns)/,/^(?:rir\.dst)/,/^(?:rir\.socks)/,/^(?:rir\.src)/,/^(?:rir\.xff)/,/^(?:rir\.email)/,/^(?:rootId)/,/^(?:socks\.host)/,/^(?:socks\.ip)/,/^(?:socks\.port)/,/^(?:socks\.user)/,/^(?:smb\.domain\.cnt)/,/^(?:smb\.domain)/,/^(?:smb\.fn\.cnt)/,/^(?:smb\.fn)/,/^(?:smb\.host\.cnt)/,/^(?:smb\.host)/,/^(?:smb\.os\.cnt)/,/^(?:smb\.os)/,/^(?:smb\.share\.cnt)/,/^(?:smb\.share)/,/^(?:smb\.user\.cnt)/,/^(?:smb\.user)/,/^(?:smb\.ver\.cnt)/,/^(?:smb\.ver)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:"tcp")/,/^(?:udp)/,/^(?:"udp")/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"\\]*(?:\\.[^"\\]*)*")/,/^(?:\/[^/\\]*(?:\\.[^/\\]*)*\/)/,/^(?:\[[0-9a-z,"]+\])/,/^(?:\[[^\]]+\])/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}