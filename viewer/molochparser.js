/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"NUMBER":15,"RANGEFIELD":16,"databytes":17,"bytes":18,"packets":19,"protocol":20,"port.src":21,"port.dst":22,"uri.cnt":23,"cert.cnt":24,"ip.xff.cnt":25,"ip.dns.cnt":26,"ua.cnt":27,"user.cnt":28,"host.cnt":29,"header.src.cnt":30,"header.dst.cnt":31,"tags.cnt":32,"email.ct.cnt":33,"email.dst.cnt":34,"email.fn.cnt":35,"email.id.cnt":36,"email.md5.cnt":37,"email.mv.cnt":38,"email.src.cnt":39,"email.subject.cnt":40,"email.ua.cnt":41,"cert.alt.cnt":42,"ssh.key.cnt":43,"ssh.ver.cnt":44,"LOTERMFIELD":45,"node":46,"host":47,"user":48,"email.dst":49,"email.src":50,"cert.subject.cn":51,"cert.issuer.cn":52,"cert.serial":53,"cert.alt":54,"ssh.ver":55,"TERMFIELD":56,"id":57,"ssh.key":58,"email.id":59,"email.md5":60,"email.mv":61,"email.fn":62,"email.ct":63,"rootId":64,"UPTERMFIELD":65,"country.src":66,"country.dst":67,"country.dns":68,"TEXTFIELD":69,"asn.src":70,"asn.dst":71,"asn.dns":72,"email.subject":73,"email.ua":74,"cert.subject.on":75,"cert.issuer.on":76,"IPFIELD":77,"ip":78,"ip.src":79,"ip.dst":80,"ip.xff":81,"ip.dns":82,"STR":83,"ID":84,"asn":85,"dns":86,"dst":87,"src":88,"xff":89,"cert":90,"alt":91,"cnt":92,"issuer":93,"cn":94,"on":95,"serial":96,"subject":97,"country":98,"email":99,"ua":100,"header":101,"icmp":102,"port":103,"QUOTEDSTR":104,"ssh":105,"key":106,"ver":107,"tags":108,"tcp":109,"udp":110,"uri":111,"&&":112,"==":113,"!=":114,"||":115,"!":116,"-":117,"(":118,")":119,"oldheader":120,"header.src":121,"header.dst":122,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"NUMBER",17:"databytes",18:"bytes",19:"packets",20:"protocol",21:"port.src",22:"port.dst",23:"uri.cnt",24:"cert.cnt",25:"ip.xff.cnt",26:"ip.dns.cnt",27:"ua.cnt",28:"user.cnt",29:"host.cnt",30:"header.src.cnt",31:"header.dst.cnt",32:"tags.cnt",33:"email.ct.cnt",34:"email.dst.cnt",35:"email.fn.cnt",36:"email.id.cnt",37:"email.md5.cnt",38:"email.mv.cnt",39:"email.src.cnt",40:"email.subject.cnt",41:"email.ua.cnt",42:"cert.alt.cnt",43:"ssh.key.cnt",44:"ssh.ver.cnt",46:"node",47:"host",48:"user",49:"email.dst",50:"email.src",51:"cert.subject.cn",52:"cert.issuer.cn",53:"cert.serial",54:"cert.alt",55:"ssh.ver",57:"id",58:"ssh.key",59:"email.id",60:"email.md5",61:"email.mv",62:"email.fn",63:"email.ct",64:"rootId",66:"country.src",67:"country.dst",68:"country.dns",70:"asn.src",71:"asn.dst",72:"asn.dns",73:"email.subject",74:"email.ua",75:"cert.subject.on",76:"cert.issuer.on",78:"ip",79:"ip.src",80:"ip.dst",81:"ip.xff",82:"ip.dns",84:"ID",85:"asn",86:"dns",87:"dst",88:"src",89:"xff",90:"cert",91:"alt",92:"cnt",93:"issuer",94:"cn",95:"on",96:"serial",97:"subject",98:"country",99:"email",100:"ua",101:"header",102:"icmp",103:"port",104:"QUOTEDSTR",105:"ssh",106:"key",107:"ver",108:"tags",109:"tcp",110:"udp",111:"uri",112:"&&",113:"==",114:"!=",115:"||",116:"!",117:"-",118:"(",119:")",120:"oldheader",121:"header.src",122:"header.dst"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[56,1],[56,1],[56,1],[56,1],[56,1],[56,1],[56,1],[56,1],[65,1],[65,1],[65,1],[69,1],[69,1],[69,1],[69,1],[69,1],[69,1],[69,1],[77,1],[77,1],[77,1],[77,1],[77,1],[83,1],[83,1],[83,2],[83,2],[83,2],[83,2],[83,1],[83,2],[83,3],[83,2],[83,3],[83,3],[83,2],[83,3],[83,3],[83,1],[83,2],[83,2],[83,2],[83,2],[83,2],[83,3],[83,2],[83,3],[83,2],[83,3],[83,2],[83,3],[83,1],[83,2],[83,3],[83,2],[83,3],[83,1],[83,2],[83,1],[83,1],[83,2],[83,3],[83,2],[83,2],[83,2],[83,3],[83,1],[83,1],[83,1],[83,2],[83,2],[83,1],[83,1],[83,2],[83,3],[83,2],[83,3],[83,1],[83,2],[83,1],[83,1],[83,2],[83,1],[83,1],[83,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 10:this.$ = 'db'
break;
case 11:this.$ = 'by'
break;
case 12:this.$ = 'pa'
break;
case 13:this.$ = 'pr'
break;
case 14:this.$ = 'p1'
break;
case 15:this.$ = 'p2'
break;
case 16:this.$ = 'uscnt'
break;
case 17:this.$ = 'tlscnt'
break;
case 18:this.$ = 'xffscnt'
break;
case 19:this.$ = 'dnsipcnt'
break;
case 20:this.$ = 'uacnt'
break;
case 21:this.$ = 'usercnt'
break;
case 22:this.$ = 'hocnt'
break;
case 23:this.$ = 'hh1cnt'
break;
case 24:this.$ = 'hh2cnt'
break;
case 25:this.$ = 'tacnt'
break;
case 26:this.$ = 'ectcnt'
break;
case 27:this.$ = 'edstcnt'
break;
case 28:this.$ = 'efncnt'
break;
case 29:this.$ = 'eidcnt'
break;
case 30:this.$ = 'emd5cnt'
break;
case 31:this.$ = 'emvcnt'
break;
case 32:this.$ = 'esrccnt'
break;
case 33:this.$ = 'esubcnt'
break;
case 34:this.$ = 'euacnt'
break;
case 35:this.$ = 'tls.altcnt'
break;
case 36:this.$ = 'sshkeycnt'
break;
case 37:this.$ = 'sshvercnt'
break;
case 38:this.$ = 'no'
break;
case 39:this.$ = 'ho'
break;
case 40:this.$ = 'user'
break;
case 41:this.$ = 'edst'
break;
case 42:this.$ = 'esrc'
break;
case 43:this.$ = 'tls.sCn'
break;
case 44:this.$ = 'tls.iCn'
break;
case 45:this.$ = 'tls.sn'
break;
case 46:this.$ = 'tls.alt'
break;
case 47:this.$ = 'sshver'
break;
case 48:this.$ = '_id'
break;
case 49:this.$ = 'sshkey'
break;
case 50:this.$ = 'eid'
break;
case 51:this.$ = 'emd5'
break;
case 52:this.$ = 'emv'
break;
case 53:this.$ = 'efn'
break;
case 54:this.$ = 'ect'
break;
case 55:this.$ = 'ro'
break;
case 56:this.$ = 'g1'
break;
case 57:this.$ = 'g2'
break;
case 58:this.$ = 'gdnsip'
break;
case 59:this.$ = 'as1'
break;
case 60:this.$ = 'as2'
break;
case 61:this.$ = 'asdnsip'
break;
case 62:this.$ = 'esub'
break;
case 63:this.$ = 'eua'
break;
case 64:this.$ = 'tls.sOn'
break;
case 65:this.$ = 'tls.iOn'
break;
case 66:this.$ = 0
break;
case 67:this.$ = 1
break;
case 68:this.$ = 2
break;
case 69:this.$ = 3
break;
case 70:this.$ = 4
break;
case 133:this.$ = {and: [$$[$0-2], $$[$0]]};
break;
case 134:this.$ = {query: {text: {us: {query: $$[$0], type: "phrase", operator: "and"}}}};
break;
case 135:this.$ = {not: {query: {text: {us: {query: $$[$0], type: "phrase", operator: "and"}}}}};
break;
case 136:this.$ = {query: {text: {ua: {query: $$[$0], type: "phrase", operator: "and"}}}};
break;
case 137:this.$ = {not: {query: {text: {ua: {query: $$[$0], type: "phrase", operator: "and"}}}}};
break;
case 138:this.$ = {or: [$$[$0-2], $$[$0]]};
break;
case 139:this.$ = {not: $$[$0]};
break;
case 140:this.$ = -$$[$0];
break;
case 141:this.$ = $$[$0-1];
break;
case 142:this.$ = {term: {pr: 1}};
break;
case 143:this.$ = {term: {pr: 6}};
break;
case 144:this.$ = {term: {pr: 17}};
break;
case 145:this.$ = {not: {term: {pr: 1}}};
break;
case 146:this.$ = {not: {term: {pr: 6}}};
break;
case 147:this.$ = {not: {term: {pr: 17}}};
break;
case 148:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 149:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 150:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 151:this.$ = {or: [{range: {p1: {}}}, {range: {p2: {}}}]};
         this.$.or[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.or[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 152: var str = stripQuotes($$[$0]).toLowerCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {not: {query: {wildcard: {}}}};
            this.$.not.query.wildcard[$$[$0-2]] = str;
          } else {
            this.$ = {not: {term: {}}};
            this.$.not.term[$$[$0-2]] = str;
          }
        
break;
case 153: var str = stripQuotes($$[$0]).toLowerCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {query: {wildcard: {}}};
            this.$.query.wildcard[$$[$0-2]] = str;
          } else {
            this.$ = {term: {}};
            this.$.term[$$[$0-2]] = str;
          }
        
break;
case 154: var str = stripQuotes($$[$0]);
          if (str.indexOf("*") !== -1) {
            this.$ = {not: {query: {wildcard: {}}}};
            this.$.not.query.wildcard[$$[$0-2]] = str;
          } else {
            this.$ = {not: {term: {}}};
            this.$.not.term[$$[$0-2]] = str;
          }
        
break;
case 155: var str = stripQuotes($$[$0]);
          if (str.indexOf("*") !== -1) {
            this.$ = {query: {wildcard: {}}};
            this.$.query.wildcard[$$[$0-2]] = str;
          } else {
            this.$ = {term: {}};
            this.$.term[$$[$0-2]] = str;
          }
        
break;
case 156: var str = stripQuotes($$[$0]).toUpperCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {not: {query: {wildcard: {}}}};
            this.$.not.query.wildcard[$$[$0-2]] = str;
          } else {
            this.$ = {not: {term: {}}};
            this.$.not.term[$$[$0-2]] = str;
          }
        
break;
case 157: var str = stripQuotes($$[$0]).toUpperCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {query: {wildcard: {}}};
            this.$.query.wildcard[$$[$0-2]] = str;
          } else {
            this.$ = {term: {}};
            this.$.term[$$[$0-2]] = str;
          }
        
break;
case 158: var str = stripQuotes($$[$0]).toLowerCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {not: {query: {wildcard: {}}}};
            this.$.not.query.wildcard[$$[$0-2]] = str;
          } else {
            this.$ = {not: {query: {text: {}}}};
            this.$.not.query.text[$$[$0-2]] = {query: str, type: "phrase", operator: "and"}
          }
        
break;
case 159: var str = stripQuotes($$[$0]).toLowerCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {query: {wildcard: {}}};
            this.$.query.wildcard[$$[$0-2]] = str;
          } else {
            this.$ = {query: {text: {}}};
            this.$.query.text[$$[$0-2]] = {query: str, type: "phrase", operator: "and"}
          }
        
break;
case 160:this.$ = {or: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]};
break;
case 161:this.$ = {not: {or: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]}};
break;
case 162:this.$ = parseIpPort($$[$0],$$[$0-2]);
break;
case 163:this.$ = {not: parseIpPort($$[$0],$$[$0-2])};
break;
case 164: var tag = stripQuotes($$[$0]);
          this.$ = {term: {ta: tag}};
        
break;
case 165: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {ta: tag}}};
        
break;
case 166: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh: tag}};
        
break;
case 167: var tag = stripQuotes($$[$0]);
          this.$ = {or: [{term: {hh1: tag}}, {term:{hh2: tag}}]};
        
break;
case 168: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh1: tag}};
        
break;
case 169: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh2: tag}};
        
break;
case 170: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh1: tag}}};
        
break;
case 171: var tag = stripQuotes($$[$0]);
          this.$ = {not: {or: [{term: {hh1: tag}}, {term:{hh2: tag}}]}};
        
break;
case 172: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh1: tag}}};
        
break;
case 173: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh2: tag}}};
        
break;
case 174: var str = stripQuotes($$[$0]).toUpperCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {or: [{query: {wildcard: {g1: str}}}, {query: {wildcard: {g2: str}}}, {query: {wildcard: {gxff: str}}}]};
          } else {
            this.$ = {or: [{term: {g1: str}}, {term: {g2: str}}, {term: {gxff: str}}]};
          }
        
break;
case 175: var str = stripQuotes($$[$0]).toUpperCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {not: {or: [{query: {wildcard: {g1: str}}}, {query: {wildcard: {g2: str}}}, {query: {wildcard: {gxff: str}}}]}};
          } else {
            this.$ = {not: {or: [{term: {g1: str}}, {term: {g2: str}}, {term: {gxff: str}}]}};
          }
        
break;
case 176: var str = stripQuotes($$[$0]).toLowerCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {or: [{query: {wildcard: {as1: str}}}, {query: {wildcard: {as2: str}}}, {query: {wildcard: {asxff: str}}}]};
          } else {
            this.$ = {or: [{query: {text: {as1:   {query: str, type: "phrase", operator: "and"}}}}, 
                       {query: {text: {as2:   {query: str, type: "phrase", operator: "and"}}}}, 
                       {query: {text: {asxff: {query: str, type: "phrase", operator: "and"}}}}
                      ]
                 };
          }
        
break;
case 177: var str = stripQuotes($$[$0]).toLowerCase();
          if (str.indexOf("*") !== -1) {
            this.$ = {not: {or: [{query: {wildcard: {as1: str}}}, {query: {wildcard: {as2: str}}}, {query: {wildcard: {asxff: str}}}]}};
          } else {
            this.$ = {not: {or: [{query: {text: {as1:   {query: str, type: "phrase", operator: "and"}}}}, 
                             {query: {text: {as2:   {query: str, type: "phrase", operator: "and"}}}}, 
                             {query: {text: {asxff: {query: str, type: "phrase", operator: "and"}}}}
                            ]
                 }};
          }
        
break;
}
},
table: [{3:1,4:2,16:9,17:[1,23],18:[1,24],19:[1,25],20:[1,8],21:[1,26],22:[1,27],23:[1,28],24:[1,29],25:[1,30],26:[1,31],27:[1,32],28:[1,33],29:[1,34],30:[1,35],31:[1,36],32:[1,37],33:[1,38],34:[1,39],35:[1,40],36:[1,41],37:[1,42],38:[1,43],39:[1,44],40:[1,45],41:[1,46],42:[1,47],43:[1,48],44:[1,49],45:11,46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:[1,55],52:[1,56],53:[1,57],54:[1,58],55:[1,59],56:12,57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:13,66:[1,68],67:[1,69],68:[1,70],69:14,70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:15,78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],85:[1,22],98:[1,21],100:[1,4],101:[1,18],103:[1,10],108:[1,16],111:[1,3],116:[1,5],117:[1,6],118:[1,7],120:[1,17],121:[1,19],122:[1,20]},{1:[3]},{5:[1,83],112:[1,84],115:[1,85]},{113:[1,86],114:[1,87]},{113:[1,88],114:[1,89]},{4:90,16:9,17:[1,23],18:[1,24],19:[1,25],20:[1,8],21:[1,26],22:[1,27],23:[1,28],24:[1,29],25:[1,30],26:[1,31],27:[1,32],28:[1,33],29:[1,34],30:[1,35],31:[1,36],32:[1,37],33:[1,38],34:[1,39],35:[1,40],36:[1,41],37:[1,42],38:[1,43],39:[1,44],40:[1,45],41:[1,46],42:[1,47],43:[1,48],44:[1,49],45:11,46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:[1,55],52:[1,56],53:[1,57],54:[1,58],55:[1,59],56:12,57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:13,66:[1,68],67:[1,69],68:[1,70],69:14,70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:15,78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],85:[1,22],98:[1,21],100:[1,4],101:[1,18],103:[1,10],108:[1,16],111:[1,3],116:[1,5],117:[1,6],118:[1,7],120:[1,17],121:[1,19],122:[1,20]},{4:91,16:9,17:[1,23],18:[1,24],19:[1,25],20:[1,8],21:[1,26],22:[1,27],23:[1,28],24:[1,29],25:[1,30],26:[1,31],27:[1,32],28:[1,33],29:[1,34],30:[1,35],31:[1,36],32:[1,37],33:[1,38],34:[1,39],35:[1,40],36:[1,41],37:[1,42],38:[1,43],39:[1,44],40:[1,45],41:[1,46],42:[1,47],43:[1,48],44:[1,49],45:11,46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:[1,55],52:[1,56],53:[1,57],54:[1,58],55:[1,59],56:12,57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:13,66:[1,68],67:[1,69],68:[1,70],69:14,70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:15,78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],85:[1,22],98:[1,21],100:[1,4],101:[1,18],103:[1,10],108:[1,16],111:[1,3],116:[1,5],117:[1,6],118:[1,7],120:[1,17],121:[1,19],122:[1,20]},{4:92,16:9,17:[1,23],18:[1,24],19:[1,25],20:[1,8],21:[1,26],22:[1,27],23:[1,28],24:[1,29],25:[1,30],26:[1,31],27:[1,32],28:[1,33],29:[1,34],30:[1,35],31:[1,36],32:[1,37],33:[1,38],34:[1,39],35:[1,40],36:[1,41],37:[1,42],38:[1,43],39:[1,44],40:[1,45],41:[1,46],42:[1,47],43:[1,48],44:[1,49],45:11,46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:[1,55],52:[1,56],53:[1,57],54:[1,58],55:[1,59],56:12,57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:13,66:[1,68],67:[1,69],68:[1,70],69:14,70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:15,78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],85:[1,22],98:[1,21],100:[1,4],101:[1,18],103:[1,10],108:[1,16],111:[1,3],116:[1,5],117:[1,6],118:[1,7],120:[1,17],121:[1,19],122:[1,20]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],113:[1,93],114:[1,94]},{6:98,7:[1,100],8:[1,101],9:99,10:[1,102],11:[1,103],12:95,113:[1,96],114:[1,97]},{6:98,7:[1,100],8:[1,101],9:99,10:[1,102],11:[1,103],12:104,113:[1,105],114:[1,106]},{113:[1,108],114:[1,107]},{113:[1,110],114:[1,109]},{113:[1,112],114:[1,111]},{113:[1,114],114:[1,113]},{113:[1,115],114:[1,116]},{113:[1,117],114:[1,118]},{113:[1,119],114:[1,120]},{113:[1,121],114:[1,122]},{113:[1,123],114:[1,124]},{113:[1,125],114:[1,126]},{113:[1,127],114:[1,128]},{113:[1,129],114:[1,130]},{7:[2,10],8:[2,10],10:[2,10],11:[2,10],113:[2,10],114:[2,10]},{7:[2,11],8:[2,11],10:[2,11],11:[2,11],113:[2,11],114:[2,11]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],113:[2,12],114:[2,12]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],113:[2,14],114:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],113:[2,15],114:[2,15]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],113:[2,16],114:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],113:[2,17],114:[2,17]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],113:[2,18],114:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],113:[2,19],114:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],113:[2,20],114:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],113:[2,21],114:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],113:[2,22],114:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],113:[2,23],114:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],113:[2,24],114:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],113:[2,25],114:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],113:[2,26],114:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],113:[2,27],114:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],113:[2,28],114:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],113:[2,29],114:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],113:[2,30],114:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],113:[2,31],114:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],113:[2,32],114:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],113:[2,33],114:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],113:[2,34],114:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],113:[2,35],114:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],113:[2,36],114:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],113:[2,37],114:[2,37]},{113:[2,38],114:[2,38]},{113:[2,39],114:[2,39]},{113:[2,40],114:[2,40]},{113:[2,41],114:[2,41]},{113:[2,42],114:[2,42]},{113:[2,43],114:[2,43]},{113:[2,44],114:[2,44]},{113:[2,45],114:[2,45]},{113:[2,46],114:[2,46]},{113:[2,47],114:[2,47]},{113:[2,48],114:[2,48]},{113:[2,49],114:[2,49]},{113:[2,50],114:[2,50]},{113:[2,51],114:[2,51]},{113:[2,52],114:[2,52]},{113:[2,53],114:[2,53]},{113:[2,54],114:[2,54]},{113:[2,55],114:[2,55]},{113:[2,56],114:[2,56]},{113:[2,57],114:[2,57]},{113:[2,58],114:[2,58]},{113:[2,59],114:[2,59]},{113:[2,60],114:[2,60]},{113:[2,61],114:[2,61]},{113:[2,62],114:[2,62]},{113:[2,63],114:[2,63]},{113:[2,64],114:[2,64]},{113:[2,65],114:[2,65]},{113:[2,66],114:[2,66]},{113:[2,67],114:[2,67]},{113:[2,68],114:[2,68]},{113:[2,69],114:[2,69]},{113:[2,70],114:[2,70]},{1:[2,1]},{4:131,16:9,17:[1,23],18:[1,24],19:[1,25],20:[1,8],21:[1,26],22:[1,27],23:[1,28],24:[1,29],25:[1,30],26:[1,31],27:[1,32],28:[1,33],29:[1,34],30:[1,35],31:[1,36],32:[1,37],33:[1,38],34:[1,39],35:[1,40],36:[1,41],37:[1,42],38:[1,43],39:[1,44],40:[1,45],41:[1,46],42:[1,47],43:[1,48],44:[1,49],45:11,46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:[1,55],52:[1,56],53:[1,57],54:[1,58],55:[1,59],56:12,57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:13,66:[1,68],67:[1,69],68:[1,70],69:14,70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:15,78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],85:[1,22],98:[1,21],100:[1,4],101:[1,18],103:[1,10],108:[1,16],111:[1,3],116:[1,5],117:[1,6],118:[1,7],120:[1,17],121:[1,19],122:[1,20]},{4:132,16:9,17:[1,23],18:[1,24],19:[1,25],20:[1,8],21:[1,26],22:[1,27],23:[1,28],24:[1,29],25:[1,30],26:[1,31],27:[1,32],28:[1,33],29:[1,34],30:[1,35],31:[1,36],32:[1,37],33:[1,38],34:[1,39],35:[1,40],36:[1,41],37:[1,42],38:[1,43],39:[1,44],40:[1,45],41:[1,46],42:[1,47],43:[1,48],44:[1,49],45:11,46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:[1,55],52:[1,56],53:[1,57],54:[1,58],55:[1,59],56:12,57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:13,66:[1,68],67:[1,69],68:[1,70],69:14,70:[1,71],71:[1,72],72:[1,73],73:[1,74],74:[1,75],75:[1,76],76:[1,77],77:15,78:[1,78],79:[1,79],80:[1,80],81:[1,81],82:[1,82],85:[1,22],98:[1,21],100:[1,4],101:[1,18],103:[1,10],108:[1,16],111:[1,3],116:[1,5],117:[1,6],118:[1,7],120:[1,17],121:[1,19],122:[1,20]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:133,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:155,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:156,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:157,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{5:[2,139],112:[2,139],115:[2,139],119:[2,139]},{5:[2,140],112:[2,140],115:[2,140],119:[2,140]},{112:[1,84],115:[1,85],119:[1,158]},{102:[1,159],109:[1,160],110:[1,161]},{102:[1,162],109:[1,163],110:[1,164]},{15:[1,165]},{15:[1,166]},{15:[1,167]},{15:[2,6]},{15:[2,7]},{15:[2,2]},{15:[2,3]},{15:[2,4]},{15:[2,5]},{15:[1,168]},{15:[1,169]},{15:[1,170]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:171,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:172,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:173,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:174,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:175,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:176,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:177,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:178,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{13:179,14:[1,180],15:[1,181]},{13:182,14:[1,180],15:[1,181]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:183,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:184,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:185,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:186,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:187,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:188,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:189,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:190,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:191,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:192,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:193,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:194,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:195,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{18:[1,136],19:[1,145],20:[1,147],46:[1,144],47:[1,141],78:[1,143],83:196,84:[1,134],85:[1,135],90:[1,137],98:[1,138],99:[1,139],100:[1,152],101:[1,140],102:[1,142],103:[1,146],104:[1,148],105:[1,149],108:[1,150],109:[1,151],110:[1,153],111:[1,154]},{5:[2,133],112:[2,133],115:[2,133],119:[2,133]},{5:[2,138],112:[1,84],115:[2,138],119:[2,138]},{5:[2,134],112:[2,134],115:[2,134],119:[2,134]},{5:[2,71],112:[2,71],115:[2,71],119:[2,71]},{5:[2,72],86:[1,197],87:[1,198],88:[1,199],89:[1,200],112:[2,72],115:[2,72],119:[2,72]},{5:[2,77],112:[2,77],115:[2,77],119:[2,77]},{91:[1,201],92:[1,202],93:[1,203],96:[1,204],97:[1,205]},{5:[2,86],86:[1,206],87:[1,207],88:[1,208],89:[1,209],112:[2,86],115:[2,86],119:[2,86]},{87:[1,210],88:[1,211],97:[1,212],100:[1,213]},{5:[2,99],87:[1,214],88:[1,215],112:[2,99],115:[2,99],119:[2,99]},{5:[2,104],92:[1,216],112:[2,104],115:[2,104],119:[2,104]},{5:[2,106],112:[2,106],115:[2,106],119:[2,106]},{5:[2,107],86:[1,217],87:[1,218],88:[1,219],89:[1,220],112:[2,107],115:[2,107],119:[2,107]},{5:[2,114],112:[2,114],115:[2,114],119:[2,114]},{5:[2,115],112:[2,115],115:[2,115],119:[2,115]},{5:[2,116],87:[1,221],88:[1,222],112:[2,116],115:[2,116],119:[2,116]},{5:[2,119],112:[2,119],115:[2,119],119:[2,119]},{5:[2,120],112:[2,120],115:[2,120],119:[2,120]},{106:[1,223],107:[1,224]},{5:[2,125],92:[1,225],112:[2,125],115:[2,125],119:[2,125]},{5:[2,127],112:[2,127],115:[2,127],119:[2,127]},{5:[2,128],92:[1,226],112:[2,128],115:[2,128],119:[2,128]},{5:[2,130],112:[2,130],115:[2,130],119:[2,130]},{5:[2,131],92:[1,227],112:[2,131],115:[2,131],119:[2,131]},{5:[2,135],112:[2,135],115:[2,135],119:[2,135]},{5:[2,136],112:[2,136],115:[2,136],119:[2,136]},{5:[2,137],112:[2,137],115:[2,137],119:[2,137]},{5:[2,141],112:[2,141],115:[2,141],119:[2,141]},{5:[2,142],112:[2,142],115:[2,142],119:[2,142]},{5:[2,143],112:[2,143],115:[2,143],119:[2,143]},{5:[2,144],112:[2,144],115:[2,144],119:[2,144]},{5:[2,145],112:[2,145],115:[2,145],119:[2,145]},{5:[2,146],112:[2,146],115:[2,146],119:[2,146]},{5:[2,147],112:[2,147],115:[2,147],119:[2,147]},{5:[2,148],112:[2,148],115:[2,148],119:[2,148]},{5:[2,149],112:[2,149],115:[2,149],119:[2,149]},{5:[2,150],112:[2,150],115:[2,150],119:[2,150]},{5:[2,151],112:[2,151],115:[2,151],119:[2,151]},{5:[2,160],112:[2,160],115:[2,160],119:[2,160]},{5:[2,161],112:[2,161],115:[2,161],119:[2,161]},{5:[2,152],112:[2,152],115:[2,152],119:[2,152]},{5:[2,153],112:[2,153],115:[2,153],119:[2,153]},{5:[2,154],112:[2,154],115:[2,154],119:[2,154]},{5:[2,155],112:[2,155],115:[2,155],119:[2,155]},{5:[2,156],112:[2,156],115:[2,156],119:[2,156]},{5:[2,157],112:[2,157],115:[2,157],119:[2,157]},{5:[2,158],112:[2,158],115:[2,158],119:[2,158]},{5:[2,159],112:[2,159],115:[2,159],119:[2,159]},{5:[2,162],112:[2,162],115:[2,162],119:[2,162]},{5:[2,8],112:[2,8],115:[2,8],119:[2,8]},{5:[2,9],112:[2,9],115:[2,9],119:[2,9]},{5:[2,163],112:[2,163],115:[2,163],119:[2,163]},{5:[2,164],112:[2,164],115:[2,164],119:[2,164]},{5:[2,165],112:[2,165],115:[2,165],119:[2,165]},{5:[2,166],112:[2,166],115:[2,166],119:[2,166]},{5:[2,170],112:[2,170],115:[2,170],119:[2,170]},{5:[2,167],112:[2,167],115:[2,167],119:[2,167]},{5:[2,171],112:[2,171],115:[2,171],119:[2,171]},{5:[2,168],112:[2,168],115:[2,168],119:[2,168]},{5:[2,172],112:[2,172],115:[2,172],119:[2,172]},{5:[2,169],112:[2,169],115:[2,169],119:[2,169]},{5:[2,173],112:[2,173],115:[2,173],119:[2,173]},{5:[2,174],112:[2,174],115:[2,174],119:[2,174]},{5:[2,175],112:[2,175],115:[2,175],119:[2,175]},{5:[2,176],112:[2,176],115:[2,176],119:[2,176]},{5:[2,177],112:[2,177],115:[2,177],119:[2,177]},{5:[2,73],112:[2,73],115:[2,73],119:[2,73]},{5:[2,74],112:[2,74],115:[2,74],119:[2,74]},{5:[2,75],112:[2,75],115:[2,75],119:[2,75]},{5:[2,76],112:[2,76],115:[2,76],119:[2,76]},{5:[2,78],92:[1,228],112:[2,78],115:[2,78],119:[2,78]},{5:[2,80],112:[2,80],115:[2,80],119:[2,80]},{94:[1,229],95:[1,230]},{5:[2,83],112:[2,83],115:[2,83],119:[2,83]},{94:[1,231],95:[1,232]},{5:[2,87],112:[2,87],115:[2,87],119:[2,87]},{5:[2,88],112:[2,88],115:[2,88],119:[2,88]},{5:[2,89],112:[2,89],115:[2,89],119:[2,89]},{5:[2,90],112:[2,90],115:[2,90],119:[2,90]},{5:[2,91],92:[1,233],112:[2,91],115:[2,91],119:[2,91]},{5:[2,93],92:[1,234],112:[2,93],115:[2,93],119:[2,93]},{5:[2,95],92:[1,235],112:[2,95],115:[2,95],119:[2,95]},{5:[2,97],92:[1,236],112:[2,97],115:[2,97],119:[2,97]},{5:[2,100],92:[1,237],112:[2,100],115:[2,100],119:[2,100]},{5:[2,102],92:[1,238],112:[2,102],115:[2,102],119:[2,102]},{5:[2,105],112:[2,105],115:[2,105],119:[2,105]},{5:[2,108],92:[1,239],112:[2,108],115:[2,108],119:[2,108]},{5:[2,110],112:[2,110],115:[2,110],119:[2,110]},{5:[2,111],112:[2,111],115:[2,111],119:[2,111]},{5:[2,112],92:[1,240],112:[2,112],115:[2,112],119:[2,112]},{5:[2,117],112:[2,117],115:[2,117],119:[2,117]},{5:[2,118],112:[2,118],115:[2,118],119:[2,118]},{5:[2,121],92:[1,241],112:[2,121],115:[2,121],119:[2,121]},{5:[2,123],92:[1,242],112:[2,123],115:[2,123],119:[2,123]},{5:[2,126],112:[2,126],115:[2,126],119:[2,126]},{5:[2,129],112:[2,129],115:[2,129],119:[2,129]},{5:[2,132],112:[2,132],115:[2,132],119:[2,132]},{5:[2,79],112:[2,79],115:[2,79],119:[2,79]},{5:[2,81],112:[2,81],115:[2,81],119:[2,81]},{5:[2,82],112:[2,82],115:[2,82],119:[2,82]},{5:[2,84],112:[2,84],115:[2,84],119:[2,84]},{5:[2,85],112:[2,85],115:[2,85],119:[2,85]},{5:[2,92],112:[2,92],115:[2,92],119:[2,92]},{5:[2,94],112:[2,94],115:[2,94],119:[2,94]},{5:[2,96],112:[2,96],115:[2,96],119:[2,96]},{5:[2,98],112:[2,98],115:[2,98],119:[2,98]},{5:[2,101],112:[2,101],115:[2,101],119:[2,101]},{5:[2,103],112:[2,103],115:[2,103],119:[2,103]},{5:[2,109],112:[2,109],115:[2,109],119:[2,109]},{5:[2,113],112:[2,113],115:[2,113],119:[2,113]},{5:[2,122],112:[2,122],115:[2,122],119:[2,122]},{5:[2,124],112:[2,124],115:[2,124],119:[2,124]}],
defaultActions: {83:[2,1],98:[2,6],99:[2,7],100:[2,2],101:[2,3],102:[2,4],103:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


function parseIpPort(ipPortStr, which) {
  ipPortStr = ipPortStr.trim();
  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }

  var t1 = {and: []};
  var t2 = {and: []};
  var xff;
  var dns;

  if (ip1 !== -1) {
    if (ip1 === ip2) {
        t1.and.push({term: {a1: ip1>>>0}});
        t2.and.push({term: {a2: ip1>>>0}});
        xff = {term: {xff: ip1>>>0}};
        dns = {term: {dnsip: ip1>>>0}};
    } else {
        t1.and.push({range: {a1: {from: ip1>>>0, to: ip2>>>0}}});
        t2.and.push({range: {a2: {from: ip1>>>0, to: ip2>>>0}}});
        xff =  {range: {xff: {from: ip1>>>0, to: ip2>>>0}}};
        dns =  {range: {dnsip: {from: ip1>>>0, to: ip2>>>0}}};
    }
  }

  if (port !== -1) {
    t1.and.push({term: {p1: port}});
    t2.and.push({term: {p2: port}});
  }

  if (t1.and.length === 1) {
      t1 = t1.and[0];
      t2 = t2.and[0];
  }

  switch(which) {
  case 0:
    if (xff)
        return {or: [t1, t2, xff]};
    else
        return {or: [t1, t2]};
  case 1:
    return t1;
  case 2:
    return t2;
  case 3:
    if (!xff)
        throw "xff doesn't support port only";
    return xff;
  case 4:
    if (!dns)
        throw "dns doesn't support port only";
    return dns;
  }
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}
/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 15
break;
case 2:return 14
break;
case 3:return 85
break;
case 4:return 72
break;
case 5:return 71
break;
case 6:return 70
break;
case 7:return 'asn.xff'
break;
case 8:return 18
break;
case 9:return "cert.alt.cnt"
break;
case 10:return "cert.alt"
break;
case 11:return "cert.cnt"
break;
case 12:return "cert.issuer.cn"
break;
case 13:return "cert.issuer.on"
break;
case 14:return "cert.serial"
break;
case 15:return "cert.subject.cn"
break;
case 16:return "cert.subject.on"
break;
case 17:return 98
break;
case 18:return 68
break;
case 19:return 67
break;
case 20:return 66
break;
case 21:return 'country.xff'
break;
case 22:return 17
break;
case 23:if (yy.emailSearch) return 33
break;
case 24:if (yy.emailSearch) return 63
break;
case 25:if (yy.emailSearch) return 34
break;
case 26:if (yy.emailSearch) return 49
break;
case 27:if (yy.emailSearch) return 35
break;
case 28:if (yy.emailSearch) return 62
break;
case 29:if (yy.emailSearch) return 36
break;
case 30:if (yy.emailSearch) return 59
break;
case 31:if (yy.emailSearch) return 37
break;
case 32:if (yy.emailSearch) return 60
break;
case 33:if (yy.emailSearch) return 38
break;
case 34:if (yy.emailSearch) return 61
break;
case 35:if (yy.emailSearch) return 39
break;
case 36:if (yy.emailSearch) return 50
break;
case 37:if (yy.emailSearch) return 40
break;
case 38:if (yy.emailSearch) return 73
break;
case 39:if (yy.emailSearch) return 41
break;
case 40:if (yy.emailSearch) return 74
break;
case 41:return "header.dst.cnt"
break;
case 42:return "header.dst"
break;
case 43:return "header"
break;
case 44:return "header.src.cnt"
break;
case 45:return "header.src"
break;
case 46:return "host.cnt"
break;
case 47:return "host"
break;
case 48:return "icmp"
break;
case 49:return "id"
break;
case 50:return "ip.dns.cnt"
break;
case 51:return "ip.dns"
break;
case 52:return "ip.dst"
break;
case 53:return "ip"
break;
case 54:return "ip.src"
break;
case 55:return "ip.xff.cnt"
break;
case 56:return "ip.xff"
break;
case 57:return 46
break;
case 58:return "oldheader"
break;
case 59:return 19
break;
case 60:return 22
break;
case 61:return 103
break;
case 62:return 21
break;
case 63:return 20
break;
case 64:return "rootId"
break;
case 65:return "ssh.key.cnt"
break;
case 66:return "ssh.key"
break;
case 67:return "ssh.ver.cnt"
break;
case 68:return "ssh.ver"
break;
case 69:return 32
break;
case 70:return 108
break;
case 71:return "tcp"
break;
case 72:return "ua.cnt"
break;
case 73:return "ua"
break;
case 74:return "udp"
break;
case 75:return "uri.cnt"
break;
case 76:return "uri"
break;
case 77:return "user.cnt"
break;
case 78:return "user"
break;
case 79:return 84
break;
case 80:return 104
break;
case 81:return 8
break;
case 82:return 7
break;
case 83:return 11
break;
case 84:return 10
break;
case 85:return 114
break;
case 86:return 113
break;
case 87:return 113
break;
case 88:return 115
break;
case 89:return 115
break;
case 90:return 112
break;
case 91:return 112
break;
case 92:return 118
break;
case 93:return 119
break;
case 94:return 116
break;
case 95:return 5
break;
case 96:return 'INVALID'
break;
case 97:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:[0-9]+\b)/,/^(?:([0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\/[0-9]{1,2})?(:[0-9]{1,5})?\b)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:databytes)/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:host\.cnt)/,/^(?:host)/,/^(?:icmp)/,/^(?:id)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:node)/,/^(?:oldheader)/,/^(?:packets)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rootId)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:udp)/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"]+")/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}