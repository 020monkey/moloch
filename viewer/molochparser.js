/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"IPMATCHLIST":15,"NUMBER":16,"NUMBERLIST":17,"HEADER":18,"EMAIL_HEADER":19,"HTTP_HEADER":20,"PLUGIN":21,"HEADER_CNT":22,"EMAIL_HEADER_CNT":23,"HTTP_HEADER_CNT":24,"PLUGIN_CNT":25,"RANGEFIELD":26,"databytes":27,"databytes.src":28,"databytes.dst":29,"bytes":30,"bytes.src":31,"bytes.dst":32,"packets":33,"packets.src":34,"packets.dst":35,"port.dst":36,"port.socks":37,"port.src":38,"http.uri.cnt":39,"http.uri.key.cnt":40,"http.uri.path.cnt":41,"http.uri.value.cnt":42,"cert.cnt":43,"ip.dns.cnt":44,"ip.email.cnt":45,"ip.xff.cnt":46,"http.md5.cnt":47,"http.user-agent.cnt":48,"http.version.src.cnt":49,"http.version.dst.cnt":50,"user.cnt":51,"host.dns.cnt":52,"host.email.cnt":53,"host.http.cnt":54,"http.hasheader.src.cnt":55,"http.hasheader.dst.cnt":56,"tags.cnt":57,"email.content-type.cnt":58,"email.dst.cnt":59,"email.fn.cnt":60,"email.hasheader.cnt":61,"email.message-id.cnt":62,"email.md5.cnt":63,"email.mime-version.cnt":64,"email.src.cnt":65,"email.subject.cnt":66,"email.x-mailer.cnt":67,"cert.alt.cnt":68,"smb.domain.cnt":69,"smb.fn.cnt":70,"smb.host.cnt":71,"smb.os.cnt":72,"smb.share.cnt":73,"smb.user.cnt":74,"smb.ver.cnt":75,"ssh.key.cnt":76,"ssh.ver.cnt":77,"irc.nick.cnt":78,"irc.channel.cnt":79,"LOTERMFIELD":80,"node":81,"host.dns":82,"host.socks":83,"host.email":84,"host.http":85,"user":86,"email.dst":87,"email.src":88,"cert.subject.cn":89,"cert.issuer.cn":90,"cert.serial":91,"cert.alt":92,"ssh.ver":93,"payload8.dst.hex":94,"payload8.src.hex":95,"HEXTERMFIELD":96,"payload8.dst.utf8":97,"payload8.src.utf8":98,"TERMFIELD":99,"id":100,"ssh.key":101,"email.message-id":102,"email.md5":103,"email.mime-version":104,"email.fn":105,"email.content-type":106,"http.md5":107,"http.uri.key":108,"http.uri.path":109,"http.uri.value":110,"http.version.src":111,"http.version.dst":112,"irc.nick":113,"irc.channel":114,"rootId":115,"smb.domain":116,"smb.fn":117,"smb.host":118,"smb.os":119,"smb.share":120,"smb.user":121,"socks.user":122,"smb.ver":123,"UPTERMFIELD":124,"country.dns":125,"country.dst":126,"country.email":127,"country.socks":128,"country.src":129,"country.xff":130,"rir.dns":131,"rir.dst":132,"rir.email":133,"rir.socks":134,"rir.src":135,"rir.xff":136,"LOTEXTFIELD":137,"asn.src":138,"asn.dst":139,"asn.dns":140,"asn.email":141,"asn.socks":142,"asn.xff":143,"email.subject":144,"email.hasheader":145,"email.x-mailer":146,"cert.subject.on":147,"cert.issuer.on":148,"TEXTFIELD":149,"http.uri":150,"http.user-agent":151,"IPFIELD":152,"ip":153,"ip.src":154,"ip.dst":155,"ip.xff":156,"ip.dns":157,"ip.email":158,"ip.socks":159,"STR":160,"ID":161,"asn":162,"dns":163,"dst":164,"email":165,"src":166,"xff":167,"cert":168,"alt":169,"cnt":170,"issuer":171,"cn":172,"on":173,"serial":174,"subject":175,"country":176,"hasheader":177,"ua":178,"header":179,"host":180,"http":181,"md5":182,"uri":183,"icmp":184,"socks":185,"port":186,"protocol":187,"rir":188,"ssh":189,"key":190,"ver":191,"tags":192,"tcp":193,"udp":194,"QUOTEDSTR":195,"REGEXSTR":196,"LOWERLIST":197,"ANYLIST":198,"PROTOCOLNUMBER":199,"PROTOCOLLIST":200,"&&":201,"||":202,"!":203,"-":204,"(":205,")":206,"==":207,"!=":208,"EXISTS":209,"file":210,"http.hasheader":211,"http.hasheader.src":212,"http.hasheader.dst":213,"http.version":214,"payload8.hex":215,"payload8.utf8":216,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"IPMATCHLIST",16:"NUMBER",17:"NUMBERLIST",19:"EMAIL_HEADER",20:"HTTP_HEADER",21:"PLUGIN",23:"EMAIL_HEADER_CNT",24:"HTTP_HEADER_CNT",25:"PLUGIN_CNT",27:"databytes",28:"databytes.src",29:"databytes.dst",30:"bytes",31:"bytes.src",32:"bytes.dst",33:"packets",34:"packets.src",35:"packets.dst",36:"port.dst",37:"port.socks",38:"port.src",39:"http.uri.cnt",40:"http.uri.key.cnt",41:"http.uri.path.cnt",42:"http.uri.value.cnt",43:"cert.cnt",44:"ip.dns.cnt",45:"ip.email.cnt",46:"ip.xff.cnt",47:"http.md5.cnt",48:"http.user-agent.cnt",49:"http.version.src.cnt",50:"http.version.dst.cnt",51:"user.cnt",52:"host.dns.cnt",53:"host.email.cnt",54:"host.http.cnt",55:"http.hasheader.src.cnt",56:"http.hasheader.dst.cnt",57:"tags.cnt",58:"email.content-type.cnt",59:"email.dst.cnt",60:"email.fn.cnt",61:"email.hasheader.cnt",62:"email.message-id.cnt",63:"email.md5.cnt",64:"email.mime-version.cnt",65:"email.src.cnt",66:"email.subject.cnt",67:"email.x-mailer.cnt",68:"cert.alt.cnt",69:"smb.domain.cnt",70:"smb.fn.cnt",71:"smb.host.cnt",72:"smb.os.cnt",73:"smb.share.cnt",74:"smb.user.cnt",75:"smb.ver.cnt",76:"ssh.key.cnt",77:"ssh.ver.cnt",78:"irc.nick.cnt",79:"irc.channel.cnt",81:"node",82:"host.dns",83:"host.socks",84:"host.email",85:"host.http",86:"user",87:"email.dst",88:"email.src",89:"cert.subject.cn",90:"cert.issuer.cn",91:"cert.serial",92:"cert.alt",93:"ssh.ver",94:"payload8.dst.hex",95:"payload8.src.hex",97:"payload8.dst.utf8",98:"payload8.src.utf8",100:"id",101:"ssh.key",102:"email.message-id",103:"email.md5",104:"email.mime-version",105:"email.fn",106:"email.content-type",107:"http.md5",108:"http.uri.key",109:"http.uri.path",110:"http.uri.value",111:"http.version.src",112:"http.version.dst",113:"irc.nick",114:"irc.channel",115:"rootId",116:"smb.domain",117:"smb.fn",118:"smb.host",119:"smb.os",120:"smb.share",121:"smb.user",122:"socks.user",123:"smb.ver",125:"country.dns",126:"country.dst",127:"country.email",128:"country.socks",129:"country.src",130:"country.xff",131:"rir.dns",132:"rir.dst",133:"rir.email",134:"rir.socks",135:"rir.src",136:"rir.xff",138:"asn.src",139:"asn.dst",140:"asn.dns",141:"asn.email",142:"asn.socks",143:"asn.xff",144:"email.subject",145:"email.hasheader",146:"email.x-mailer",147:"cert.subject.on",148:"cert.issuer.on",150:"http.uri",151:"http.user-agent",153:"ip",154:"ip.src",155:"ip.dst",156:"ip.xff",157:"ip.dns",158:"ip.email",159:"ip.socks",161:"ID",162:"asn",163:"dns",164:"dst",165:"email",166:"src",167:"xff",168:"cert",169:"alt",170:"cnt",171:"issuer",172:"cn",173:"on",174:"serial",175:"subject",176:"country",177:"hasheader",178:"ua",179:"header",180:"host",181:"http",182:"md5",183:"uri",184:"icmp",185:"socks",186:"port",187:"protocol",188:"rir",189:"ssh",190:"key",191:"ver",192:"tags",193:"tcp",194:"udp",195:"QUOTEDSTR",196:"REGEXSTR",197:"LOWERLIST",198:"ANYLIST",201:"&&",202:"||",203:"!",204:"-",205:"(",206:")",207:"==",208:"!=",209:"EXISTS",210:"file",211:"http.hasheader",212:"http.hasheader.src",213:"http.hasheader.dst",214:"http.version",215:"payload8.hex",216:"payload8.utf8"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[13,1],[13,1],[18,1],[18,1],[18,1],[22,1],[22,1],[22,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[96,1],[96,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[99,1],[124,1],[124,1],[124,1],[124,1],[124,1],[124,1],[124,1],[124,1],[124,1],[124,1],[124,1],[124,1],[137,1],[137,1],[137,1],[137,1],[137,1],[137,1],[137,1],[137,1],[137,1],[137,1],[137,1],[149,1],[149,1],[152,1],[152,1],[152,1],[152,1],[152,1],[152,1],[152,1],[160,1],[160,1],[160,2],[160,2],[160,2],[160,2],[160,2],[160,1],[160,2],[160,3],[160,2],[160,3],[160,3],[160,2],[160,3],[160,3],[160,1],[160,2],[160,2],[160,2],[160,2],[160,2],[160,2],[160,3],[160,2],[160,3],[160,2],[160,3],[160,2],[160,3],[160,2],[160,3],[160,1],[160,2],[160,3],[160,2],[160,3],[160,1],[160,2],[160,2],[160,3],[160,2],[160,3],[160,2],[160,3],[160,1],[160,1],[160,2],[160,3],[160,2],[160,2],[160,3],[160,2],[160,2],[160,2],[160,3],[160,1],[160,1],[160,1],[160,2],[160,2],[160,2],[160,1],[160,1],[160,2],[160,2],[160,2],[160,2],[160,2],[160,2],[160,2],[160,3],[160,2],[160,3],[160,1],[160,2],[160,1],[160,1],[160,2],[160,1],[160,1],[160,2],[160,1],[160,1],[160,1],[160,1],[160,1],[160,1],[160,1],[160,1],[199,1],[199,1],[199,1],[199,1],[200,1],[200,1],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 18:this.$ = 'db'
break;
case 19:this.$ = 'db1'
break;
case 20:this.$ = 'db2'
break;
case 21:this.$ = 'by'
break;
case 22:this.$ = 'by1'
break;
case 23:this.$ = 'by2'
break;
case 24:this.$ = 'pa'
break;
case 25:this.$ = 'pa1'
break;
case 26:this.$ = 'pa2'
break;
case 27:this.$ = 'p2'
break;
case 28:this.$ = 'sockspo'
break;
case 29:this.$ = 'p1'
break;
case 30:this.$ = 'uscnt'
break;
case 31:this.$ = 'hkeycnt'
break;
case 32:this.$ = 'hpathcnt'
break;
case 33:this.$ = 'hvalcnt'
break;
case 34:this.$ = 'tlscnt'
break;
case 35:this.$ = 'dnsipcnt'
break;
case 36:this.$ = 'eipcnt'
break;
case 37:this.$ = 'xffscnt'
break;
case 38:this.$ = 'hmd5cnt'
break;
case 39:this.$ = 'uacnt'
break;
case 40:this.$ = 'hsvercnt'
break;
case 41:this.$ = 'hdvercnt'
break;
case 42:this.$ = 'usercnt'
break;
case 43:this.$ = 'dnshocnt'
break;
case 44:this.$ = 'ehocnt'
break;
case 45:this.$ = 'hocnt'
break;
case 46:this.$ = 'hh1cnt'
break;
case 47:this.$ = 'hh2cnt'
break;
case 48:this.$ = 'tacnt'
break;
case 49:this.$ = 'ectcnt'
break;
case 50:this.$ = 'edstcnt'
break;
case 51:this.$ = 'efncnt'
break;
case 52:this.$ = 'ehhcnt'
break;
case 53:this.$ = 'eidcnt'
break;
case 54:this.$ = 'emd5cnt'
break;
case 55:this.$ = 'emvcnt'
break;
case 56:this.$ = 'esrccnt'
break;
case 57:this.$ = 'esubcnt'
break;
case 58:this.$ = 'euacnt'
break;
case 59:this.$ = 'tls.altcnt'
break;
case 60:this.$ = 'smbdmcnt'
break;
case 61:this.$ = 'smbfncnt'
break;
case 62:this.$ = 'smbhocnt'
break;
case 63:this.$ = 'smboscnt'
break;
case 64:this.$ = 'smbsharecnt'
break;
case 65:this.$ = 'smbusercnt'
break;
case 66:this.$ = 'smbvercnt'
break;
case 67:this.$ = 'sshkeycnt'
break;
case 68:this.$ = 'sshvercnt'
break;
case 69:this.$ = 'ircnckcnt'
break;
case 70:this.$ = 'ircchcnt'
break;
case 71:this.$ = 'no'
break;
case 72:this.$ = 'dnsho'
break;
case 73:this.$ = 'socksho'
break;
case 74:this.$ = 'eho'
break;
case 75:this.$ = 'ho'
break;
case 76:this.$ = 'user'
break;
case 77:this.$ = 'edst'
break;
case 78:this.$ = 'esrc'
break;
case 79:this.$ = 'tls.sCn'
break;
case 80:this.$ = 'tls.iCn'
break;
case 81:this.$ = 'tls.sn'
break;
case 82:this.$ = 'tls.alt'
break;
case 83:this.$ = 'sshver'
break;
case 84:this.$ = 'fb2'
break;
case 85:this.$ = 'fb1'
break;
case 86:this.$ = 'fb2'
break;
case 87:this.$ = 'fb1'
break;
case 88:this.$ = '_id'
break;
case 89:this.$ = 'sshkey'
break;
case 90:this.$ = 'eid'
break;
case 91:this.$ = 'emd5'
break;
case 92:this.$ = 'emv'
break;
case 93:this.$ = 'efn'
break;
case 94:this.$ = 'ect'
break;
case 95:this.$ = 'hmd5'
break;
case 96:this.$ = 'hkey'
break;
case 97:this.$ = 'hpath'
break;
case 98:this.$ = 'hval'
break;
case 99:this.$ = 'hsver'
break;
case 100:this.$ = 'hdver'
break;
case 101:this.$ = 'ircnck'
break;
case 102:this.$ = 'ircch'
break;
case 103:this.$ = 'ro'
break;
case 104:this.$ = 'smbdm'
break;
case 105:this.$ = 'smbfn'
break;
case 106:this.$ = 'smbho'
break;
case 107:this.$ = 'smbos'
break;
case 108:this.$ = 'smbsh'
break;
case 109:this.$ = 'smbuser'
break;
case 110:this.$ = 'socksuser'
break;
case 111:this.$ = 'smbver'
break;
case 112:this.$ = 'gdnsip'
break;
case 113:this.$ = 'g2'
break;
case 114:this.$ = 'geip'
break;
case 115:this.$ = 'gsocksip'
break;
case 116:this.$ = 'g1'
break;
case 117:this.$ = 'gxff'
break;
case 118:this.$ = 'rirdnsip'
break;
case 119:this.$ = 'rir2'
break;
case 120:this.$ = 'rireip'
break;
case 121:this.$ = 'rirsocksip'
break;
case 122:this.$ = 'rir1'
break;
case 123:this.$ = 'rirxff'
break;
case 124:this.$ = 'as1'
break;
case 125:this.$ = 'as2'
break;
case 126:this.$ = 'asdnsip'
break;
case 127:this.$ = 'aseip'
break;
case 128:this.$ = 'assocksip'
break;
case 129:this.$ = 'asxff'
break;
case 130:this.$ = 'esub'
break;
case 131:this.$ = 'ehh'
break;
case 132:this.$ = 'eua'
break;
case 133:this.$ = 'tls.sOn'
break;
case 134:this.$ = 'tls.iOn'
break;
case 135:this.$ = 'us'
break;
case 136:this.$ = 'ua'
break;
case 137:this.$ = "all"
break;
case 138:this.$ = "a1"
break;
case 139:this.$ = "a2"
break;
case 140:this.$ = "xff"
break;
case 141:this.$ = "dnsip"
break;
case 142:this.$ = "eip"
break;
case 143:this.$ = "socksip"
break;
case 240:this.$ = {bool: {must: [$$[$0-2], $$[$0]]}};
break;
case 241:this.$ = {bool: {should: [$$[$0-2], $$[$0]]}};
break;
case 242:this.$ = {not: $$[$0]};
break;
case 243:this.$ = -$$[$0];
break;
case 244:this.$ = $$[$0-1];
break;
case 245:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 246:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 247:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 248:this.$ = {terms: {}};
         this.$.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 249:this.$ = {not: {terms: {}}};
         this.$.not.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 250:this.$ = {term: {pr: protocolLookup($$[$0])}};
break;
case 251:this.$ = {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}};
break;
case 252:this.$ = {not: {term: {pr: protocolLookup($$[$0])}}};
break;
case 253:this.$ = {not: {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}}};
break;
case 254:this.$ = {bool: {should: [{range: {p1: {}}}, {range: {p2: {}}}]}};
         this.$.bool.should[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.bool.should[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 255:this.$ = {not: str2Query(yy, $$[$0-2], "term", $$[$0].toLowerCase())};
break;
case 256:this.$ = str2Query(yy, $$[$0-2], "term", $$[$0].toLowerCase());
break;
case 257:this.$ = {exists: {field: $$[$0-2]}};
break;
case 258:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 259:this.$ = {not: str2Query(yy, $$[$0-2], "term", utf8ToHex($$[$0]))};
break;
case 260:this.$ = str2Query(yy, $$[$0-2], "term", utf8ToHex($$[$0]));
break;
case 261:this.$ = {exists: {field: $$[$0-2]}};
break;
case 262:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 263:this.$ = {not: str2Query(yy, $$[$0-2], "term", $$[$0])};
break;
case 264:this.$ = str2Query(yy, $$[$0-2], "term", $$[$0]);
break;
case 265:this.$ = {exists: {field: $$[$0-2]}};
break;
case 266:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 267:this.$ = {not: str2Query(yy, $$[$0-2], "term", $$[$0].toUpperCase())};
break;
case 268:this.$ = str2Query(yy, $$[$0-2], "term", $$[$0].toUpperCase());
break;
case 269:this.$ = {exists: {field: $$[$0-2]}};
break;
case 270:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 271:this.$ = {not: str2Query(yy, $$[$0-2], "text", $$[$0].toLowerCase())};
break;
case 272:this.$ = str2Query(yy, $$[$0-2], "text", $$[$0].toLowerCase());
break;
case 273:this.$ = {exists: {field: $$[$0-2]}};
break;
case 274:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 275:this.$ = {not: str2Query(yy, $$[$0-2], "text", $$[$0])};
break;
case 276:this.$ = str2Query(yy, $$[$0-2], "text", $$[$0]);
break;
case 277:this.$ = {exists: {field: $$[$0-2]}};
break;
case 278:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 279:this.$ = str2Query(yy, str2Header(yy, $$[$0-2]), "text", $$[$0]);
break;
case 280:this.$ = {not: str2Query(yy, str2Header(yy, $$[$0-2]), "text", $$[$0])};
break;
case 281:this.$ = {exists: {field: str2Header(yy, $$[$0-2])}};
break;
case 282:this.$ = {not: {exists: {field: str2Header(yy, $$[$0-2])}}};
break;
case 283:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 284:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 285: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 286:
        this.$ = {terms: {}};
        this.$.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 287: this.$ = {not: {terms: {}}};
          this.$.not.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 288:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 289:this.$ = {bool: {should: [
                                {term: {p1: $$[$0]}},
                                {term: {p2: $$[$0]}},
                                {term: {sockspo: $$[$0]}}
                              ]}};
break;
case 290:this.$ = {bool: {should: [
                                {terms: {p1: CSVtoArray($$[$0])}},
                                {terms: {p2: CSVtoArray($$[$0])}},
                                {terms: {sockspo: CSVtoArray($$[$0])}}
                              ]}};
break;
case 291:this.$ = {bool: {must_not: [
                                  {term: {p1: $$[$0]}}, 
                                  {term: {p2: $$[$0]}},
                                  {term: {sockspo: $$[$0]}}
                                ]}};
break;
case 292:this.$ = {bool: {must_not: [
                                  {terms: {p1: CSVtoArray($$[$0])}}, 
                                  {terms: {p2: CSVtoArray($$[$0])}},
                                  {terms: {sockspo: CSVtoArray($$[$0])}}
                                ]}};
break;
case 293:this.$ = {exists: {field: $$[$0-2]}};
break;
case 294:this.$ = {not: {exists: {field: $$[$0-2]}}};
break;
case 295:this.$ = parseIpPort(yy, $$[$0],$$[$0-2]);
break;
case 296:this.$ = {not: parseIpPort(yy, $$[$0],$$[$0-2])};
break;
case 297: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("ta", tag);
        
break;
case 298: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("ta", tag)};
        
break;
case 299: var file = stripQuotes($$[$0]);
          this.$ = {fileand: file};
        
break;
case 300: var file = stripQuotes($$[$0]);
          this.$ = {not: {fileand: file}};
        
break;
case 301: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {should: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 302: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh1", tag);
        
break;
case 303: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh2", tag);
        
break;
case 304: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {must_not: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 305: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh1", tag)};
        
break;
case 306: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh2", tag)};
        
break;
case 307:
          this.$ = [str2Query(yy, "hsver", "term", $$[$0]),
                str2Query(yy, "hdver", "term", $$[$0])
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 308:
          this.$ = [str2Query(yy, "hsver", "term", $$[$0]),
                str2Query(yy, "hdver", "term", $$[$0])
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 309: var str = $$[$0].toLowerCase();
          this.$ = [str2Query(yy, "fb1", "term", str),
                str2Query(yy, "fb2", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 310: var str = $$[$0].toLowerCase();
          this.$ = [str2Query(yy, "fb1", "term", str),
                str2Query(yy, "fb2", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 311: var str = utf8ToHex($$[$0]);
        console.log($$[$0], "=>", str);
          this.$ = [str2Query(yy, "fb1", "term", str),
                str2Query(yy, "fb2", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 312: var str = utf8ToHex($$[$0]);
          this.$ = [str2Query(yy, "fb1", "term", str),
                str2Query(yy, "fb2", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 313: var str = $$[$0].toUpperCase();
          this.$ = str2IpListQuery(yy, "geo", "term", str);
          this.$ = {bool: {should: this.$}};
        
break;
case 314: var str = $$[$0].toUpperCase();
          this.$ = str2IpListQuery(yy, "geo", "term", str);
          this.$ = {bool: {must_not: this.$}};
        
break;
case 315: var str = $$[$0].toUpperCase();
          this.$ = str2IpListQuery(yy, "rir", "term", str);
          this.$ = {bool: {should: this.$}};
        
break;
case 316: var str = $$[$0].toUpperCase();
          this.$ = str2IpListQuery(yy, "rir", "term", str);
          this.$ = {bool: {must_not: this.$}};
        
break;
case 317: var str = $$[$0].toLowerCase();
          this.$ = str2IpListQuery(yy, "asn", "text", str);
          this.$ = {bool: {should: this.$}};
        
break;
case 318: var str = $$[$0].toLowerCase();
          this.$ = str2IpListQuery(yy, "asn", "text", str);
          this.$ = {bool: {must_not: this.$}};
        
break;
case 319: var str = $$[$0].toLowerCase();

          this.$ = [str2Query(yy, "ho", "term", str),
                str2Query(yy, "dnsho", "term", str),
                str2Query(yy, "eho", "term", str),
                str2Query(yy, "socksho", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 320: var str = $$[$0].toLowerCase();

          this.$ = [str2Query(yy, "ho", "term", str),
                str2Query(yy, "dnsho", "term", str),
                str2Query(yy, "eho", "term", str),
                str2Query(yy, "socksho", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
}
},
table: [{3:1,4:2,18:15,19:[1,149],20:[1,150],21:[1,151],22:16,23:[1,152],24:[1,153],25:[1,154],26:6,27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:[1,74],72:[1,75],73:[1,76],74:[1,77],75:[1,78],76:[1,79],77:[1,80],78:[1,81],79:[1,82],80:9,81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:[1,89],88:[1,90],89:[1,91],90:[1,92],91:[1,93],92:[1,94],93:[1,95],94:[1,96],95:[1,97],96:10,97:[1,98],98:[1,99],99:11,100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:[1,109],110:[1,110],111:[1,111],112:[1,112],113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:12,125:[1,124],126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:[1,135],137:13,138:[1,136],139:[1,137],140:[1,138],141:[1,139],142:[1,140],143:[1,141],144:[1,142],145:[1,143],146:[1,144],147:[1,145],148:[1,146],149:14,150:[1,147],151:[1,148],152:17,153:[1,155],154:[1,156],155:[1,157],156:[1,158],157:[1,159],158:[1,160],159:[1,161],162:[1,28],176:[1,26],180:[1,29],186:[1,8],187:[1,7],188:[1,27],192:[1,18],203:[1,3],204:[1,4],205:[1,5],210:[1,19],211:[1,20],212:[1,21],213:[1,22],214:[1,23],215:[1,24],216:[1,25]},{1:[3]},{5:[1,162],201:[1,163],202:[1,164]},{4:165,18:15,19:[1,149],20:[1,150],21:[1,151],22:16,23:[1,152],24:[1,153],25:[1,154],26:6,27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:[1,74],72:[1,75],73:[1,76],74:[1,77],75:[1,78],76:[1,79],77:[1,80],78:[1,81],79:[1,82],80:9,81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:[1,89],88:[1,90],89:[1,91],90:[1,92],91:[1,93],92:[1,94],93:[1,95],94:[1,96],95:[1,97],96:10,97:[1,98],98:[1,99],99:11,100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:[1,109],110:[1,110],111:[1,111],112:[1,112],113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:12,125:[1,124],126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:[1,135],137:13,138:[1,136],139:[1,137],140:[1,138],141:[1,139],142:[1,140],143:[1,141],144:[1,142],145:[1,143],146:[1,144],147:[1,145],148:[1,146],149:14,150:[1,147],151:[1,148],152:17,153:[1,155],154:[1,156],155:[1,157],156:[1,158],157:[1,159],158:[1,160],159:[1,161],162:[1,28],176:[1,26],180:[1,29],186:[1,8],187:[1,7],188:[1,27],192:[1,18],203:[1,3],204:[1,4],205:[1,5],210:[1,19],211:[1,20],212:[1,21],213:[1,22],214:[1,23],215:[1,24],216:[1,25]},{4:166,18:15,19:[1,149],20:[1,150],21:[1,151],22:16,23:[1,152],24:[1,153],25:[1,154],26:6,27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:[1,74],72:[1,75],73:[1,76],74:[1,77],75:[1,78],76:[1,79],77:[1,80],78:[1,81],79:[1,82],80:9,81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:[1,89],88:[1,90],89:[1,91],90:[1,92],91:[1,93],92:[1,94],93:[1,95],94:[1,96],95:[1,97],96:10,97:[1,98],98:[1,99],99:11,100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:[1,109],110:[1,110],111:[1,111],112:[1,112],113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:12,125:[1,124],126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:[1,135],137:13,138:[1,136],139:[1,137],140:[1,138],141:[1,139],142:[1,140],143:[1,141],144:[1,142],145:[1,143],146:[1,144],147:[1,145],148:[1,146],149:14,150:[1,147],151:[1,148],152:17,153:[1,155],154:[1,156],155:[1,157],156:[1,158],157:[1,159],158:[1,160],159:[1,161],162:[1,28],176:[1,26],180:[1,29],186:[1,8],187:[1,7],188:[1,27],192:[1,18],203:[1,3],204:[1,4],205:[1,5],210:[1,19],211:[1,20],212:[1,21],213:[1,22],214:[1,23],215:[1,24],216:[1,25]},{4:167,18:15,19:[1,149],20:[1,150],21:[1,151],22:16,23:[1,152],24:[1,153],25:[1,154],26:6,27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:[1,74],72:[1,75],73:[1,76],74:[1,77],75:[1,78],76:[1,79],77:[1,80],78:[1,81],79:[1,82],80:9,81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:[1,89],88:[1,90],89:[1,91],90:[1,92],91:[1,93],92:[1,94],93:[1,95],94:[1,96],95:[1,97],96:10,97:[1,98],98:[1,99],99:11,100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:[1,109],110:[1,110],111:[1,111],112:[1,112],113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:12,125:[1,124],126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:[1,135],137:13,138:[1,136],139:[1,137],140:[1,138],141:[1,139],142:[1,140],143:[1,141],144:[1,142],145:[1,143],146:[1,144],147:[1,145],148:[1,146],149:14,150:[1,147],151:[1,148],152:17,153:[1,155],154:[1,156],155:[1,157],156:[1,158],157:[1,159],158:[1,160],159:[1,161],162:[1,28],176:[1,26],180:[1,29],186:[1,8],187:[1,7],188:[1,27],192:[1,18],203:[1,3],204:[1,4],205:[1,5],210:[1,19],211:[1,20],212:[1,21],213:[1,22],214:[1,23],215:[1,24],216:[1,25]},{6:171,7:[1,173],8:[1,174],9:172,10:[1,175],11:[1,176],12:168,207:[1,169],208:[1,170]},{207:[1,177],208:[1,178]},{6:171,7:[1,173],8:[1,174],9:172,10:[1,175],11:[1,176],12:179,207:[1,180],208:[1,181]},{207:[1,183],208:[1,182]},{207:[1,185],208:[1,184]},{207:[1,187],208:[1,186]},{207:[1,189],208:[1,188]},{207:[1,191],208:[1,190]},{207:[1,193],208:[1,192]},{6:171,7:[1,173],8:[1,174],9:172,10:[1,175],11:[1,176],12:196,207:[1,194],208:[1,195]},{6:171,7:[1,173],8:[1,174],9:172,10:[1,175],11:[1,176],12:199,207:[1,197],208:[1,198]},{207:[1,200],208:[1,201]},{207:[1,202],208:[1,203]},{207:[1,204],208:[1,205]},{207:[1,206],208:[1,207]},{207:[1,208],208:[1,209]},{207:[1,210],208:[1,211]},{207:[1,212],208:[1,213]},{207:[1,214],208:[1,215]},{207:[1,216],208:[1,217]},{207:[1,218],208:[1,219]},{207:[1,220],208:[1,221]},{207:[1,222],208:[1,223]},{207:[1,225],208:[1,224]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],207:[2,18],208:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],207:[2,19],208:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],207:[2,20],208:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],207:[2,21],208:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],207:[2,22],208:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],207:[2,23],208:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],207:[2,24],208:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],207:[2,25],208:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],207:[2,26],208:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],207:[2,27],208:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],207:[2,28],208:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],207:[2,29],208:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],207:[2,30],208:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],207:[2,31],208:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],207:[2,32],208:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],207:[2,33],208:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],207:[2,34],208:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],207:[2,35],208:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],207:[2,36],208:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],207:[2,37],208:[2,37]},{7:[2,38],8:[2,38],10:[2,38],11:[2,38],207:[2,38],208:[2,38]},{7:[2,39],8:[2,39],10:[2,39],11:[2,39],207:[2,39],208:[2,39]},{7:[2,40],8:[2,40],10:[2,40],11:[2,40],207:[2,40],208:[2,40]},{7:[2,41],8:[2,41],10:[2,41],11:[2,41],207:[2,41],208:[2,41]},{7:[2,42],8:[2,42],10:[2,42],11:[2,42],207:[2,42],208:[2,42]},{7:[2,43],8:[2,43],10:[2,43],11:[2,43],207:[2,43],208:[2,43]},{7:[2,44],8:[2,44],10:[2,44],11:[2,44],207:[2,44],208:[2,44]},{7:[2,45],8:[2,45],10:[2,45],11:[2,45],207:[2,45],208:[2,45]},{7:[2,46],8:[2,46],10:[2,46],11:[2,46],207:[2,46],208:[2,46]},{7:[2,47],8:[2,47],10:[2,47],11:[2,47],207:[2,47],208:[2,47]},{7:[2,48],8:[2,48],10:[2,48],11:[2,48],207:[2,48],208:[2,48]},{7:[2,49],8:[2,49],10:[2,49],11:[2,49],207:[2,49],208:[2,49]},{7:[2,50],8:[2,50],10:[2,50],11:[2,50],207:[2,50],208:[2,50]},{7:[2,51],8:[2,51],10:[2,51],11:[2,51],207:[2,51],208:[2,51]},{7:[2,52],8:[2,52],10:[2,52],11:[2,52],207:[2,52],208:[2,52]},{7:[2,53],8:[2,53],10:[2,53],11:[2,53],207:[2,53],208:[2,53]},{7:[2,54],8:[2,54],10:[2,54],11:[2,54],207:[2,54],208:[2,54]},{7:[2,55],8:[2,55],10:[2,55],11:[2,55],207:[2,55],208:[2,55]},{7:[2,56],8:[2,56],10:[2,56],11:[2,56],207:[2,56],208:[2,56]},{7:[2,57],8:[2,57],10:[2,57],11:[2,57],207:[2,57],208:[2,57]},{7:[2,58],8:[2,58],10:[2,58],11:[2,58],207:[2,58],208:[2,58]},{7:[2,59],8:[2,59],10:[2,59],11:[2,59],207:[2,59],208:[2,59]},{7:[2,60],8:[2,60],10:[2,60],11:[2,60],207:[2,60],208:[2,60]},{7:[2,61],8:[2,61],10:[2,61],11:[2,61],207:[2,61],208:[2,61]},{7:[2,62],8:[2,62],10:[2,62],11:[2,62],207:[2,62],208:[2,62]},{7:[2,63],8:[2,63],10:[2,63],11:[2,63],207:[2,63],208:[2,63]},{7:[2,64],8:[2,64],10:[2,64],11:[2,64],207:[2,64],208:[2,64]},{7:[2,65],8:[2,65],10:[2,65],11:[2,65],207:[2,65],208:[2,65]},{7:[2,66],8:[2,66],10:[2,66],11:[2,66],207:[2,66],208:[2,66]},{7:[2,67],8:[2,67],10:[2,67],11:[2,67],207:[2,67],208:[2,67]},{7:[2,68],8:[2,68],10:[2,68],11:[2,68],207:[2,68],208:[2,68]},{7:[2,69],8:[2,69],10:[2,69],11:[2,69],207:[2,69],208:[2,69]},{7:[2,70],8:[2,70],10:[2,70],11:[2,70],207:[2,70],208:[2,70]},{207:[2,71],208:[2,71]},{207:[2,72],208:[2,72]},{207:[2,73],208:[2,73]},{207:[2,74],208:[2,74]},{207:[2,75],208:[2,75]},{207:[2,76],208:[2,76]},{207:[2,77],208:[2,77]},{207:[2,78],208:[2,78]},{207:[2,79],208:[2,79]},{207:[2,80],208:[2,80]},{207:[2,81],208:[2,81]},{207:[2,82],208:[2,82]},{207:[2,83],208:[2,83]},{207:[2,84],208:[2,84]},{207:[2,85],208:[2,85]},{207:[2,86],208:[2,86]},{207:[2,87],208:[2,87]},{207:[2,88],208:[2,88]},{207:[2,89],208:[2,89]},{207:[2,90],208:[2,90]},{207:[2,91],208:[2,91]},{207:[2,92],208:[2,92]},{207:[2,93],208:[2,93]},{207:[2,94],208:[2,94]},{207:[2,95],208:[2,95]},{207:[2,96],208:[2,96]},{207:[2,97],208:[2,97]},{207:[2,98],208:[2,98]},{207:[2,99],208:[2,99]},{207:[2,100],208:[2,100]},{207:[2,101],208:[2,101]},{207:[2,102],208:[2,102]},{207:[2,103],208:[2,103]},{207:[2,104],208:[2,104]},{207:[2,105],208:[2,105]},{207:[2,106],208:[2,106]},{207:[2,107],208:[2,107]},{207:[2,108],208:[2,108]},{207:[2,109],208:[2,109]},{207:[2,110],208:[2,110]},{207:[2,111],208:[2,111]},{207:[2,112],208:[2,112]},{207:[2,113],208:[2,113]},{207:[2,114],208:[2,114]},{207:[2,115],208:[2,115]},{207:[2,116],208:[2,116]},{207:[2,117],208:[2,117]},{207:[2,118],208:[2,118]},{207:[2,119],208:[2,119]},{207:[2,120],208:[2,120]},{207:[2,121],208:[2,121]},{207:[2,122],208:[2,122]},{207:[2,123],208:[2,123]},{207:[2,124],208:[2,124]},{207:[2,125],208:[2,125]},{207:[2,126],208:[2,126]},{207:[2,127],208:[2,127]},{207:[2,128],208:[2,128]},{207:[2,129],208:[2,129]},{207:[2,130],208:[2,130]},{207:[2,131],208:[2,131]},{207:[2,132],208:[2,132]},{207:[2,133],208:[2,133]},{207:[2,134],208:[2,134]},{207:[2,135],208:[2,135]},{207:[2,136],208:[2,136]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],207:[2,12],208:[2,12]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],207:[2,13],208:[2,13]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],207:[2,14],208:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],207:[2,15],208:[2,15]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],207:[2,16],208:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],207:[2,17],208:[2,17]},{207:[2,137],208:[2,137]},{207:[2,138],208:[2,138]},{207:[2,139],208:[2,139]},{207:[2,140],208:[2,140]},{207:[2,141],208:[2,141]},{207:[2,142],208:[2,142]},{207:[2,143],208:[2,143]},{1:[2,1]},{4:226,18:15,19:[1,149],20:[1,150],21:[1,151],22:16,23:[1,152],24:[1,153],25:[1,154],26:6,27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:[1,74],72:[1,75],73:[1,76],74:[1,77],75:[1,78],76:[1,79],77:[1,80],78:[1,81],79:[1,82],80:9,81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:[1,89],88:[1,90],89:[1,91],90:[1,92],91:[1,93],92:[1,94],93:[1,95],94:[1,96],95:[1,97],96:10,97:[1,98],98:[1,99],99:11,100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:[1,109],110:[1,110],111:[1,111],112:[1,112],113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:12,125:[1,124],126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:[1,135],137:13,138:[1,136],139:[1,137],140:[1,138],141:[1,139],142:[1,140],143:[1,141],144:[1,142],145:[1,143],146:[1,144],147:[1,145],148:[1,146],149:14,150:[1,147],151:[1,148],152:17,153:[1,155],154:[1,156],155:[1,157],156:[1,158],157:[1,159],158:[1,160],159:[1,161],162:[1,28],176:[1,26],180:[1,29],186:[1,8],187:[1,7],188:[1,27],192:[1,18],203:[1,3],204:[1,4],205:[1,5],210:[1,19],211:[1,20],212:[1,21],213:[1,22],214:[1,23],215:[1,24],216:[1,25]},{4:227,18:15,19:[1,149],20:[1,150],21:[1,151],22:16,23:[1,152],24:[1,153],25:[1,154],26:6,27:[1,30],28:[1,31],29:[1,32],30:[1,33],31:[1,34],32:[1,35],33:[1,36],34:[1,37],35:[1,38],36:[1,39],37:[1,40],38:[1,41],39:[1,42],40:[1,43],41:[1,44],42:[1,45],43:[1,46],44:[1,47],45:[1,48],46:[1,49],47:[1,50],48:[1,51],49:[1,52],50:[1,53],51:[1,54],52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:[1,67],65:[1,68],66:[1,69],67:[1,70],68:[1,71],69:[1,72],70:[1,73],71:[1,74],72:[1,75],73:[1,76],74:[1,77],75:[1,78],76:[1,79],77:[1,80],78:[1,81],79:[1,82],80:9,81:[1,83],82:[1,84],83:[1,85],84:[1,86],85:[1,87],86:[1,88],87:[1,89],88:[1,90],89:[1,91],90:[1,92],91:[1,93],92:[1,94],93:[1,95],94:[1,96],95:[1,97],96:10,97:[1,98],98:[1,99],99:11,100:[1,100],101:[1,101],102:[1,102],103:[1,103],104:[1,104],105:[1,105],106:[1,106],107:[1,107],108:[1,108],109:[1,109],110:[1,110],111:[1,111],112:[1,112],113:[1,113],114:[1,114],115:[1,115],116:[1,116],117:[1,117],118:[1,118],119:[1,119],120:[1,120],121:[1,121],122:[1,122],123:[1,123],124:12,125:[1,124],126:[1,125],127:[1,126],128:[1,127],129:[1,128],130:[1,129],131:[1,130],132:[1,131],133:[1,132],134:[1,133],135:[1,134],136:[1,135],137:13,138:[1,136],139:[1,137],140:[1,138],141:[1,139],142:[1,140],143:[1,141],144:[1,142],145:[1,143],146:[1,144],147:[1,145],148:[1,146],149:14,150:[1,147],151:[1,148],152:17,153:[1,155],154:[1,156],155:[1,157],156:[1,158],157:[1,159],158:[1,160],159:[1,161],162:[1,28],176:[1,26],180:[1,29],186:[1,8],187:[1,7],188:[1,27],192:[1,18],203:[1,3],204:[1,4],205:[1,5],210:[1,19],211:[1,20],212:[1,21],213:[1,22],214:[1,23],215:[1,24],216:[1,25]},{5:[2,242],201:[2,242],202:[2,242],206:[2,242]},{5:[2,243],201:[2,243],202:[2,243],206:[2,243]},{201:[1,163],202:[1,164],206:[1,228]},{16:[1,229]},{16:[1,230],17:[1,231]},{16:[1,232],17:[1,233]},{16:[2,6]},{16:[2,7]},{16:[2,2]},{16:[2,3]},{16:[2,4]},{16:[2,5]},{16:[1,236],17:[1,240],184:[1,237],193:[1,238],194:[1,239],197:[1,241],199:234,200:235},{16:[1,236],17:[1,240],184:[1,237],193:[1,238],194:[1,239],197:[1,241],199:242,200:243},{16:[1,244]},{16:[1,245],17:[1,246]},{16:[1,247],17:[1,248]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:249,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,250]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:281,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,282]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:283,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,284]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:285,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,286]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:287,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,288]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:289,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,290]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:291,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,292]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:293,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,294]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:295,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,296]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:297,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,298]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:299,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,300]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:301,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,302]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:303,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,304]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:305,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277],209:[1,306]},{16:[1,307]},{16:[1,308],17:[1,309]},{16:[1,310],17:[1,311]},{16:[1,312]},{13:314,14:[1,315],15:[1,316],16:[1,317],17:[1,318],209:[1,313]},{13:320,14:[1,315],15:[1,316],16:[1,317],17:[1,318],209:[1,319]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:321,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:322,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:323,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:324,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:325,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:326,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:327,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:328,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:329,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:330,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:331,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:332,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:333,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:334,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:335,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:336,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:337,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:338,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:339,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:340,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:341,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:342,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:343,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{14:[1,279],15:[1,280],16:[1,273],17:[1,278],30:[1,253],33:[1,263],81:[1,262],153:[1,261],160:344,161:[1,251],162:[1,252],165:[1,256],168:[1,254],176:[1,255],178:[1,270],179:[1,257],180:[1,258],181:[1,259],183:[1,272],184:[1,260],186:[1,264],187:[1,265],188:[1,266],189:[1,267],192:[1,268],193:[1,269],194:[1,271],195:[1,274],196:[1,275],197:[1,276],198:[1,277]},{5:[2,240],201:[2,240],202:[2,240],206:[2,240]},{5:[2,241],201:[1,163],202:[2,241],206:[2,241]},{5:[2,244],201:[2,244],202:[2,244],206:[2,244]},{5:[2,245],201:[2,245],202:[2,245],206:[2,245]},{5:[2,246],201:[2,246],202:[2,246],206:[2,246]},{5:[2,248],201:[2,248],202:[2,248],206:[2,248]},{5:[2,247],201:[2,247],202:[2,247],206:[2,247]},{5:[2,249],201:[2,249],202:[2,249],206:[2,249]},{5:[2,250],201:[2,250],202:[2,250],206:[2,250]},{5:[2,251],201:[2,251],202:[2,251],206:[2,251]},{5:[2,234],201:[2,234],202:[2,234],206:[2,234]},{5:[2,235],201:[2,235],202:[2,235],206:[2,235]},{5:[2,236],201:[2,236],202:[2,236],206:[2,236]},{5:[2,237],201:[2,237],202:[2,237],206:[2,237]},{5:[2,238],201:[2,238],202:[2,238],206:[2,238]},{5:[2,239],201:[2,239],202:[2,239],206:[2,239]},{5:[2,252],201:[2,252],202:[2,252],206:[2,252]},{5:[2,253],201:[2,253],202:[2,253],206:[2,253]},{5:[2,254],201:[2,254],202:[2,254],206:[2,254]},{5:[2,289],201:[2,289],202:[2,289],206:[2,289]},{5:[2,290],201:[2,290],202:[2,290],206:[2,290]},{5:[2,291],201:[2,291],202:[2,291],206:[2,291]},{5:[2,292],201:[2,292],202:[2,292],206:[2,292]},{5:[2,255],201:[2,255],202:[2,255],206:[2,255]},{5:[2,258],201:[2,258],202:[2,258],206:[2,258]},{5:[2,144],201:[2,144],202:[2,144],206:[2,144]},{5:[2,145],163:[1,345],164:[1,346],165:[1,347],166:[1,348],167:[1,349],201:[2,145],202:[2,145],206:[2,145]},{5:[2,151],201:[2,151],202:[2,151],206:[2,151]},{169:[1,350],170:[1,351],171:[1,352],174:[1,353],175:[1,354]},{5:[2,160],163:[1,355],164:[1,356],165:[1,357],166:[1,358],167:[1,359],201:[2,160],202:[2,160],206:[2,160]},{164:[1,360],166:[1,362],175:[1,363],177:[1,361],178:[1,364]},{5:[2,176],164:[1,365],166:[1,366],201:[2,176],202:[2,176],206:[2,176]},{5:[2,181],170:[1,367],201:[2,181],202:[2,181],206:[2,181]},{178:[1,369],182:[1,368],183:[1,370]},{5:[2,189],201:[2,189],202:[2,189],206:[2,189]},{5:[2,190],163:[1,371],164:[1,372],165:[1,373],166:[1,375],167:[1,376],185:[1,374],201:[2,190],202:[2,190],206:[2,190]},{5:[2,200],201:[2,200],202:[2,200],206:[2,200]},{5:[2,201],201:[2,201],202:[2,201],206:[2,201]},{5:[2,202],164:[1,377],166:[1,379],185:[1,378],201:[2,202],202:[2,202],206:[2,202]},{5:[2,206],201:[2,206],202:[2,206],206:[2,206]},{5:[2,207],163:[1,380],164:[1,381],165:[1,382],166:[1,384],167:[1,385],185:[1,383],201:[2,207],202:[2,207],206:[2,207]},{190:[1,386],191:[1,387]},{5:[2,218],170:[1,388],201:[2,218],202:[2,218],206:[2,218]},{5:[2,220],201:[2,220],202:[2,220],206:[2,220]},{5:[2,221],170:[1,389],201:[2,221],202:[2,221],206:[2,221]},{5:[2,223],201:[2,223],202:[2,223],206:[2,223]},{5:[2,224],170:[1,390],201:[2,224],202:[2,224],206:[2,224]},{5:[2,226],201:[2,226],202:[2,226],206:[2,226]},{5:[2,227],201:[2,227],202:[2,227],206:[2,227]},{5:[2,228],201:[2,228],202:[2,228],206:[2,228]},{5:[2,229],201:[2,229],202:[2,229],206:[2,229]},{5:[2,230],201:[2,230],202:[2,230],206:[2,230]},{5:[2,231],201:[2,231],202:[2,231],206:[2,231]},{5:[2,232],201:[2,232],202:[2,232],206:[2,232]},{5:[2,233],201:[2,233],202:[2,233],206:[2,233]},{5:[2,256],201:[2,256],202:[2,256],206:[2,256]},{5:[2,257],201:[2,257],202:[2,257],206:[2,257]},{5:[2,259],201:[2,259],202:[2,259],206:[2,259]},{5:[2,262],201:[2,262],202:[2,262],206:[2,262]},{5:[2,260],201:[2,260],202:[2,260],206:[2,260]},{5:[2,261],201:[2,261],202:[2,261],206:[2,261]},{5:[2,263],201:[2,263],202:[2,263],206:[2,263]},{5:[2,266],201:[2,266],202:[2,266],206:[2,266]},{5:[2,264],201:[2,264],202:[2,264],206:[2,264]},{5:[2,265],201:[2,265],202:[2,265],206:[2,265]},{5:[2,267],201:[2,267],202:[2,267],206:[2,267]},{5:[2,270],201:[2,270],202:[2,270],206:[2,270]},{5:[2,268],201:[2,268],202:[2,268],206:[2,268]},{5:[2,269],201:[2,269],202:[2,269],206:[2,269]},{5:[2,271],201:[2,271],202:[2,271],206:[2,271]},{5:[2,274],201:[2,274],202:[2,274],206:[2,274]},{5:[2,272],201:[2,272],202:[2,272],206:[2,272]},{5:[2,273],201:[2,273],202:[2,273],206:[2,273]},{5:[2,275],201:[2,275],202:[2,275],206:[2,275]},{5:[2,278],201:[2,278],202:[2,278],206:[2,278]},{5:[2,276],201:[2,276],202:[2,276],206:[2,276]},{5:[2,277],201:[2,277],202:[2,277],206:[2,277]},{5:[2,279],201:[2,279],202:[2,279],206:[2,279]},{5:[2,281],201:[2,281],202:[2,281],206:[2,281]},{5:[2,280],201:[2,280],202:[2,280],206:[2,280]},{5:[2,282],201:[2,282],202:[2,282],206:[2,282]},{5:[2,283],201:[2,283],202:[2,283],206:[2,283]},{5:[2,284],201:[2,284],202:[2,284],206:[2,284]},{5:[2,286],201:[2,286],202:[2,286],206:[2,286]},{5:[2,285],201:[2,285],202:[2,285],206:[2,285]},{5:[2,287],201:[2,287],202:[2,287],206:[2,287]},{5:[2,288],201:[2,288],202:[2,288],206:[2,288]},{5:[2,293],201:[2,293],202:[2,293],206:[2,293]},{5:[2,295],201:[2,295],202:[2,295],206:[2,295]},{5:[2,8],201:[2,8],202:[2,8],206:[2,8]},{5:[2,9],201:[2,9],202:[2,9],206:[2,9]},{5:[2,10],201:[2,10],202:[2,10],206:[2,10]},{5:[2,11],201:[2,11],202:[2,11],206:[2,11]},{5:[2,294],201:[2,294],202:[2,294],206:[2,294]},{5:[2,296],201:[2,296],202:[2,296],206:[2,296]},{5:[2,297],201:[2,297],202:[2,297],206:[2,297]},{5:[2,298],201:[2,298],202:[2,298],206:[2,298]},{5:[2,299],201:[2,299],202:[2,299],206:[2,299]},{5:[2,300],201:[2,300],202:[2,300],206:[2,300]},{5:[2,301],201:[2,301],202:[2,301],206:[2,301]},{5:[2,304],201:[2,304],202:[2,304],206:[2,304]},{5:[2,302],201:[2,302],202:[2,302],206:[2,302]},{5:[2,305],201:[2,305],202:[2,305],206:[2,305]},{5:[2,303],201:[2,303],202:[2,303],206:[2,303]},{5:[2,306],201:[2,306],202:[2,306],206:[2,306]},{5:[2,307],201:[2,307],202:[2,307],206:[2,307]},{5:[2,308],201:[2,308],202:[2,308],206:[2,308]},{5:[2,309],201:[2,309],202:[2,309],206:[2,309]},{5:[2,310],201:[2,310],202:[2,310],206:[2,310]},{5:[2,311],201:[2,311],202:[2,311],206:[2,311]},{5:[2,312],201:[2,312],202:[2,312],206:[2,312]},{5:[2,313],201:[2,313],202:[2,313],206:[2,313]},{5:[2,314],201:[2,314],202:[2,314],206:[2,314]},{5:[2,315],201:[2,315],202:[2,315],206:[2,315]},{5:[2,316],201:[2,316],202:[2,316],206:[2,316]},{5:[2,317],201:[2,317],202:[2,317],206:[2,317]},{5:[2,318],201:[2,318],202:[2,318],206:[2,318]},{5:[2,319],201:[2,319],202:[2,319],206:[2,319]},{5:[2,320],201:[2,320],202:[2,320],206:[2,320]},{5:[2,146],201:[2,146],202:[2,146],206:[2,146]},{5:[2,147],201:[2,147],202:[2,147],206:[2,147]},{5:[2,148],201:[2,148],202:[2,148],206:[2,148]},{5:[2,149],201:[2,149],202:[2,149],206:[2,149]},{5:[2,150],201:[2,150],202:[2,150],206:[2,150]},{5:[2,152],170:[1,391],201:[2,152],202:[2,152],206:[2,152]},{5:[2,154],201:[2,154],202:[2,154],206:[2,154]},{172:[1,392],173:[1,393]},{5:[2,157],201:[2,157],202:[2,157],206:[2,157]},{172:[1,394],173:[1,395]},{5:[2,161],201:[2,161],202:[2,161],206:[2,161]},{5:[2,162],201:[2,162],202:[2,162],206:[2,162]},{5:[2,163],201:[2,163],202:[2,163],206:[2,163]},{5:[2,164],201:[2,164],202:[2,164],206:[2,164]},{5:[2,165],201:[2,165],202:[2,165],206:[2,165]},{5:[2,166],170:[1,396],201:[2,166],202:[2,166],206:[2,166]},{5:[2,168],170:[1,397],201:[2,168],202:[2,168],206:[2,168]},{5:[2,170],170:[1,398],201:[2,170],202:[2,170],206:[2,170]},{5:[2,172],170:[1,399],201:[2,172],202:[2,172],206:[2,172]},{5:[2,174],170:[1,400],201:[2,174],202:[2,174],206:[2,174]},{5:[2,177],170:[1,401],201:[2,177],202:[2,177],206:[2,177]},{5:[2,179],170:[1,402],201:[2,179],202:[2,179],206:[2,179]},{5:[2,182],201:[2,182],202:[2,182],206:[2,182]},{5:[2,183],170:[1,403],201:[2,183],202:[2,183],206:[2,183]},{5:[2,185],170:[1,404],201:[2,185],202:[2,185],206:[2,185]},{5:[2,187],170:[1,405],201:[2,187],202:[2,187],206:[2,187]},{5:[2,191],170:[1,406],201:[2,191],202:[2,191],206:[2,191]},{5:[2,193],201:[2,193],202:[2,193],206:[2,193]},{5:[2,194],170:[1,407],201:[2,194],202:[2,194],206:[2,194]},{5:[2,196],201:[2,196],202:[2,196],206:[2,196]},{5:[2,197],201:[2,197],202:[2,197],206:[2,197]},{5:[2,198],170:[1,408],201:[2,198],202:[2,198],206:[2,198]},{5:[2,203],201:[2,203],202:[2,203],206:[2,203]},{5:[2,204],201:[2,204],202:[2,204],206:[2,204]},{5:[2,205],201:[2,205],202:[2,205],206:[2,205]},{5:[2,208],201:[2,208],202:[2,208],206:[2,208]},{5:[2,209],201:[2,209],202:[2,209],206:[2,209]},{5:[2,210],201:[2,210],202:[2,210],206:[2,210]},{5:[2,211],201:[2,211],202:[2,211],206:[2,211]},{5:[2,212],201:[2,212],202:[2,212],206:[2,212]},{5:[2,213],201:[2,213],202:[2,213],206:[2,213]},{5:[2,214],170:[1,409],201:[2,214],202:[2,214],206:[2,214]},{5:[2,216],170:[1,410],201:[2,216],202:[2,216],206:[2,216]},{5:[2,219],201:[2,219],202:[2,219],206:[2,219]},{5:[2,222],201:[2,222],202:[2,222],206:[2,222]},{5:[2,225],201:[2,225],202:[2,225],206:[2,225]},{5:[2,153],201:[2,153],202:[2,153],206:[2,153]},{5:[2,155],201:[2,155],202:[2,155],206:[2,155]},{5:[2,156],201:[2,156],202:[2,156],206:[2,156]},{5:[2,158],201:[2,158],202:[2,158],206:[2,158]},{5:[2,159],201:[2,159],202:[2,159],206:[2,159]},{5:[2,167],201:[2,167],202:[2,167],206:[2,167]},{5:[2,169],201:[2,169],202:[2,169],206:[2,169]},{5:[2,171],201:[2,171],202:[2,171],206:[2,171]},{5:[2,173],201:[2,173],202:[2,173],206:[2,173]},{5:[2,175],201:[2,175],202:[2,175],206:[2,175]},{5:[2,178],201:[2,178],202:[2,178],206:[2,178]},{5:[2,180],201:[2,180],202:[2,180],206:[2,180]},{5:[2,184],201:[2,184],202:[2,184],206:[2,184]},{5:[2,186],201:[2,186],202:[2,186],206:[2,186]},{5:[2,188],201:[2,188],202:[2,188],206:[2,188]},{5:[2,192],201:[2,192],202:[2,192],206:[2,192]},{5:[2,195],201:[2,195],202:[2,195],206:[2,195]},{5:[2,199],201:[2,199],202:[2,199],206:[2,199]},{5:[2,215],201:[2,215],202:[2,215],206:[2,215]},{5:[2,217],201:[2,217],202:[2,217],206:[2,217]}],
defaultActions: {162:[2,1],171:[2,6],172:[2,7],173:[2,2],174:[2,3],175:[2,4],176:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


var    util           = require('util');

function utf8ToHex(utf8) {
    var hex = new Buffer(stripQuotes(utf8)).toString("hex").toLowerCase();
    hex = hex.replace('2a', '*');
    return hex;
}

function parseIpPort(yy, ipPortStr, which) {
  function singleIp(which, ip1, ip2, port) {
    var obj;

    if (ip1 !== -1) {
      if (ip1 === ip2) {
        obj = {term: {}};
        obj.term[which] = ip1>>>0;
      } else {
        obj = {range: {}};
        obj.range[which] = {from: ip1>>>0, to: ip2>>>0};
      }
    }

    if (port !== -1) {
      if (which === "a1") {
        obj = {bool: {must: [obj, {term: {p1: port}}]}};
      } else if (which === "a2") {
        obj = {bool: {must: [obj, {term: {p2: port}}]}};
      } else if (which === "socksip") {
        obj = {bool: {must: [obj, {term: {sockspo: port}}]}};
      } else {
        return obj;
      }

      if (ip1 === -1) {
        obj = obj.bool.must[1];
      }
    }

    return obj;
  }


  var obj;

  ipPortStr = ipPortStr.trim();

// We really have a list of them
  if (ipPortStr[0] === "[" && ipPortStr[ipPortStr.length -1] === "]") {
      obj =  {bool: {should: []}};
      CSVtoArray(ipPortStr).forEach(function(str) {
          obj.bool.should.push(parseIpPort(yy, str, which));
      });
      return obj;
  }

  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }
  
  if (which !== "all") {
    return singleIp(which, ip1, ip2, port);
  }

  var ors = [];
  for (var i = 0, ilen = yy.ipFields.length; i < ilen; i++) {
    if (yy.emailSearch !== true && yy.ipFields[i].addr === "eip") {
      continue;
    }
    obj = singleIp(yy.ipFields[i].addr, ip1, ip2, port);
    if (obj) {
      ors.push(obj);
    }
  }

  return {bool: {should: ors}};
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}

var field2RawField = {
    us: "rawus",
    ua: "rawua",
    as1: "rawas1",
    as2: "rawas2",
    asxff: "rawasff",
    asdnsip: "rawasdnsip",
    iOn: "rawiOn",
    eua: "raweua",
    esub: "rawesub",
    aseip: "rawaseip"
}

function str2Query(yy, field, kind, str)
{
    if (yy.fieldsMap[field] && yy.fieldsMap[field].type === "ip") {
        return parseIpPort(yy, str, field);
    }

    var obj;

    if (field2RawField[field] === undefined && field.indexOf(".snow", field.length - 5) !== -1) {
        field2RawField[field] = field.substring(0, field.length - 5) + ".raw";
    }

    if (str[0] === "/" && str[str.length -1] === "/") {
        field = field2RawField[field] || field;
        obj = {regexp: {}};
        obj.regexp[field] = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        return obj;
    }

    var strs;
    var quoted = false;
    if (str[0] === "\"" && str[str.length -1] === "\"") {
        str = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        quoted = true;
    } else if (str[0] === "[" && str[str.length -1] === "]") {
        strs = CSVtoArray(str);
        if (kind === "term") {
            obj = {terms: {}};
            obj.terms[field] = strs;
        } else if (kind === "text") {
            var obj =  {query: {bool: {should: []}}};
            strs.forEach(function(str) {
              var should = {text: {}};
              should.text[field] = {query: str, type: "phrase", operator: "and"}
              obj.query.bool.should.push(should);
            });
        }
        return obj;
    }

    if (!isNaN(str) && !quoted) {
        obj = {term: {}};
        obj.term[field] = str;
    } else if (str.indexOf("*") !== -1) {
        field = field2RawField[field] || field;
        obj = {query: {wildcard: {}}};
        obj.query.wildcard[field] = str;
    } else if (kind === "text") {
        obj = {query: {text: {}}};
        obj.query.text[field] = {query: str, type: "phrase", operator: "and"}
    } else if (kind === "term") {
        obj = {term: {}};
        obj.term[field] = str;
    }
    return obj;
}

function str2IpListQuery(yy, field, kind, str) {
  var obj = [];
  for (var i = 0, ilen = yy.ipFields.length; i < ilen; i++) {
      obj.push(str2Query(yy, yy.ipFields[i][field], kind, str));
  }
  return obj;
}

function str2Header(yy, name) {
    var field = yy.fieldsMap[name];
    if (field === undefined) throw "Unknown field " + name;

    return field.db;
}

// http://stackoverflow.com/a/8497474
// Return array of string values, or NULL if CSV string not well formed.
function CSVtoArray(text) {
    text = text.substring(1, text.length-1);
    var re_valid = /^\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*(?:,\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*)*$/;
    var re_value = /(?!\s*$)\s*(?:'([^'\\]*(?:\\[\S\s][^'\\]*)*)'|"([^"\\]*(?:\\[\S\s][^"\\]*)*)"|([^,'"\s\\]*(?:\s+[^,'"\s\\]+)*))\s*(?:,|$)/g;
    // Return NULL if input string is not well formed CSV string.
    if (!re_valid.test(text)) return null;
    var a = [];                     // Initialize array to receive values.
    text.replace(re_value, // "Walk" the string using replace with callback.
        function(m0, m1, m2, m3) {
            // Remove backslash from \' in single quoted values.
            if      (m1 !== undefined) a.push(m1.replace(/\\'/g, "'"));
            // Remove backslash from \" in double quoted values.
            else if (m2 !== undefined) a.push(m2.replace(/\\"/g, '"'));
            else if (m3 !== undefined) a.push(m3);
            return ''; // Return empty string.
        });
    // Handle special case of empty last value.
    if (/,\s*$/.test(text)) a.push('');
    return a;
};

var protocols = {
    icmp: 1,
    tcp:  6,
    udp:  17
};

function protocolLookup(text) {
    if (typeof text !== "string") {
        for (var i = 0; i < text.length; i++) {
            text[i] = protocols[text[i]] || +text[i];
        }
        return text;
    } else {
        return protocols[text] || +text;
    }
}

function termOrTerms(field, str) {
  var obj = {};
  if (str[0] === "[" && str[str.length -1] === "]") {
    obj = {terms: {}};
    obj.terms[field] = CSVtoArray(str);
  } else {
    obj = {term: {}};
    obj.term[field] = str;
  }
  return obj;
}
/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 16
break;
case 2:return 17
break;
case 3:return 14
break;
case 4:return 15
break;
case 5:if (!yy.emailSearch) throw "email searches disabled for user"; return 58
break;
case 6:if (!yy.emailSearch) throw "email searches disabled for user"; return 106
break;
case 7:if (!yy.emailSearch) throw "email searches disabled for user"; return 64
break;
case 8:if (!yy.emailSearch) throw "email searches disabled for user"; return 104
break;
case 9:if (!yy.emailSearch) throw "email searches disabled for user"; return 62
break;
case 10:if (!yy.emailSearch) throw "email searches disabled for user"; return 102
break;
case 11:if (!yy.emailSearch) throw "email searches disabled for user"; return 67
break;
case 12:if (!yy.emailSearch) throw "email searches disabled for user"; return 146
break;
case 13:return "http.hasheader.dst.cnt"
break;
case 14:return "http.hasheader.dst"
break;
case 15:return "http.hasheader"
break;
case 16:return "http.hasheader.src.cnt"
break;
case 17:return "http.hasheader.src"
break;
case 18:return "http.user-agent.cnt"
break;
case 19:return "http.user-agent"
break;
case 20:return "http.user-agent.cnt"
break;
case 21:return "http.user-agent"
break;
case 22:return "http.uri.cnt"
break;
case 23:return "http.uri"
break;
case 24:return "EXISTS"
break;
case 25:return 162
break;
case 26:return 140
break;
case 27:return 139
break;
case 28:return 142
break;
case 29:return 138
break;
case 30:return 143
break;
case 31:if (!yy.emailSearch) throw "email searches disabled for user"; return 141
break;
case 32:return 31
break;
case 33:return 32
break;
case 34:return 30
break;
case 35:return "cert.alt.cnt"
break;
case 36:return "cert.alt"
break;
case 37:return "cert.cnt"
break;
case 38:return "cert.issuer.cn"
break;
case 39:return "cert.issuer.on"
break;
case 40:return "cert.serial"
break;
case 41:return "cert.subject.cn"
break;
case 42:return "cert.subject.on"
break;
case 43:return 176
break;
case 44:return 125
break;
case 45:return 126
break;
case 46:return 128
break;
case 47:return 129
break;
case 48:return 130
break;
case 49:if (!yy.emailSearch) throw "email searches disabled for user"; return 127
break;
case 50:return 29
break;
case 51:return 28
break;
case 52:return 27
break;
case 53:if (!yy.emailSearch) throw "email searches disabled for user"; return 58
break;
case 54:if (!yy.emailSearch) throw "email searches disabled for user"; return 106
break;
case 55:if (!yy.emailSearch) throw "email searches disabled for user"; return 59
break;
case 56:if (!yy.emailSearch) throw "email searches disabled for user"; return 87
break;
case 57:if (!yy.emailSearch) throw "email searches disabled for user"; return 60
break;
case 58:if (!yy.emailSearch) throw "email searches disabled for user"; return 105
break;
case 59:if (!yy.emailSearch) throw "email searches disabled for user"; return 61
break;
case 60:if (!yy.emailSearch) throw "email searches disabled for user"; return 145
break;
case 61:if (!yy.emailSearch) throw "email searches disabled for user"; return 62
break;
case 62:if (!yy.emailSearch) throw "email searches disabled for user"; return 102
break;
case 63:if (!yy.emailSearch) throw "email searches disabled for user"; return 63
break;
case 64:if (!yy.emailSearch) throw "email searches disabled for user"; return 103
break;
case 65:if (!yy.emailSearch) throw "email searches disabled for user"; return 64
break;
case 66:if (!yy.emailSearch) throw "email searches disabled for user"; return 104
break;
case 67:if (!yy.emailSearch) throw "email searches disabled for user"; return 65
break;
case 68:if (!yy.emailSearch) throw "email searches disabled for user"; return 88
break;
case 69:if (!yy.emailSearch) throw "email searches disabled for user"; return 66
break;
case 70:if (!yy.emailSearch) throw "email searches disabled for user"; return 144
break;
case 71:if (!yy.emailSearch) throw "email searches disabled for user"; return 67
break;
case 72:if (!yy.emailSearch) throw "email searches disabled for user"; return 146
break;
case 73:if (!yy.emailSearch) throw "email searches disabled for user"; return 23
break;
case 74:if (!yy.emailSearch) throw "email searches disabled for user"; return 19
break;
case 75:return "file"
break;
case 76:return "http.hasheader.dst.cnt"
break;
case 77:return "http.hasheader.dst"
break;
case 78:return "http.hasheader"
break;
case 79:return "http.hasheader.src.cnt"
break;
case 80:return "http.hasheader.src"
break;
case 81:return "host.dns.cnt"
break;
case 82:return "host.dns"
break;
case 83:return "host.email.cnt"
break;
case 84:return "host.email"
break;
case 85:return "host.http.cnt"
break;
case 86:return "host.http"
break;
case 87:return "host.socks"
break;
case 88:return "host"
break;
case 89:return "http.md5.cnt"
break;
case 90:return "http.md5"
break;
case 91:return "http.uri.cnt"
break;
case 92:return "http.uri"
break;
case 93:return "http.uri.key.cnt"
break;
case 94:return "http.uri.key"
break;
case 95:return "http.uri.path.cnt"
break;
case 96:return "http.uri.path"
break;
case 97:return "http.uri.value.cnt"
break;
case 98:return "http.uri.value"
break;
case 99:return "http.version"
break;
case 100:return "http.version.src"
break;
case 101:return "http.version.src.cnt"
break;
case 102:return "http.version.dst"
break;
case 103:return "http.version.dst.cnt"
break;
case 104:return "http.user-agent.cnt"
break;
case 105:return "http.user-agent"
break;
case 106:return "host.http.cnt"
break;
case 107:return "host.http"
break;
case 108:return "HTTP_HEADER_CNT"
break;
case 109:return "HTTP_HEADER"
break;
case 110:return "icmp"
break;
case 111:return "icmp"
break;
case 112:return "id"
break;
case 113:return "ip.dns.cnt"
break;
case 114:return "ip.dns"
break;
case 115:return "ip.dst"
break;
case 116:return "ip"
break;
case 117:return "ip.socks"
break;
case 118:return "ip.src"
break;
case 119:return "ip.xff.cnt"
break;
case 120:return "ip.xff"
break;
case 121:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email.cnt"
break;
case 122:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email"
break;
case 123:return "irc.nick"
break;
case 124:return "irc.nick.cnt"
break;
case 125:return "irc.channel"
break;
case 126:return "irc.channel.cnt"
break;
case 127:return 81
break;
case 128:return 34
break;
case 129:return 35
break;
case 130:return 33
break;
case 131:return "payload8.src.hex"
break;
case 132:return "payload8.dst.hex"
break;
case 133:return "payload8.src.utf8"
break;
case 134:return "payload8.dst.utf8"
break;
case 135:return "payload8.src.hex"
break;
case 136:return "payload8.dst.hex"
break;
case 137:return "payload8.hex"
break;
case 138:return "payload8.utf8"
break;
case 139:return "payload8.hex"
break;
case 140:return "PLUGIN_CNT"
break;
case 141:return "PLUGIN"
break;
case 142:return 36
break;
case 143:return 186
break;
case 144:return 37
break;
case 145:return 38
break;
case 146:return 187
break;
case 147:return 188
break;
case 148:return 131
break;
case 149:return 132
break;
case 150:return 134
break;
case 151:return 135
break;
case 152:return 136
break;
case 153:if (!yy.emailSearch) throw "email searches disabled for user"; return 133
break;
case 154:return "rootId"
break;
case 155:return "host.socks"
break;
case 156:return "ip.socks"
break;
case 157:return "port.socks"
break;
case 158:return "socks.user"
break;
case 159:return "smb.domain.cnt"
break;
case 160:return "smb.domain"
break;
case 161:return "smb.fn.cnt"
break;
case 162:return "smb.fn"
break;
case 163:return "smb.host.cnt"
break;
case 164:return "smb.host"
break;
case 165:return "smb.os.cnt"
break;
case 166:return "smb.os"
break;
case 167:return "smb.share.cnt"
break;
case 168:return "smb.share"
break;
case 169:return "smb.user.cnt"
break;
case 170:return "smb.user"
break;
case 171:return "smb.ver.cnt"
break;
case 172:return "smb.ver"
break;
case 173:return "ssh.key.cnt"
break;
case 174:return "ssh.key"
break;
case 175:return "ssh.ver.cnt"
break;
case 176:return "ssh.ver"
break;
case 177:return 57
break;
case 178:return 192
break;
case 179:return "tcp"
break;
case 180:return "tcp"
break;
case 181:return "udp"
break;
case 182:return "udp"
break;
case 183:return "user.cnt"
break;
case 184:return "user"
break;
case 185:return 161
break;
case 186:return 195
break;
case 187:return 196
break;
case 188:return 197
break;
case 189:return 198
break;
case 190:return 8
break;
case 191:return 7
break;
case 192:return 11
break;
case 193:return 10
break;
case 194:return 208
break;
case 195:return 207
break;
case 196:return 207
break;
case 197:return 202
break;
case 198:return 202
break;
case 199:return 201
break;
case 200:return 201
break;
case 201:return 205
break;
case 202:return 206
break;
case 203:return 203
break;
case 204:return 5
break;
case 205:return 'INVALID'
break;
case 206:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:\d+\b)/,/^(?:\[\d+(,\s*\d+)*\s*\])/,/^(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?\b)/,/^(?:\[(?:(\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\.\d{1,3})?(\/\d{1,2})?(:\d{1,5})?(,\s*){0,1})+\])/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:http\.ua\.cnt)/,/^(?:http\.ua)/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:EXISTS!)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.socks)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:asn\.email)/,/^(?:bytes\.src)/,/^(?:bytes\.dst)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.socks)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:country\.email)/,/^(?:databytes\.dst)/,/^(?:databytes\.src)/,/^(?:databytes)/,/^(?:email\.content-type\.cnt)/,/^(?:email\.content-type)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.hasheader\.cnt)/,/^(?:email\.hasheader)/,/^(?:email\.message-id\.cnt)/,/^(?:email\.message-id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mime-version\.cnt)/,/^(?:email\.mime-version)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.x-mailer\.cnt)/,/^(?:email\.x-mailer)/,/^(?:email\.[^\s!=><.]*\.cnt)/,/^(?:email\.[^\s!=><.]*)/,/^(?:file)/,/^(?:http\.hasheader\.dst\.cnt)/,/^(?:http\.hasheader\.dst)/,/^(?:http\.hasheader)/,/^(?:http\.hasheader\.src\.cnt)/,/^(?:http\.hasheader\.src)/,/^(?:host\.dns\.cnt)/,/^(?:host\.dns)/,/^(?:host\.email\.cnt)/,/^(?:host\.email)/,/^(?:host\.http\.cnt)/,/^(?:host\.http)/,/^(?:host\.socks)/,/^(?:host)/,/^(?:http\.md5\.cnt)/,/^(?:http\.md5)/,/^(?:http\.uri\.cnt)/,/^(?:http\.uri)/,/^(?:http\.uri\.key\.cnt)/,/^(?:http\.uri\.key)/,/^(?:http\.uri\.path\.cnt)/,/^(?:http\.uri\.path)/,/^(?:http\.uri\.value\.cnt)/,/^(?:http\.uri\.value)/,/^(?:http\.version)/,/^(?:http\.version\.src)/,/^(?:http\.version\.src\.cnt)/,/^(?:http\.version\.dst)/,/^(?:http\.version\.dst\.cnt)/,/^(?:http\.user-agent\.cnt)/,/^(?:http\.user-agent)/,/^(?:http\.host\.cnt)/,/^(?:http\.host)/,/^(?:http\.[^\s!=><.]*\.cnt)/,/^(?:http\.[^\s!=><.]*)/,/^(?:icmp)/,/^(?:"icmp")/,/^(?:id)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.socks)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:ip\.email\.cnt)/,/^(?:ip\.email)/,/^(?:irc\.nick)/,/^(?:irc\.nick\.cnt)/,/^(?:irc\.channel)/,/^(?:irc\.channel\.cnt)/,/^(?:node)/,/^(?:packets\.src)/,/^(?:packets\.dst)/,/^(?:packets)/,/^(?:payload8\.src\.hex)/,/^(?:payload8\.dst\.hex)/,/^(?:payload8\.src\.utf8)/,/^(?:payload8\.dst\.utf8)/,/^(?:payload8\.src)/,/^(?:payload8\.dst)/,/^(?:payload8\.hex)/,/^(?:payload8\.utf8)/,/^(?:payload8)/,/^(?:plugin\.[^\s!=><]*\.cnt)/,/^(?:plugin\.[^\s!=><]*)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.socks)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rir)/,/^(?:rir\.dns)/,/^(?:rir\.dst)/,/^(?:rir\.socks)/,/^(?:rir\.src)/,/^(?:rir\.xff)/,/^(?:rir\.email)/,/^(?:rootId)/,/^(?:socks\.host)/,/^(?:socks\.ip)/,/^(?:socks\.port)/,/^(?:socks\.user)/,/^(?:smb\.domain\.cnt)/,/^(?:smb\.domain)/,/^(?:smb\.fn\.cnt)/,/^(?:smb\.fn)/,/^(?:smb\.host\.cnt)/,/^(?:smb\.host)/,/^(?:smb\.os\.cnt)/,/^(?:smb\.os)/,/^(?:smb\.share\.cnt)/,/^(?:smb\.share)/,/^(?:smb\.user\.cnt)/,/^(?:smb\.user)/,/^(?:smb\.ver\.cnt)/,/^(?:smb\.ver)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:"tcp")/,/^(?:udp)/,/^(?:"udp")/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"\\]*(?:\\.[^"\\]*)*")/,/^(?:\/[^/\\]*(?:\\.[^/\\]*)*\/)/,/^(?:\[[0-9a-z,"]+\])/,/^(?:\[[^\]]+\])/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}