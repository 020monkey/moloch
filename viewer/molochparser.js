/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"NUMBER":15,"RANGEFIELD":16,"databytes":17,"bytes":18,"packets":19,"port.src":20,"port.dst":21,"http.uri.cnt":22,"cert.cnt":23,"ip.dns.cnt":24,"ip.email.cnt":25,"ip.xff.cnt":26,"http.md5.cnt":27,"http.ua.cnt":28,"user.cnt":29,"host.dns.cnt":30,"host.email.cnt":31,"host.http.cnt":32,"header.src.cnt":33,"header.dst.cnt":34,"tags.cnt":35,"email.ct.cnt":36,"email.dst.cnt":37,"email.fn.cnt":38,"email.id.cnt":39,"email.md5.cnt":40,"email.mv.cnt":41,"email.src.cnt":42,"email.subject.cnt":43,"email.ua.cnt":44,"cert.alt.cnt":45,"ssh.key.cnt":46,"ssh.ver.cnt":47,"LOTERMFIELD":48,"node":49,"host.dns":50,"host.email":51,"host.http":52,"user":53,"email.dst":54,"email.src":55,"cert.subject.cn":56,"cert.issuer.cn":57,"cert.serial":58,"cert.alt":59,"ssh.ver":60,"TERMFIELD":61,"id":62,"ssh.key":63,"email.id":64,"email.md5":65,"email.mv":66,"email.fn":67,"email.ct":68,"http.md5":69,"rootId":70,"UPTERMFIELD":71,"country.src":72,"country.dst":73,"country.xff":74,"country.email":75,"country.dns":76,"LOTEXTFIELD":77,"asn.src":78,"asn.dst":79,"asn.dns":80,"asn.xff":81,"asn.email":82,"email.subject":83,"email.ua":84,"cert.subject.on":85,"cert.issuer.on":86,"TEXTFIELD":87,"http.uri":88,"http.ua":89,"IPFIELD":90,"ip":91,"ip.src":92,"ip.dst":93,"ip.xff":94,"ip.dns":95,"ip.email":96,"STR":97,"ID":98,"asn":99,"dns":100,"dst":101,"email":102,"src":103,"xff":104,"cert":105,"alt":106,"cnt":107,"issuer":108,"cn":109,"on":110,"serial":111,"subject":112,"country":113,"ua":114,"header":115,"host":116,"http":117,"md5":118,"uri":119,"icmp":120,"port":121,"protocol":122,"QUOTEDSTR":123,"REGEXSTR":124,"ssh":125,"key":126,"ver":127,"tags":128,"tcp":129,"udp":130,"&&":131,"||":132,"!":133,"-":134,"(":135,")":136,"==":137,"!=":138,"file":139,"oldheader":140,"header.src":141,"header.dst":142,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"NUMBER",17:"databytes",18:"bytes",19:"packets",20:"port.src",21:"port.dst",22:"http.uri.cnt",23:"cert.cnt",24:"ip.dns.cnt",25:"ip.email.cnt",26:"ip.xff.cnt",27:"http.md5.cnt",28:"http.ua.cnt",29:"user.cnt",30:"host.dns.cnt",31:"host.email.cnt",32:"host.http.cnt",33:"header.src.cnt",34:"header.dst.cnt",35:"tags.cnt",36:"email.ct.cnt",37:"email.dst.cnt",38:"email.fn.cnt",39:"email.id.cnt",40:"email.md5.cnt",41:"email.mv.cnt",42:"email.src.cnt",43:"email.subject.cnt",44:"email.ua.cnt",45:"cert.alt.cnt",46:"ssh.key.cnt",47:"ssh.ver.cnt",49:"node",50:"host.dns",51:"host.email",52:"host.http",53:"user",54:"email.dst",55:"email.src",56:"cert.subject.cn",57:"cert.issuer.cn",58:"cert.serial",59:"cert.alt",60:"ssh.ver",62:"id",63:"ssh.key",64:"email.id",65:"email.md5",66:"email.mv",67:"email.fn",68:"email.ct",69:"http.md5",70:"rootId",72:"country.src",73:"country.dst",74:"country.xff",75:"country.email",76:"country.dns",78:"asn.src",79:"asn.dst",80:"asn.dns",81:"asn.xff",82:"asn.email",83:"email.subject",84:"email.ua",85:"cert.subject.on",86:"cert.issuer.on",88:"http.uri",89:"http.ua",91:"ip",92:"ip.src",93:"ip.dst",94:"ip.xff",95:"ip.dns",96:"ip.email",98:"ID",99:"asn",100:"dns",101:"dst",102:"email",103:"src",104:"xff",105:"cert",106:"alt",107:"cnt",108:"issuer",109:"cn",110:"on",111:"serial",112:"subject",113:"country",114:"ua",115:"header",116:"host",117:"http",118:"md5",119:"uri",120:"icmp",121:"port",122:"protocol",123:"QUOTEDSTR",124:"REGEXSTR",125:"ssh",126:"key",127:"ver",128:"tags",129:"tcp",130:"udp",131:"&&",132:"||",133:"!",134:"-",135:"(",136:")",137:"==",138:"!=",139:"file",140:"oldheader",141:"header.src",142:"header.dst"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[71,1],[71,1],[71,1],[71,1],[71,1],[77,1],[77,1],[77,1],[77,1],[77,1],[77,1],[77,1],[77,1],[77,1],[87,1],[87,1],[90,1],[90,1],[90,1],[90,1],[90,1],[90,1],[97,1],[97,1],[97,2],[97,2],[97,2],[97,2],[97,2],[97,1],[97,2],[97,3],[97,2],[97,3],[97,3],[97,2],[97,3],[97,3],[97,1],[97,2],[97,2],[97,2],[97,2],[97,2],[97,2],[97,3],[97,2],[97,3],[97,2],[97,3],[97,2],[97,3],[97,1],[97,2],[97,3],[97,2],[97,3],[97,1],[97,2],[97,2],[97,3],[97,2],[97,3],[97,2],[97,3],[97,1],[97,1],[97,2],[97,3],[97,2],[97,2],[97,3],[97,2],[97,2],[97,3],[97,1],[97,1],[97,1],[97,2],[97,2],[97,1],[97,1],[97,1],[97,2],[97,3],[97,2],[97,3],[97,1],[97,2],[97,1],[97,1],[97,2],[97,1],[97,1],[97,2],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 10:this.$ = 'db'
break;
case 11:this.$ = 'by'
break;
case 12:this.$ = 'pa'
break;
case 13:this.$ = 'p1'
break;
case 14:this.$ = 'p2'
break;
case 15:this.$ = 'uscnt'
break;
case 16:this.$ = 'tlscnt'
break;
case 17:this.$ = 'dnsipcnt'
break;
case 18:this.$ = 'eipcnt'
break;
case 19:this.$ = 'xffscnt'
break;
case 20:this.$ = 'hmd5cnt'
break;
case 21:this.$ = 'uacnt'
break;
case 22:this.$ = 'usercnt'
break;
case 23:this.$ = 'dnshocnt'
break;
case 24:this.$ = 'ehocnt'
break;
case 25:this.$ = 'hocnt'
break;
case 26:this.$ = 'hh1cnt'
break;
case 27:this.$ = 'hh2cnt'
break;
case 28:this.$ = 'tacnt'
break;
case 29:this.$ = 'ectcnt'
break;
case 30:this.$ = 'edstcnt'
break;
case 31:this.$ = 'efncnt'
break;
case 32:this.$ = 'eidcnt'
break;
case 33:this.$ = 'emd5cnt'
break;
case 34:this.$ = 'emvcnt'
break;
case 35:this.$ = 'esrccnt'
break;
case 36:this.$ = 'esubcnt'
break;
case 37:this.$ = 'euacnt'
break;
case 38:this.$ = 'tls.altcnt'
break;
case 39:this.$ = 'sshkeycnt'
break;
case 40:this.$ = 'sshvercnt'
break;
case 41:this.$ = 'no'
break;
case 42:this.$ = 'dnsho'
break;
case 43:this.$ = 'eho'
break;
case 44:this.$ = 'ho'
break;
case 45:this.$ = 'user'
break;
case 46:this.$ = 'edst'
break;
case 47:this.$ = 'esrc'
break;
case 48:this.$ = 'tls.sCn'
break;
case 49:this.$ = 'tls.iCn'
break;
case 50:this.$ = 'tls.sn'
break;
case 51:this.$ = 'tls.alt'
break;
case 52:this.$ = 'sshver'
break;
case 53:this.$ = '_id'
break;
case 54:this.$ = 'sshkey'
break;
case 55:this.$ = 'eid'
break;
case 56:this.$ = 'emd5'
break;
case 57:this.$ = 'emv'
break;
case 58:this.$ = 'efn'
break;
case 59:this.$ = 'ect'
break;
case 60:this.$ = 'hmd5'
break;
case 61:this.$ = 'ro'
break;
case 62:this.$ = 'g1'
break;
case 63:this.$ = 'g2'
break;
case 64:this.$ = 'gxff'
break;
case 65:this.$ = 'geip'
break;
case 66:this.$ = 'gdnsip'
break;
case 67:this.$ = 'as1'
break;
case 68:this.$ = 'as2'
break;
case 69:this.$ = 'asdnsip'
break;
case 70:this.$ = 'asxff'
break;
case 71:this.$ = 'aseip'
break;
case 72:this.$ = 'esub'
break;
case 73:this.$ = 'eua'
break;
case 74:this.$ = 'tls.sOn'
break;
case 75:this.$ = 'tls.iOn'
break;
case 76:this.$ = 'us'
break;
case 77:this.$ = 'ua'
break;
case 78:this.$ = 0
break;
case 79:this.$ = 1
break;
case 80:this.$ = 2
break;
case 81:this.$ = 3
break;
case 82:this.$ = 4
break;
case 83:this.$ = 5
break;
case 157:this.$ = {and: [$$[$0-2], $$[$0]]};
break;
case 158:this.$ = {or: [$$[$0-2], $$[$0]]};
break;
case 159:this.$ = {not: $$[$0]};
break;
case 160:this.$ = -$$[$0];
break;
case 161:this.$ = $$[$0-1];
break;
case 162:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 163:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 164:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 165:this.$ = {term: {pr: 1}};
break;
case 166:this.$ = {term: {pr: 6}};
break;
case 167:this.$ = {term: {pr: 17}};
break;
case 168:this.$ = {term: {pr: $$[$0]}};
break;
case 169:this.$ = {not: {term: {pr: 1}}};
break;
case 170:this.$ = {not: {term: {pr: 6}}};
break;
case 171:this.$ = {not: {term: {pr: 17}}};
break;
case 172:this.$ = {not: {term: {pr: $$[$0]}}};
break;
case 173:this.$ = {or: [{range: {p1: {}}}, {range: {p2: {}}}]};
         this.$.or[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.or[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 174:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toLowerCase())};
break;
case 175:this.$ = str2Query($$[$0-2], "term", $$[$0].toLowerCase());
break;
case 176:this.$ = {not: str2Query($$[$0-2], "term", $$[$0])};
break;
case 177:this.$ = str2Query($$[$0-2], "term", $$[$0]);
break;
case 178:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toUpperCase())};
break;
case 179:this.$ = str2Query($$[$0-2], "term", $$[$0].toUpperCase());
break;
case 180:this.$ = {not: str2Query($$[$0-2], "text", $$[$0].toLowerCase())};
break;
case 181:this.$ = str2Query($$[$0-2], "text", $$[$0].toLowerCase());
break;
case 182:this.$ = {not: str2Query($$[$0-2], "text", $$[$0])};
break;
case 183:this.$ = str2Query($$[$0-2], "text", $$[$0]);
break;
case 184:this.$ = {or: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]};
break;
case 185:this.$ = {not: {or: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]}};
break;
case 186:this.$ = parseIpPort(yy, $$[$0],$$[$0-2]);
break;
case 187:this.$ = {not: parseIpPort(yy, $$[$0],$$[$0-2])};
break;
case 188: var tag = stripQuotes($$[$0]);
          this.$ = {term: {ta: tag}};
        
break;
case 189: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {ta: tag}}};
        
break;
case 190: var file = stripQuotes($$[$0]);
          this.$ = {fileand: file};
        
break;
case 191: var file = stripQuotes($$[$0]);
          this.$ = {not: {fileand: file}};
        
break;
case 192: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh: tag}};
        
break;
case 193: var tag = stripQuotes($$[$0]);
          this.$ = {or: [{term: {hh1: tag}}, {term:{hh2: tag}}]};
        
break;
case 194: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh1: tag}};
        
break;
case 195: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh2: tag}};
        
break;
case 196: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh1: tag}}};
        
break;
case 197: var tag = stripQuotes($$[$0]);
          this.$ = {not: {or: [{term: {hh1: tag}}, {term:{hh2: tag}}]}};
        
break;
case 198: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh1: tag}}};
        
break;
case 199: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh2: tag}}};
        
break;
case 200: var str = $$[$0].toUpperCase();
          this.$ = {or: [str2Query("g1", "term", str),
                     str2Query("g2", "term", str),
                     str2Query("gxff", "term", str),
                     str2Query("gdnsip", "term", str),
                     str2Query("geip", "term", str)
                    ]
               };
        
break;
case 201: var str = $$[$0].toUpperCase();
          this.$ = {or: [str2Query("g1", "term", str),
                     str2Query("g2", "term", str),
                     str2Query("gxff", "term", str),
                     str2Query("gdnsip", "term", str),
                     str2Query("geip", "term", str)
                    ]
               };
          this.$ = {not: this.$};
        
break;
case 202: var str = $$[$0].toLowerCase();
          
          this.$ = {or: [str2Query("as1", "text", str),
                     str2Query("as2", "text", str),
                     str2Query("asxff", "text", str),
                     str2Query("asdnsip", "text", str),
                     str2Query("aseip", "text", str)
                    ]
               };
        
break;
case 203: var str = $$[$0].toLowerCase();
          this.$ = {or: [str2Query("as1", "text", str),
                     str2Query("as2", "text", str),
                     str2Query("asxff", "text", str),
                     str2Query("asdnsip", "text", str),
                     str2Query("aseip", "text", str)
                    ]
               };
          this.$ = {not: this.$};
        
break;
case 204: var str = $$[$0].toLowerCase();

          this.$ = {or: [str2Query("ho", "term", str),
                     str2Query("dnsho", "term", str),
                     str2Query("eho", "term", str)
                    ]
               };
          this.$ = {not: this.$};
        
break;
case 205: var str = $$[$0].toLowerCase();

          this.$ = {or: [str2Query("ho", "term", str),
                     str2Query("dnsho", "term", str),
                     str2Query("eho", "term", str)
                    ]
               };
        
break;
}
},
table: [{3:1,4:2,16:6,17:[1,24],18:[1,25],19:[1,26],20:[1,27],21:[1,28],22:[1,29],23:[1,30],24:[1,31],25:[1,32],26:[1,33],27:[1,34],28:[1,35],29:[1,36],30:[1,37],31:[1,38],32:[1,39],33:[1,40],34:[1,41],35:[1,42],36:[1,43],37:[1,44],38:[1,45],39:[1,46],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:[1,51],45:[1,52],46:[1,53],47:[1,54],48:9,49:[1,55],50:[1,56],51:[1,57],52:[1,58],53:[1,59],54:[1,60],55:[1,61],56:[1,62],57:[1,63],58:[1,64],59:[1,65],60:[1,66],61:10,62:[1,67],63:[1,68],64:[1,69],65:[1,70],66:[1,71],67:[1,72],68:[1,73],69:[1,74],70:[1,75],71:11,72:[1,76],73:[1,77],74:[1,78],75:[1,79],76:[1,80],77:12,78:[1,81],79:[1,82],80:[1,83],81:[1,84],82:[1,85],83:[1,86],84:[1,87],85:[1,88],86:[1,89],87:13,88:[1,90],89:[1,91],90:14,91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],99:[1,22],113:[1,21],115:[1,18],116:[1,23],121:[1,8],122:[1,7],128:[1,15],133:[1,3],134:[1,4],135:[1,5],139:[1,16],140:[1,17],141:[1,19],142:[1,20]},{1:[3]},{5:[1,98],131:[1,99],132:[1,100]},{4:101,16:6,17:[1,24],18:[1,25],19:[1,26],20:[1,27],21:[1,28],22:[1,29],23:[1,30],24:[1,31],25:[1,32],26:[1,33],27:[1,34],28:[1,35],29:[1,36],30:[1,37],31:[1,38],32:[1,39],33:[1,40],34:[1,41],35:[1,42],36:[1,43],37:[1,44],38:[1,45],39:[1,46],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:[1,51],45:[1,52],46:[1,53],47:[1,54],48:9,49:[1,55],50:[1,56],51:[1,57],52:[1,58],53:[1,59],54:[1,60],55:[1,61],56:[1,62],57:[1,63],58:[1,64],59:[1,65],60:[1,66],61:10,62:[1,67],63:[1,68],64:[1,69],65:[1,70],66:[1,71],67:[1,72],68:[1,73],69:[1,74],70:[1,75],71:11,72:[1,76],73:[1,77],74:[1,78],75:[1,79],76:[1,80],77:12,78:[1,81],79:[1,82],80:[1,83],81:[1,84],82:[1,85],83:[1,86],84:[1,87],85:[1,88],86:[1,89],87:13,88:[1,90],89:[1,91],90:14,91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],99:[1,22],113:[1,21],115:[1,18],116:[1,23],121:[1,8],122:[1,7],128:[1,15],133:[1,3],134:[1,4],135:[1,5],139:[1,16],140:[1,17],141:[1,19],142:[1,20]},{4:102,16:6,17:[1,24],18:[1,25],19:[1,26],20:[1,27],21:[1,28],22:[1,29],23:[1,30],24:[1,31],25:[1,32],26:[1,33],27:[1,34],28:[1,35],29:[1,36],30:[1,37],31:[1,38],32:[1,39],33:[1,40],34:[1,41],35:[1,42],36:[1,43],37:[1,44],38:[1,45],39:[1,46],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:[1,51],45:[1,52],46:[1,53],47:[1,54],48:9,49:[1,55],50:[1,56],51:[1,57],52:[1,58],53:[1,59],54:[1,60],55:[1,61],56:[1,62],57:[1,63],58:[1,64],59:[1,65],60:[1,66],61:10,62:[1,67],63:[1,68],64:[1,69],65:[1,70],66:[1,71],67:[1,72],68:[1,73],69:[1,74],70:[1,75],71:11,72:[1,76],73:[1,77],74:[1,78],75:[1,79],76:[1,80],77:12,78:[1,81],79:[1,82],80:[1,83],81:[1,84],82:[1,85],83:[1,86],84:[1,87],85:[1,88],86:[1,89],87:13,88:[1,90],89:[1,91],90:14,91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],99:[1,22],113:[1,21],115:[1,18],116:[1,23],121:[1,8],122:[1,7],128:[1,15],133:[1,3],134:[1,4],135:[1,5],139:[1,16],140:[1,17],141:[1,19],142:[1,20]},{4:103,16:6,17:[1,24],18:[1,25],19:[1,26],20:[1,27],21:[1,28],22:[1,29],23:[1,30],24:[1,31],25:[1,32],26:[1,33],27:[1,34],28:[1,35],29:[1,36],30:[1,37],31:[1,38],32:[1,39],33:[1,40],34:[1,41],35:[1,42],36:[1,43],37:[1,44],38:[1,45],39:[1,46],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:[1,51],45:[1,52],46:[1,53],47:[1,54],48:9,49:[1,55],50:[1,56],51:[1,57],52:[1,58],53:[1,59],54:[1,60],55:[1,61],56:[1,62],57:[1,63],58:[1,64],59:[1,65],60:[1,66],61:10,62:[1,67],63:[1,68],64:[1,69],65:[1,70],66:[1,71],67:[1,72],68:[1,73],69:[1,74],70:[1,75],71:11,72:[1,76],73:[1,77],74:[1,78],75:[1,79],76:[1,80],77:12,78:[1,81],79:[1,82],80:[1,83],81:[1,84],82:[1,85],83:[1,86],84:[1,87],85:[1,88],86:[1,89],87:13,88:[1,90],89:[1,91],90:14,91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],99:[1,22],113:[1,21],115:[1,18],116:[1,23],121:[1,8],122:[1,7],128:[1,15],133:[1,3],134:[1,4],135:[1,5],139:[1,16],140:[1,17],141:[1,19],142:[1,20]},{6:107,7:[1,109],8:[1,110],9:108,10:[1,111],11:[1,112],12:104,137:[1,105],138:[1,106]},{137:[1,113],138:[1,114]},{6:107,7:[1,109],8:[1,110],9:108,10:[1,111],11:[1,112],12:115,137:[1,116],138:[1,117]},{137:[1,119],138:[1,118]},{137:[1,121],138:[1,120]},{137:[1,123],138:[1,122]},{137:[1,125],138:[1,124]},{137:[1,127],138:[1,126]},{137:[1,128],138:[1,129]},{137:[1,130],138:[1,131]},{137:[1,132],138:[1,133]},{137:[1,134],138:[1,135]},{137:[1,136],138:[1,137]},{137:[1,138],138:[1,139]},{137:[1,140],138:[1,141]},{137:[1,142],138:[1,143]},{137:[1,144],138:[1,145]},{137:[1,147],138:[1,146]},{7:[2,10],8:[2,10],10:[2,10],11:[2,10],137:[2,10],138:[2,10]},{7:[2,11],8:[2,11],10:[2,11],11:[2,11],137:[2,11],138:[2,11]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],137:[2,12],138:[2,12]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],137:[2,13],138:[2,13]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],137:[2,14],138:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],137:[2,15],138:[2,15]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],137:[2,16],138:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],137:[2,17],138:[2,17]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],137:[2,18],138:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],137:[2,19],138:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],137:[2,20],138:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],137:[2,21],138:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],137:[2,22],138:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],137:[2,23],138:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],137:[2,24],138:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],137:[2,25],138:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],137:[2,26],138:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],137:[2,27],138:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],137:[2,28],138:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],137:[2,29],138:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],137:[2,30],138:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],137:[2,31],138:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],137:[2,32],138:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],137:[2,33],138:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],137:[2,34],138:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],137:[2,35],138:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],137:[2,36],138:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],137:[2,37],138:[2,37]},{7:[2,38],8:[2,38],10:[2,38],11:[2,38],137:[2,38],138:[2,38]},{7:[2,39],8:[2,39],10:[2,39],11:[2,39],137:[2,39],138:[2,39]},{7:[2,40],8:[2,40],10:[2,40],11:[2,40],137:[2,40],138:[2,40]},{137:[2,41],138:[2,41]},{137:[2,42],138:[2,42]},{137:[2,43],138:[2,43]},{137:[2,44],138:[2,44]},{137:[2,45],138:[2,45]},{137:[2,46],138:[2,46]},{137:[2,47],138:[2,47]},{137:[2,48],138:[2,48]},{137:[2,49],138:[2,49]},{137:[2,50],138:[2,50]},{137:[2,51],138:[2,51]},{137:[2,52],138:[2,52]},{137:[2,53],138:[2,53]},{137:[2,54],138:[2,54]},{137:[2,55],138:[2,55]},{137:[2,56],138:[2,56]},{137:[2,57],138:[2,57]},{137:[2,58],138:[2,58]},{137:[2,59],138:[2,59]},{137:[2,60],138:[2,60]},{137:[2,61],138:[2,61]},{137:[2,62],138:[2,62]},{137:[2,63],138:[2,63]},{137:[2,64],138:[2,64]},{137:[2,65],138:[2,65]},{137:[2,66],138:[2,66]},{137:[2,67],138:[2,67]},{137:[2,68],138:[2,68]},{137:[2,69],138:[2,69]},{137:[2,70],138:[2,70]},{137:[2,71],138:[2,71]},{137:[2,72],138:[2,72]},{137:[2,73],138:[2,73]},{137:[2,74],138:[2,74]},{137:[2,75],138:[2,75]},{137:[2,76],138:[2,76]},{137:[2,77],138:[2,77]},{137:[2,78],138:[2,78]},{137:[2,79],138:[2,79]},{137:[2,80],138:[2,80]},{137:[2,81],138:[2,81]},{137:[2,82],138:[2,82]},{137:[2,83],138:[2,83]},{1:[2,1]},{4:148,16:6,17:[1,24],18:[1,25],19:[1,26],20:[1,27],21:[1,28],22:[1,29],23:[1,30],24:[1,31],25:[1,32],26:[1,33],27:[1,34],28:[1,35],29:[1,36],30:[1,37],31:[1,38],32:[1,39],33:[1,40],34:[1,41],35:[1,42],36:[1,43],37:[1,44],38:[1,45],39:[1,46],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:[1,51],45:[1,52],46:[1,53],47:[1,54],48:9,49:[1,55],50:[1,56],51:[1,57],52:[1,58],53:[1,59],54:[1,60],55:[1,61],56:[1,62],57:[1,63],58:[1,64],59:[1,65],60:[1,66],61:10,62:[1,67],63:[1,68],64:[1,69],65:[1,70],66:[1,71],67:[1,72],68:[1,73],69:[1,74],70:[1,75],71:11,72:[1,76],73:[1,77],74:[1,78],75:[1,79],76:[1,80],77:12,78:[1,81],79:[1,82],80:[1,83],81:[1,84],82:[1,85],83:[1,86],84:[1,87],85:[1,88],86:[1,89],87:13,88:[1,90],89:[1,91],90:14,91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],99:[1,22],113:[1,21],115:[1,18],116:[1,23],121:[1,8],122:[1,7],128:[1,15],133:[1,3],134:[1,4],135:[1,5],139:[1,16],140:[1,17],141:[1,19],142:[1,20]},{4:149,16:6,17:[1,24],18:[1,25],19:[1,26],20:[1,27],21:[1,28],22:[1,29],23:[1,30],24:[1,31],25:[1,32],26:[1,33],27:[1,34],28:[1,35],29:[1,36],30:[1,37],31:[1,38],32:[1,39],33:[1,40],34:[1,41],35:[1,42],36:[1,43],37:[1,44],38:[1,45],39:[1,46],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:[1,51],45:[1,52],46:[1,53],47:[1,54],48:9,49:[1,55],50:[1,56],51:[1,57],52:[1,58],53:[1,59],54:[1,60],55:[1,61],56:[1,62],57:[1,63],58:[1,64],59:[1,65],60:[1,66],61:10,62:[1,67],63:[1,68],64:[1,69],65:[1,70],66:[1,71],67:[1,72],68:[1,73],69:[1,74],70:[1,75],71:11,72:[1,76],73:[1,77],74:[1,78],75:[1,79],76:[1,80],77:12,78:[1,81],79:[1,82],80:[1,83],81:[1,84],82:[1,85],83:[1,86],84:[1,87],85:[1,88],86:[1,89],87:13,88:[1,90],89:[1,91],90:14,91:[1,92],92:[1,93],93:[1,94],94:[1,95],95:[1,96],96:[1,97],99:[1,22],113:[1,21],115:[1,18],116:[1,23],121:[1,8],122:[1,7],128:[1,15],133:[1,3],134:[1,4],135:[1,5],139:[1,16],140:[1,17],141:[1,19],142:[1,20]},{5:[2,159],131:[2,159],132:[2,159],136:[2,159]},{5:[2,160],131:[2,160],132:[2,160],136:[2,160]},{131:[1,99],132:[1,100],136:[1,150]},{15:[1,151]},{15:[1,152]},{15:[1,153]},{15:[2,6]},{15:[2,7]},{15:[2,2]},{15:[2,3]},{15:[2,4]},{15:[2,5]},{15:[1,157],120:[1,154],129:[1,155],130:[1,156]},{15:[1,161],120:[1,158],129:[1,159],130:[1,160]},{15:[1,162]},{15:[1,163]},{15:[1,164]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:165,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:189,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:190,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:191,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:192,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:193,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:194,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:195,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:196,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:197,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{13:198,14:[1,199],15:[1,200]},{13:201,14:[1,199],15:[1,200]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:202,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:203,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:204,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:205,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:206,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:207,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:208,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:209,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:210,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:211,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:212,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:213,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:214,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:215,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:216,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:217,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:218,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{18:[1,168],19:[1,178],49:[1,177],91:[1,176],97:219,98:[1,166],99:[1,167],102:[1,171],105:[1,169],113:[1,170],114:[1,186],115:[1,172],116:[1,173],117:[1,174],119:[1,188],120:[1,175],121:[1,179],122:[1,180],123:[1,181],124:[1,182],125:[1,183],128:[1,184],129:[1,185],130:[1,187]},{5:[2,157],131:[2,157],132:[2,157],136:[2,157]},{5:[2,158],131:[1,99],132:[2,158],136:[2,158]},{5:[2,161],131:[2,161],132:[2,161],136:[2,161]},{5:[2,162],131:[2,162],132:[2,162],136:[2,162]},{5:[2,163],131:[2,163],132:[2,163],136:[2,163]},{5:[2,164],131:[2,164],132:[2,164],136:[2,164]},{5:[2,165],131:[2,165],132:[2,165],136:[2,165]},{5:[2,166],131:[2,166],132:[2,166],136:[2,166]},{5:[2,167],131:[2,167],132:[2,167],136:[2,167]},{5:[2,168],131:[2,168],132:[2,168],136:[2,168]},{5:[2,169],131:[2,169],132:[2,169],136:[2,169]},{5:[2,170],131:[2,170],132:[2,170],136:[2,170]},{5:[2,171],131:[2,171],132:[2,171],136:[2,171]},{5:[2,172],131:[2,172],132:[2,172],136:[2,172]},{5:[2,173],131:[2,173],132:[2,173],136:[2,173]},{5:[2,184],131:[2,184],132:[2,184],136:[2,184]},{5:[2,185],131:[2,185],132:[2,185],136:[2,185]},{5:[2,174],131:[2,174],132:[2,174],136:[2,174]},{5:[2,84],131:[2,84],132:[2,84],136:[2,84]},{5:[2,85],100:[1,220],101:[1,221],102:[1,222],103:[1,223],104:[1,224],131:[2,85],132:[2,85],136:[2,85]},{5:[2,91],131:[2,91],132:[2,91],136:[2,91]},{106:[1,225],107:[1,226],108:[1,227],111:[1,228],112:[1,229]},{5:[2,100],100:[1,230],101:[1,231],102:[1,232],103:[1,233],104:[1,234],131:[2,100],132:[2,100],136:[2,100]},{101:[1,235],103:[1,236],112:[1,237],114:[1,238]},{5:[2,114],101:[1,239],103:[1,240],131:[2,114],132:[2,114],136:[2,114]},{5:[2,119],107:[1,241],131:[2,119],132:[2,119],136:[2,119]},{114:[1,243],118:[1,242],119:[1,244]},{5:[2,127],131:[2,127],132:[2,127],136:[2,127]},{5:[2,128],100:[1,245],101:[1,246],102:[1,247],103:[1,248],104:[1,249],131:[2,128],132:[2,128],136:[2,128]},{5:[2,137],131:[2,137],132:[2,137],136:[2,137]},{5:[2,138],131:[2,138],132:[2,138],136:[2,138]},{5:[2,139],101:[1,250],103:[1,251],131:[2,139],132:[2,139],136:[2,139]},{5:[2,142],131:[2,142],132:[2,142],136:[2,142]},{5:[2,143],131:[2,143],132:[2,143],136:[2,143]},{5:[2,144],131:[2,144],132:[2,144],136:[2,144]},{126:[1,252],127:[1,253]},{5:[2,149],107:[1,254],131:[2,149],132:[2,149],136:[2,149]},{5:[2,151],131:[2,151],132:[2,151],136:[2,151]},{5:[2,152],107:[1,255],131:[2,152],132:[2,152],136:[2,152]},{5:[2,154],131:[2,154],132:[2,154],136:[2,154]},{5:[2,155],107:[1,256],131:[2,155],132:[2,155],136:[2,155]},{5:[2,175],131:[2,175],132:[2,175],136:[2,175]},{5:[2,176],131:[2,176],132:[2,176],136:[2,176]},{5:[2,177],131:[2,177],132:[2,177],136:[2,177]},{5:[2,178],131:[2,178],132:[2,178],136:[2,178]},{5:[2,179],131:[2,179],132:[2,179],136:[2,179]},{5:[2,180],131:[2,180],132:[2,180],136:[2,180]},{5:[2,181],131:[2,181],132:[2,181],136:[2,181]},{5:[2,182],131:[2,182],132:[2,182],136:[2,182]},{5:[2,183],131:[2,183],132:[2,183],136:[2,183]},{5:[2,186],131:[2,186],132:[2,186],136:[2,186]},{5:[2,8],131:[2,8],132:[2,8],136:[2,8]},{5:[2,9],131:[2,9],132:[2,9],136:[2,9]},{5:[2,187],131:[2,187],132:[2,187],136:[2,187]},{5:[2,188],131:[2,188],132:[2,188],136:[2,188]},{5:[2,189],131:[2,189],132:[2,189],136:[2,189]},{5:[2,190],131:[2,190],132:[2,190],136:[2,190]},{5:[2,191],131:[2,191],132:[2,191],136:[2,191]},{5:[2,192],131:[2,192],132:[2,192],136:[2,192]},{5:[2,196],131:[2,196],132:[2,196],136:[2,196]},{5:[2,193],131:[2,193],132:[2,193],136:[2,193]},{5:[2,197],131:[2,197],132:[2,197],136:[2,197]},{5:[2,194],131:[2,194],132:[2,194],136:[2,194]},{5:[2,198],131:[2,198],132:[2,198],136:[2,198]},{5:[2,195],131:[2,195],132:[2,195],136:[2,195]},{5:[2,199],131:[2,199],132:[2,199],136:[2,199]},{5:[2,200],131:[2,200],132:[2,200],136:[2,200]},{5:[2,201],131:[2,201],132:[2,201],136:[2,201]},{5:[2,202],131:[2,202],132:[2,202],136:[2,202]},{5:[2,203],131:[2,203],132:[2,203],136:[2,203]},{5:[2,204],131:[2,204],132:[2,204],136:[2,204]},{5:[2,205],131:[2,205],132:[2,205],136:[2,205]},{5:[2,86],131:[2,86],132:[2,86],136:[2,86]},{5:[2,87],131:[2,87],132:[2,87],136:[2,87]},{5:[2,88],131:[2,88],132:[2,88],136:[2,88]},{5:[2,89],131:[2,89],132:[2,89],136:[2,89]},{5:[2,90],131:[2,90],132:[2,90],136:[2,90]},{5:[2,92],107:[1,257],131:[2,92],132:[2,92],136:[2,92]},{5:[2,94],131:[2,94],132:[2,94],136:[2,94]},{109:[1,258],110:[1,259]},{5:[2,97],131:[2,97],132:[2,97],136:[2,97]},{109:[1,260],110:[1,261]},{5:[2,101],131:[2,101],132:[2,101],136:[2,101]},{5:[2,102],131:[2,102],132:[2,102],136:[2,102]},{5:[2,103],131:[2,103],132:[2,103],136:[2,103]},{5:[2,104],131:[2,104],132:[2,104],136:[2,104]},{5:[2,105],131:[2,105],132:[2,105],136:[2,105]},{5:[2,106],107:[1,262],131:[2,106],132:[2,106],136:[2,106]},{5:[2,108],107:[1,263],131:[2,108],132:[2,108],136:[2,108]},{5:[2,110],107:[1,264],131:[2,110],132:[2,110],136:[2,110]},{5:[2,112],107:[1,265],131:[2,112],132:[2,112],136:[2,112]},{5:[2,115],107:[1,266],131:[2,115],132:[2,115],136:[2,115]},{5:[2,117],107:[1,267],131:[2,117],132:[2,117],136:[2,117]},{5:[2,120],131:[2,120],132:[2,120],136:[2,120]},{5:[2,121],107:[1,268],131:[2,121],132:[2,121],136:[2,121]},{5:[2,123],107:[1,269],131:[2,123],132:[2,123],136:[2,123]},{5:[2,125],107:[1,270],131:[2,125],132:[2,125],136:[2,125]},{5:[2,129],107:[1,271],131:[2,129],132:[2,129],136:[2,129]},{5:[2,131],131:[2,131],132:[2,131],136:[2,131]},{5:[2,132],107:[1,272],131:[2,132],132:[2,132],136:[2,132]},{5:[2,134],131:[2,134],132:[2,134],136:[2,134]},{5:[2,135],107:[1,273],131:[2,135],132:[2,135],136:[2,135]},{5:[2,140],131:[2,140],132:[2,140],136:[2,140]},{5:[2,141],131:[2,141],132:[2,141],136:[2,141]},{5:[2,145],107:[1,274],131:[2,145],132:[2,145],136:[2,145]},{5:[2,147],107:[1,275],131:[2,147],132:[2,147],136:[2,147]},{5:[2,150],131:[2,150],132:[2,150],136:[2,150]},{5:[2,153],131:[2,153],132:[2,153],136:[2,153]},{5:[2,156],131:[2,156],132:[2,156],136:[2,156]},{5:[2,93],131:[2,93],132:[2,93],136:[2,93]},{5:[2,95],131:[2,95],132:[2,95],136:[2,95]},{5:[2,96],131:[2,96],132:[2,96],136:[2,96]},{5:[2,98],131:[2,98],132:[2,98],136:[2,98]},{5:[2,99],131:[2,99],132:[2,99],136:[2,99]},{5:[2,107],131:[2,107],132:[2,107],136:[2,107]},{5:[2,109],131:[2,109],132:[2,109],136:[2,109]},{5:[2,111],131:[2,111],132:[2,111],136:[2,111]},{5:[2,113],131:[2,113],132:[2,113],136:[2,113]},{5:[2,116],131:[2,116],132:[2,116],136:[2,116]},{5:[2,118],131:[2,118],132:[2,118],136:[2,118]},{5:[2,122],131:[2,122],132:[2,122],136:[2,122]},{5:[2,124],131:[2,124],132:[2,124],136:[2,124]},{5:[2,126],131:[2,126],132:[2,126],136:[2,126]},{5:[2,130],131:[2,130],132:[2,130],136:[2,130]},{5:[2,133],131:[2,133],132:[2,133],136:[2,133]},{5:[2,136],131:[2,136],132:[2,136],136:[2,136]},{5:[2,146],131:[2,146],132:[2,146],136:[2,146]},{5:[2,148],131:[2,148],132:[2,148],136:[2,148]}],
defaultActions: {98:[2,1],107:[2,6],108:[2,7],109:[2,2],110:[2,3],111:[2,4],112:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


function parseIpPort(yy, ipPortStr, which) {
  ipPortStr = ipPortStr.trim();
  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }

  var t1 = {and: []};
  var t2 = {and: []};
  var xff;
  var dns;
  var email;

  if (ip1 !== -1) {
    if (ip1 === ip2) {
        t1.and.push({term: {a1: ip1>>>0}});
        t2.and.push({term: {a2: ip1>>>0}});
        dns   = {term: {dnsip: ip1>>>0}};
        email = {term: {eip: ip1>>>0}};
        xff   = {term: {xff: ip1>>>0}};
    } else {
        t1.and.push({range: {a1: {from: ip1>>>0, to: ip2>>>0}}});
        t2.and.push({range: {a2: {from: ip1>>>0, to: ip2>>>0}}});
        dns =    {range: {dnsip: {from: ip1>>>0, to: ip2>>>0}}};
        email =  {range: {eip: {from: ip1>>>0, to: ip2>>>0}}};
        xff =    {range: {xff: {from: ip1>>>0, to: ip2>>>0}}};
    }
  }

  if (port !== -1) {
    t1.and.push({term: {p1: port}});
    t2.and.push({term: {p2: port}});
  }

  if (t1.and.length === 1) {
      t1 = t1.and[0];
      t2 = t2.and[0];
  }

  switch(which) {
  case 0:
    var ors = [t1, t2];

    if (xff)
        ors.push(xff);
    if (dns)
        ors.push(dns);
    if (yy.emailSearch === true && email)
        ors.push(email);

    return {or: ors};
  case 1:
    return t1;
  case 2:
    return t2;
  case 3:
    if (!xff)
        throw "xff doesn't support port only";
    return xff;
  case 4:
    if (!dns)
        throw "dns doesn't support port only";
    return dns;
  case 5:
    if (!email)
        throw "email doesn't support port only";
    return email;
  }
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}

var field2RawField = {
    us: "rawus",
    ua: "rawua",
    as1: "rawas1",
    as2: "rawas2",
    asxff: "rawasff",
    asdnsip: "rawasdnsip",
    iOn: "rawiOn",
    eua: "raweua",
    esub: "rawesub",
    aseip: "rawaseip"
}

function str2Query(field, kind, str)
{
    var obj;

    if (str[0] === "/" && str[str.length -1] === "/") {
        field = field2RawField[field] || field;
        obj = {query: {regexp: {}}};
        obj.query.regexp[field] = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        return obj;
    }

    if (str[0] === "\"" && str[str.length -1] === "\"") {
        str = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
    }

    if (str.indexOf("*") !== -1) {
        field = field2RawField[field] || field;
        obj = {query: {wildcard: {}}};
        obj.query.wildcard[field] = str;
    } else if (kind === "text") {
        obj = {query: {text: {}}};
        obj.query.text[field] = {query: str, type: "phrase", operator: "and"}
    } else if (kind === "term") {
        obj = {term: {}};
        obj.term[field] = str;
    }
    return obj;
}
/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 15
break;
case 2:return 14
break;
case 3:return 99
break;
case 4:return 80
break;
case 5:return 79
break;
case 6:return 78
break;
case 7:return 81
break;
case 8:if (!yy.emailSearch) throw "email searches disabled for user"; return 82
break;
case 9:return 18
break;
case 10:return "cert.alt.cnt"
break;
case 11:return "cert.alt"
break;
case 12:return "cert.cnt"
break;
case 13:return "cert.issuer.cn"
break;
case 14:return "cert.issuer.on"
break;
case 15:return "cert.serial"
break;
case 16:return "cert.subject.cn"
break;
case 17:return "cert.subject.on"
break;
case 18:return 113
break;
case 19:return 76
break;
case 20:return 73
break;
case 21:return 72
break;
case 22:return 74
break;
case 23:if (!yy.emailSearch) throw "email searches disabled for user"; return 75
break;
case 24:return 17
break;
case 25:if (!yy.emailSearch) throw "email searches disabled for user"; return 36
break;
case 26:if (!yy.emailSearch) throw "email searches disabled for user"; return 68
break;
case 27:if (!yy.emailSearch) throw "email searches disabled for user"; return 37
break;
case 28:if (!yy.emailSearch) throw "email searches disabled for user"; return 54
break;
case 29:if (!yy.emailSearch) throw "email searches disabled for user"; return 38
break;
case 30:if (!yy.emailSearch) throw "email searches disabled for user"; return 67
break;
case 31:if (!yy.emailSearch) throw "email searches disabled for user"; return 39
break;
case 32:if (!yy.emailSearch) throw "email searches disabled for user"; return 64
break;
case 33:if (!yy.emailSearch) throw "email searches disabled for user"; return 40
break;
case 34:if (!yy.emailSearch) throw "email searches disabled for user"; return 65
break;
case 35:if (!yy.emailSearch) throw "email searches disabled for user"; return 41
break;
case 36:if (!yy.emailSearch) throw "email searches disabled for user"; return 66
break;
case 37:if (!yy.emailSearch) throw "email searches disabled for user"; return 42
break;
case 38:if (!yy.emailSearch) throw "email searches disabled for user"; return 55
break;
case 39:if (!yy.emailSearch) throw "email searches disabled for user"; return 43
break;
case 40:if (!yy.emailSearch) throw "email searches disabled for user"; return 83
break;
case 41:if (!yy.emailSearch) throw "email searches disabled for user"; return 44
break;
case 42:if (!yy.emailSearch) throw "email searches disabled for user"; return 84
break;
case 43:return "file"
break;
case 44:return "header.dst.cnt"
break;
case 45:return "header.dst"
break;
case 46:return "header"
break;
case 47:return "header.src.cnt"
break;
case 48:return "header.src"
break;
case 49:return "host.dns.cnt"
break;
case 50:return "host.dns"
break;
case 51:return "host.email.cnt"
break;
case 52:return "host.email"
break;
case 53:return "host.http.cnt"
break;
case 54:return "host.http"
break;
case 55:return "host"
break;
case 56:return "http.md5.cnt"
break;
case 57:return "http.md5"
break;
case 58:return "http.uri.cnt"
break;
case 59:return "http.uri"
break;
case 60:return "http.ua.cnt"
break;
case 61:return "http.ua"
break;
case 62:return "icmp"
break;
case 63:return "icmp"
break;
case 64:return "id"
break;
case 65:return "ip.dns.cnt"
break;
case 66:return "ip.dns"
break;
case 67:return "ip.dst"
break;
case 68:return "ip"
break;
case 69:return "ip.src"
break;
case 70:return "ip.xff.cnt"
break;
case 71:return "ip.xff"
break;
case 72:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email.cnt"
break;
case 73:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email"
break;
case 74:return 49
break;
case 75:return "oldheader"
break;
case 76:return 19
break;
case 77:return 21
break;
case 78:return 121
break;
case 79:return 20
break;
case 80:return 122
break;
case 81:return "rootId"
break;
case 82:return "ssh.key.cnt"
break;
case 83:return "ssh.key"
break;
case 84:return "ssh.ver.cnt"
break;
case 85:return "ssh.ver"
break;
case 86:return 35
break;
case 87:return 128
break;
case 88:return "tcp"
break;
case 89:return "tcp"
break;
case 90:return "http.ua.cnt"
break;
case 91:return "http.ua"
break;
case 92:return "udp"
break;
case 93:return "udp"
break;
case 94:return "http.uri.cnt"
break;
case 95:return "http.uri"
break;
case 96:return "user.cnt"
break;
case 97:return "user"
break;
case 98:return 98
break;
case 99:return 123
break;
case 100:return 124
break;
case 101:return 8
break;
case 102:return 7
break;
case 103:return 11
break;
case 104:return 10
break;
case 105:return 138
break;
case 106:return 137
break;
case 107:return 137
break;
case 108:return 132
break;
case 109:return 132
break;
case 110:return 131
break;
case 111:return 131
break;
case 112:return 135
break;
case 113:return 136
break;
case 114:return 133
break;
case 115:return 5
break;
case 116:return 'INVALID'
break;
case 117:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:[0-9]+\b)/,/^(?:([0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\/[0-9]{1,2})?(:[0-9]{1,5})?\b)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:asn\.email)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:country\.email)/,/^(?:databytes)/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:file)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:host\.dns\.cnt)/,/^(?:host\.dns)/,/^(?:host\.email\.cnt)/,/^(?:host\.email)/,/^(?:host\.http\.cnt)/,/^(?:host\.http)/,/^(?:host)/,/^(?:http\.md5\.cnt)/,/^(?:http\.md5)/,/^(?:http\.uri\.cnt)/,/^(?:http\.uri)/,/^(?:http\.ua\.cnt)/,/^(?:http\.ua)/,/^(?:icmp)/,/^(?:"icmp")/,/^(?:id)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:ip\.email\.cnt)/,/^(?:ip\.email)/,/^(?:node)/,/^(?:oldheader)/,/^(?:packets)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rootId)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:"tcp")/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:udp)/,/^(?:"udp")/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"\\]*(?:\\.[^"\\]*)*")/,/^(?:\/[^/\\]*(?:\\.[^/\\]*)*\/)/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}